
array.c,4974
# define NDEBUG19,494
VALUE rb_cArray;23,538
static ID id_cmp;25,556
#define ARY_DEFAULT_SIZE 27,575
#define ARY_MAX_SIZE 28,603
rb_mem_clear(32,658
memfill(40,779
# define ARY_SHARED_P(47,895
# define ARY_EMBED_P(50,1034
#define ARY_HEAP_PTR(54,1180
#define ARY_HEAP_LEN(55,1254
#define ARY_EMBED_PTR(56,1328
#define ARY_EMBED_LEN(57,1397
#define ARY_OWNS_HEAP_P(62,1571
#define FL_SET_EMBED(63,1643
#define FL_UNSET_EMBED(68,1784
#define FL_SET_SHARED(69,1867
#define FL_UNSET_SHARED(73,1978
#define ARY_SET_PTR(75,2035
#define ARY_SET_EMBED_LEN(80,2185
#define ARY_SET_HEAP_LEN(87,2439
#define ARY_SET_LEN(91,2560
#define ARY_INCREASE_PTR(100,2776
#define ARY_INCREASE_LEN(105,2931
#define ARY_CAPA(115,3170
#define ARY_SET_CAPA(117,3320
#define ARY_SHARED(124,3511
#define ARY_SET_SHARED(125,3596
#define RARRAY_SHARED_ROOT_FLAG 131,3805
#define ARY_SHARED_ROOT_P(132,3846
#define ARY_SHARED_NUM(133,3917
#define ARY_SET_SHARED_NUM(135,4015
#define FL_SET_SHARED_ROOT(139,4158
ary_resize_capa(145,4299
rb_ary_decrement_share(177,5250
rb_ary_unshare(192,5509
rb_ary_unshare_safe(200,5673
rb_ary_increment_share(207,5800
rb_ary_set_shared(216,5975
rb_ary_modify_check(224,6135
rb_ary_modify(232,6349
rb_ary_freeze(257,7063
rb_ary_frozen_p(271,7302
ary_alloc(278,7405
ary_new(289,7605
rb_ary_new2(311,8068
rb_ary_new(318,8138
rb_ary_new3(326,8233
rb_ary_new4(345,8492
rb_ary_tmp_new(359,8696
rb_ary_free(365,8759
ary_make_shared(373,8863
ary_make_substitution(397,9389
rb_assoc_new(411,9772
to_ary(417,9862
rb_check_array_type(423,9952
rb_ary_s_try_convert(449,10614
rb_ary_initialize(493,11792
rb_ary_s_create(557,13111
rb_ary_store(569,13346
ary_make_partial(607,14190
ary_make_shared_copy(635,14962
enum ary_take_pos_flags640,15072
    ARY_TAKE_FIRST 642,15098
    ARY_TAKE_LAST 643,15122
ary_take_first_or_last(647,15161
rb_ary_push(681,15937
rb_ary_push_m(701,16396
rb_ary_pop(711,16556
rb_ary_pop_m(745,17388
rb_ary_shift(760,17684
rb_ary_shift_m(806,18920
rb_ary_unshift_m(842,19698
rb_ary_unshift(861,20142
rb_ary_elt(868,20322
rb_ary_entry(878,20518
rb_ary_subseq(887,20658
rb_ary_aref(936,22235
rb_ary_at(983,23290
rb_ary_first(1003,23779
rb_ary_last(1028,24330
rb_ary_fetch(1060,25328
rb_ary_index(1105,26512
rb_ary_rindex(1143,27432
rb_ary_to_ary(1171,27962
rb_ary_splice(1183,28165
rb_ary_aset(1269,30801
rb_ary_insert(1311,31799
rb_ary_each(1346,32493
rb_ary_each_index(1373,32993
rb_ary_reverse_each(1400,33450
rb_ary_length(1425,33877
rb_ary_empty_p(1441,34153
rb_ary_dup(1449,34254
recursive_join(1464,34592
rb_ary_join(1474,34785
rb_ary_join_m(1538,36337
inspect_ary(1549,36540
rb_ary_inspect(1580,37271
rb_ary_to_s(1587,37423
rb_ary_to_a(1601,37654
rb_ary_to_ary_m(1619,37918
rb_ary_reverse(1625,37972
rb_ary_reverse_bang(1656,38498
rb_ary_reverse_m(1672,38821
struct ary_sort_data 1677,38898
    sort_opt_Fixnum,1684,38988
    sort_opt_String,1685,39009
    sort_optimizable_count1686,39030
#define STRING_P(1689,39061
#define SORT_OPTIMIZABLE_BIT(1691,39133
#define SORT_OPTIMIZABLE(1692,39204
sort_reentered(1700,39560
sort_1(1709,39702
sort_2(1723,40043
rb_ary_sort_bang(1763,41211
rb_ary_sort(1839,43790
rb_ary_collect(1862,44372
rb_ary_collect_bang(1891,45067
rb_get_values_at(1904,45299
rb_ary_values_at(1948,46374
rb_ary_select(1967,46901
rb_ary_delete(2000,47812
rb_ary_delete_at(2037,48423
rb_ary_delete_at_m(2072,49220
rb_ary_slice_bang(2097,49932
rb_ary_reject_bang(2152,51253
rb_ary_reject(2182,51842
rb_ary_delete_if(2202,52251
take_i(2210,52376
take_items(2219,52586
rb_ary_zip(2254,53793
rb_ary_transpose(2297,54620
rb_ary_replace(2337,55662
rb_ary_clear(2388,56914
rb_ary_fill(2423,58236
rb_ary_plus(2504,59937
rb_ary_concat(2529,60471
rb_ary_times(2555,61000
rb_ary_assoc(2611,62353
rb_ary_rassoc(2640,63096
VALUE patern_match(2654,63364
recursive_patern(2662,63585
recursive_equal(2675,63858
rb_patern_match(2701,64555
rb_ary_equal(2714,64922
recursive_eql(2728,65288
rb_ary_eql(2749,65740
recursive_hash(2758,66006
rb_ary_hash(2784,66531
rb_ary_includes(2803,66970
recursive_cmp(2817,67175
rb_ary_cmp(2856,68340
ary_make_hash(2872,68729
rb_ary_diff(2901,69401
rb_ary_and(2929,69971
rb_ary_or(2964,70723
rb_ary_uniq_bang(3004,71629
rb_ary_uniq(3036,72237
rb_ary_compact_bang(3055,72622
rb_ary_compact(3091,73320
rb_ary_count(3116,73913
flatten(3146,74497
rb_ary_flatten_bang(3218,76300
rb_ary_flatten(3253,77377
rb_ary_shuffle_bang(3277,77830
rb_ary_shuffle(3303,78332
rb_ary_sample(3324,78745
rb_ary_cycle(3411,81047
#define tmpbuf(3435,81513
permute0(3450,82094
rb_ary_permutation(3505,84024
combi_len(3545,85273
rb_ary_combination(3589,86480
rb_ary_product(3649,88101
rb_ary_take(3721,90057
rb_ary_take_while(3743,90565
rb_ary_drop(3767,91047
rb_ary_drop_while(3794,91690
Init_Array(3815,92244
#undef rb_intern3817,92263
#define rb_intern(3818,92280

bignum.c,3323
VALUE rb_cBignum;21,398
#define USHORT 24,441
#define BDIGITS(27,472
#define BITSPERDIG 28,511
#define BIGRAD 29,556
#define DIGSPERLONG 30,601
# define DIGSPERLL 32,685
#define BIGUP(34,761
#define BIGDN(35,810
#define BIGLO(36,848
#define BDIGMAX 37,894
#define BIGZEROP(39,924
bigzero_p(44,1062
rb_cmpint(54,1200
#define RBIGNUM_SET_LEN(75,1684
rb_big_realloc(82,1927
rb_big_resize(116,2768
bignew_1(123,2882
#define bignew(139,3226
rb_big_clone(142,3288
get2comp(152,3512
rb_big_2comp(174,3899
bigtrunc(180,3983
bigfixize(192,4182
bignorm(215,4592
rb_big_norm(224,4716
rb_uint2big(230,4771
rb_int2big(251,5123
rb_uint2inum(268,5327
rb_int2inum(275,5430
rb_quad_pack(284,5557
rb_quad_unpack(311,6017
#define QUAD_SIZE 351,6708
rb_quad_pack(354,6734
#define BNEG(377,7209
rb_quad_unpack(380,7301
rb_cstr_to_inum(402,7662
#define conv_digit(414,7892
rb_str_to_inum(598,11232
rb_ull2big(626,11700
rb_ll2big(647,12065
rb_ull2inum(664,12264
rb_ll2inum(671,12378
rb_cstr2inum(680,12508
rb_str2inum(686,12607
const char ruby_digitmap[ruby_digitmap691,12692
#define POW2_P(696,12860
ones(699,12916
# define MASK_55 702,12970
# define MASK_33 703,13008
# define MASK_0f 704,13046
# define MASK_55 706,13090
# define MASK_33 707,13120
# define MASK_0f 708,13150
#undef MASK_0f719,13411
#undef MASK_33720,13426
#undef MASK_55721,13441
next_pow2(725,13487
floor_log2(739,13696
ceil_log2(753,13917
#define LOG2_KARATSUBA_DIGITS 758,13997
#define KARATSUBA_DIGITS 759,14029
#define MAX_BIG2STR_TABLE_ENTRIES 760,14082
static VALUE big2str_power_cache[big2str_power_cache762,14120
power_cache_init(765,14198
power_cache_get_power0(776,14390
power_cache_get_power(788,14771
big2str_find_n1(825,15737
big2str_orig(863,16871
big2str_karatsuba(895,17558
rb_big2str0(926,18219
rb_big2str(972,19238
rb_big_to_s(992,19761
big2ulong(1007,19985
rb_big2ulong_pack(1028,20367
rb_big2ulong(1038,20524
rb_big2long(1052,20787
big2ull(1067,21136
rb_big2ull(1085,21494
rb_big2ll(1094,21648
dbl2big(1109,22007
rb_dbl2big(1141,22514
nlz(1147,22583
big2dbl(1168,23045
rb_big2dbl(1210,23871
rb_big_to_f(1234,24259
rb_big_cmp(1250,24586
rb_big_eq(1303,25883
rb_big_eql(1341,26785
rb_big_uminus(1358,27201
rb_big_neg(1380,27689
bigsub(1400,28063
bigadd(1446,28976
rb_big_plus(1496,29899
rb_big_minus(1521,30328
rb_big_stop(1539,30656
struct big_mul_struct 1545,30734
bigmul1(1550,30800
rb_big_mul0(1581,31471
rb_big_mul(1624,32243
struct big_div_struct 1629,32316
bigdivrem1(1636,32413
bigdivrem(1681,33594
bigdivmod(1795,36020
rb_big_divide(1811,36343
rb_big_div(1850,36912
rb_big_idiv(1856,36987
rb_big_modulo(1871,37252
rb_big_remainder(1901,37813
rb_big_divmod(1929,38218
bdigbitsize(1950,38562
static VALUE big_shift(1973,38917
rb_big_fdiv(1995,39387
#define DBL_BIGDIG 2001,39484
bigsqr(2049,40590
rb_big_pow(2109,42190
bit_coerce(2159,43204
rb_big_and(2178,43534
rb_big_or(2233,44553
rb_big_xor(2290,45592
check_shiftdown(2343,46617
rb_big_lshift(2360,46971
big_lshift(2391,47496
rb_big_rshift(2424,48130
big_rshift(2457,48673
rb_big_aref(2519,49912
rb_big_hash(2567,50817
rb_big_coerce(2580,51015
rb_big_abs(2606,51513
rb_big_size(2628,51887
rb_big_odd_p(2641,52102
rb_big_even_p(2657,52337
Init_Bignum(2684,53112

blockinlining.c,381
iseq_special_block(15,286
new_block(56,1187
new_ary(65,1341
new_assign(73,1465
build_Integer_times_node(108,2274
invoke_Integer_times_special_block(182,3802
build_Range_each_node(213,4527
build_Range_each_node_LE(285,6056
build_Range_each_node_LT(293,6272
invoke_Range_each_special_block(301,6480
build_Array_each_node(336,7288
invoke_Array_each_special_block(435,9347

class.c,1595
class_alloc(20,395
rb_class_boot(34,715
rb_check_inheritable(46,939
rb_class_new(58,1240
struct clone_method_data 68,1463
clone_method(76,1594
rb_mod_init_copy(102,2146
rb_class_init_copy(131,2907
rb_singleton_class_clone(143,3202
rb_singleton_class_attached(177,4069
make_metametaclass(191,4367
rb_make_metaclass(226,5574
rb_define_class_id(249,6126
rb_class_inherited(261,6334
rb_define_class(270,6533
rb_define_class_under(299,7249
rb_module_new(328,7972
rb_define_module_id(338,8123
rb_define_module(349,8249
rb_define_module_under(369,8711
include_class_new(390,9218
rb_include_module(416,9850
rb_mod_included_modules(479,11362
rb_mod_include_p(512,12005
rb_mod_ancestors(542,12600
#define VISI(559,12896
#define VISI_CHECK(560,12928
ins_methods_push(563,12981
ins_methods_i(584,13365
ins_methods_prot_i(590,13505
ins_methods_priv_i(596,13633
ins_methods_pub_i(602,13759
method_entry(608,13883
class_instance_method_list(629,14255
rb_class_instance_methods(686,15800
rb_class_protected_instance_methods(701,16218
rb_class_private_instance_methods(724,16873
rb_class_public_instance_methods(739,17298
rb_obj_singleton_methods(777,18180
rb_define_method_id(808,18930
rb_define_method(814,19083
rb_define_protected_method(820,19254
rb_define_private_method(826,19438
rb_undef_method(832,19618
#define SPECIAL_SINGLETON(837,19728
rb_singleton_class(844,19826
rb_define_singleton_method(888,20818
rb_define_module_function(894,20983
rb_define_global_function(901,21199
rb_define_alias(907,21348
rb_define_attr(913,21482
rb_scan_args(921,21637

compar.c,290
VALUE rb_mComparable;14,292
static ID cmp;16,315
rb_cmperr(19,336
cmp_eq(35,650
cmp_failed(45,837
cmp_equal(60,1132
cmp_gt(79,1481
cmp_ge(96,1812
cmp_lt(113,2139
cmp_le(130,2471
cmp_between(154,3104
Init_Comparable(199,4523
#undef rb_intern201,4547
#define rb_intern(202,4564

compile.c,6469
#define USE_INSN_STACK_INCREASE 14,324
typedef struct iseq_link_element 21,446
	ISEQ_ELEMENT_NONE 23,492
	ISEQ_ELEMENT_NONE   = INT2FIX(23,492
	ISEQ_ELEMENT_NONE   = INT2FIX(0x00)x0023,492
	ISEQ_ELEMENT_LABEL 24,530
	ISEQ_ELEMENT_LABEL  = INT2FIX(24,530
	ISEQ_ELEMENT_LABEL  = INT2FIX(0x01)x0124,530
	ISEQ_ELEMENT_INSN 25,568
	ISEQ_ELEMENT_INSN   = INT2FIX(25,568
	ISEQ_ELEMENT_INSN   = INT2FIX(0x02)x0225,568
	ISEQ_ELEMENT_ADJUST 26,606
	ISEQ_ELEMENT_ADJUST = INT2FIX(26,606
	ISEQ_ELEMENT_ADJUST = INT2FIX(0x03)x0326,606
} LINK_ELEMENT;30,727
typedef struct iseq_link_anchor 32,744
} LINK_ANCHOR;35,827
typedef struct iseq_label_data 37,843
} LABEL;44,978
typedef struct iseq_insn_data 46,988
} INSN;53,1156
typedef struct iseq_adjust_data 55,1165
} ADJUST;59,1257
struct ensure_range 61,1268
struct iseq_compile_data_ensure_node_stack 67,1359
#define CPDEBUG 87,1817
#define compile_debug 91,1860
#define compile_debug 93,1896
#define compile_debug_print_indent(100,2066
#define debugp(103,2180
#define debugi(107,2318
#define debugp_param(111,2448
#define debugp_verbose(115,2593
#define debugp_verbose_node(119,2740
#define debug_node_start(123,2894
#define debug_node_end(128,3071
r_id(133,3140
r_value(139,3192
#define debugi(144,3236
#define debugp(145,3288
#define debugp_verbose(146,3346
#define debugp_verbose_node(147,3404
#define debugp_param(148,3462
#define debug_node_start(149,3520
#define debug_node_end(150,3573
#define debugs 155,3726
#define debug_compile(156,3794
#define debugs 158,3897
#define debug_compile(159,3952
#define NEW_LABEL(164,4018
#define iseq_filename(166,4064
#define NEW_ISEQVAL(169,4138
#define NEW_CHILD_ISEQVAL(172,4229
#define NEW_SPECIAQL_BLOCK_ISEQVAL(175,4335
#define ADD_SEQ(179,4490
#define ADD_INSN(183,4572
#define ADD_INSNL(187,4727
#define ADD_INSN1(192,4930
#define ADD_INSN2(196,5072
#define ADD_INSN3(200,5231
#define ADD_SEND(205,5435
#define ADD_CALL_RECEIVER(208,5544
#define ADD_CALL(211,5614
#define ADD_CALL_WITH_BLOCK(214,5739
#define ADD_SEND_R(217,5874
#define ADD_TRACE(222,6081
#define ADD_LABEL(235,6526
#define ADD_ADJUST(238,6599
#define ADD_ADJUST_RESTORE(241,6708
#define ADD_CATCH_ENTRY(244,6817
#define COMPILE(251,7053
#define COMPILE_POPED(256,7240
#define COMPILE_(261,7440
#define OPERAND_AT(265,7588
#define INSN_OF(268,7656
#define COMPILE_ERROR(272,7722
#define ERROR_ARGS 284,8266
#define COMPILE_OK 287,8319
#define COMPILE_NG 288,8340
#define DECL_ANCHOR(293,8445
#define INIT_ANCHOR(295,8518
#define hide_obj(298,8617
#define ISEQ_ARG 307,8816
#define ISEQ_ARG_DECLARE 308,8839
#define ISEQ_ARG310,8887
#define ISEQ_ARG_DECLARE311,8904
#define gl_node_level 315,8949
verify_list(352,10375
#define verify_list(380,10894
ADD_ELEM(387,11025
#define ADD_ELEM(395,11231
iseq_add_mark_object(399,11310
#define ruby_sourcefile	407,11455
iseq_add_mark_object_compile_time(410,11520
rb_iseq_compile_node(419,11698
rb_iseq_translate_threaded_code(507,14096
compile_data_alloc(538,14980
compile_data_alloc_insn(568,15718
compile_data_alloc_label(574,15838
compile_data_alloc_adjust(580,15962
INSERT_ELEM_NEXT(589,16131
INSERT_ELEM_PREV(604,16410
REPLACE_ELEM(619,16684
REMOVE_ELEM(632,16932
FIRST_ELEMENT(641,17086
LAST_ELEMENT(648,17199
POP_ELEMENT(655,17290
#define POP_ELEMENT(664,17515
SHIFT_ELEMENT(669,17618
LIST_SIZE(681,17815
LIST_SIZE_ZERO(694,18007
APPEND_LIST(712,18243
#define APPEND_LIST(722,18502
INSERT_LIST(733,18686
#define INSERT_LIST(751,19082
SWAP_LIST(763,19268
#define SWAP_LIST(775,19505
REVERSE_LIST(779,19592
#define REVERSE_LIST(809,20115
debug_list(815,20209
#define debug_list(832,20712
new_label_body(837,20788
new_adjust_body(851,21111
new_insn_core(862,21387
new_insn_body(878,21765
new_insn_send(896,22201
new_child_iseq(912,22617
iseq_setup(926,23065
iseq_set_exception_local_table(978,24557
get_dyna_var_idx_at_raw(991,24879
get_local_var_idx(1008,25261
get_match_var_idx(1020,25488
get_dyna_var_idx(1026,25680
iseq_set_arguments(1049,26043
iseq_set_local_table(1199,29753
cdhash_cmp(1231,30361
cdhash_hash(1247,30702
static const struct st_hash_type cdhash_type 1257,30890
iseq_set_sequence(1266,31048
label_get_position(1538,37306
label_get_sp(1544,37381
iseq_set_exception_table(1550,37444
iseq_set_optargs_table(1607,38786
get_destination_insn(1621,39053
get_next_insn(1637,39368
get_prev_insn(1651,39621
iseq_peephole_optimize(1665,39863
insn_set_specialized_instruction(1782,42511
insn_set_specialized_instruction_with_ic(1790,42665
iseq_specialized_instruction(1806,42931
iseq_optimize(1882,45018
new_unified_insn(1910,45836
iseq_insns_unification(1950,46734
#define SC_INSN(2001,47905
#define SC_NEXT(2002,47962
insn_set_sc_state(2007,48044
label_set_sc_state(2045,48906
iseq_set_sequence_stackcaching(2063,49136
compile_dstr_fragments(2161,51014
compile_dstr(2181,51428
compile_dregx(2190,51656
compile_branch_condition(2199,51905
static void var2sym(2242,53251
static int compile_paternmatch(2270,53876
compile_patern_array_(2315,55017
compile_array_(2381,56497
compile_array(2436,57738
case_when_optimizable_literal(2442,57894
paternmatch_setlocal(2458,58189
when_vals_patern(2499,59322
when_vals_ar(2519,59788
when_vals(2552,60535
compile_massign_lhs(2579,61204
compile_massign_opt_lhs(2621,62222
compile_massign_opt(2630,62431
#define MEMORY(2640,62686
compile_massign(2695,63671
compile_colon2(2753,65026
compile_cpath(2780,65852
defined_expr(2800,66340
#define BUFSIZE 2999,71426
make_name_for_block(3002,71462
push_ensure_entry(3025,71903
add_ensure_range(3036,72215
add_ensure_iseq(3054,72592
setup_args(3089,73513
iseq_compile_each(3183,75563
insn_data_length(5271,129222
calc_sp_depth(5277,129303
insn_data_line_no(5283,129426
insn_data_to_s_detail(5289,129510
dump_disasm_list(5353,131016
rb_insns_name_array(5400,131977
register_label(5411,132246
get_exception_sym2type(5428,132629
#undef rb_intern5430,132665
#define rb_intern(5431,132682
iseq_build_exception(5456,133534
insn_make_insn_table(5491,134422
iseq_build_body(5505,134661
#define CHECK_ARRAY(5634,137879
#define CHECK_STRING(5635,137951
#define CHECK_SYMBOL(5636,138025
static inline VALUE CHECK_INTEGER(5637,138099
rb_iseq_build_from_ary(5640,138174
rb_dvar_defined(5716,140365
rb_local_defined(5741,140909
rb_parse_in_eval(5760,141226
rb_parse_in_main(5766,141302

complex.c,5195
#define NDEBUG11,185
#define ZERO 14,221
#define ONE 15,245
#define TWO 16,268
VALUE rb_cComplex;18,292
static ID id_abs,20,312
static ID id_abs, id_abs2,20,312
static ID id_abs, id_abs2, id_arg,20,312
static ID id_abs, id_abs2, id_arg, id_cmp,20,312
static ID id_abs, id_abs2, id_arg, id_cmp, id_conj,20,312
static ID id_abs, id_abs2, id_arg, id_cmp, id_conj, id_convert,20,312
    id_denominator,21,376
    id_denominator, id_divmod,21,376
    id_denominator, id_divmod, id_equal_p,21,376
    id_denominator, id_divmod, id_equal_p, id_expt,21,376
    id_denominator, id_divmod, id_equal_p, id_expt, id_floor,21,376
    id_denominator, id_divmod, id_equal_p, id_expt, id_floor, id_hash,21,376
    id_idiv,22,447
    id_idiv, id_inspect,22,447
    id_idiv, id_inspect, id_negate,22,447
    id_idiv, id_inspect, id_negate, id_numerator,22,447
    id_idiv, id_inspect, id_negate, id_numerator, id_polar,22,447
    id_idiv, id_inspect, id_negate, id_numerator, id_polar, id_quo,22,447
    id_real_p,23,515
    id_real_p, id_to_f,23,515
    id_real_p, id_to_f, id_to_i,23,515
    id_real_p, id_to_f, id_to_i, id_to_r,23,515
    id_real_p, id_to_f, id_to_i, id_to_r, id_to_s;23,515
#define f_boolcast(25,567
#define binop(27,613
#define fun1(34,725
#define fun2(41,825
#define math1(48,937
#define math2(55,1048
#define PRESERVE_SIGNEDZERO62,1171
f_add(65,1220
f_cmp(77,1450
f_div(91,1694
f_gt_p(99,1832
f_lt_p(107,2002
binop(114,2152
f_sub(143,2647
binop(152,2800
fun2(182,3209
#define f_positive_p(194,3387
f_zero_p(197,3451
#define f_nonzero_p(204,3580
f_one_p(207,3639
f_kind_of_p(215,3786
k_numeric_p(221,3877
k_integer_p(227,3963
k_float_p(233,4049
k_rational_p(239,4131
k_complex_p(245,4219
#define k_exact_p(250,4285
#define k_inexact_p(251,4322
#define get_dat1(253,4359
#define get_dat2(257,4444
nucomp_s_new_internal(263,4598
nucomp_s_alloc(275,4815
nucomp_s_new_bang(282,4920
f_complex_new_bang1(305,5361
f_complex_new_bang2(312,5507
#define CANON320,5702
static int canonicalization 324,5737
nucomp_canonicalization(327,5776
nucomp_real_check(334,5864
nucomp_s_canonicalize_internal(349,6142
#define CL_CANON352,6225
nucomp_s_new(387,6985
f_complex_new1(406,7348
f_complex_new2(413,7498
nucomp_f_complex(420,7647
#define imp1(425,7766
#define imp2(433,7899
imp2(441,8053
#define m_hypot(447,8109
imp1(457,8268
m_sin(477,8606
m_sqrt(493,8894
f_complex_polar(516,9372
nucomp_s_polar(526,9599
nucomp_real(532,9712
nucomp_imag(539,9796
nucomp_negate(546,9880
nucomp_add(554,10028
nucomp_sub(576,10500
nucomp_mul(598,10972
#define f_div 622,11545
nucomp_div(625,11579
#undef f_div652,12341
#define nucomp_quo 653,12354
nucomp_fdiv(656,12398
nucomp_expt(666,12577
nucomp_equal_p(731,14129
nucomp_coerce(748,14525
nucomp_abs(761,14903
nucomp_abs2(768,15006
nucomp_arg(776,15147
nucomp_rect(783,15255
nucomp_polar(790,15364
nucomp_conj(796,15458
nucomp_true(804,15601
nucomp_false(811,15668
nucomp_exact_p(818,15736
nucomp_inexact_p(825,15870
nucomp_denominator(834,16010
nucomp_numerator(841,16150
nucomp_hash(856,16460
nucomp_eql_p(863,16578
#define HAVE_SIGNBIT 878,16892
f_signbit(883,16950
f_tpositive_p(907,17370
nucomp_format(913,17449
nucomp_to_s(933,17833
nucomp_inspect(939,17915
nucomp_marshal_dump(951,18102
nucomp_marshal_load(962,18279
rb_complex_raw(974,18482
rb_complex_new(980,18579
rb_complex_polar(986,18685
rb_Complex(994,18845
nucomp_to_i(1003,18984
nucomp_to_f(1016,19250
nucomp_to_r(1029,19514
nilclass_to_c(1042,19781
numeric_to_c(1048,19865
static VALUE comp_pat0,1053,19929
static VALUE comp_pat0, comp_pat1,1053,19929
static VALUE comp_pat0, comp_pat1, comp_pat2,1053,19929
static VALUE comp_pat0, comp_pat1, comp_pat2, a_slash,1053,19929
static VALUE comp_pat0, comp_pat1, comp_pat2, a_slash, a_dot_and_an_e,1053,19929
    null_string,1054,20000
    null_string, underscores_pat,1054,20000
    null_string, underscores_pat, an_underscore;1054,20000
#define WS 1056,20050
#define DIGITS 1057,20068
#define NUMERATOR 1058,20106
#define DENOMINATOR 1059,20180
#define NUMBER 1060,20207
#define NUMBERNOS 1061,20266
#define PATTERN0 1062,20320
#define PATTERN1 1063,20377
#define PATTERN2 1064,20435
make_patterns(1067,20523
#define id_match 1102,21670
#define f_match(1103,21706
#define id_aref 1105,21758
#define f_aref(1106,21790
#define id_post_match 1108,21840
#define f_post_match(1109,21886
#define id_split 1111,21943
#define f_split(1112,21979
#define id_include_p 1114,22031
#define f_include_p(1115,22074
#define id_count 1117,22134
#define f_count(1118,22170
#define id_gsub_bang 1120,22222
#define f_gsub_bang(1121,22262
string_to_c_internal(1124,22340
string_to_c_strict(1208,23951
#define id_gsub 1219,24244
#define f_gsub(1220,24278
string_to_c(1223,24346
nucomp_s_convert(1241,24693
numeric_real(1321,26063
numeric_imag(1327,26123
numeric_abs2(1333,26189
#define id_PI 1338,26249
numeric_arg(1349,26465
numeric_rect(1357,26597
numeric_polar(1363,26683
numeric_conj(1369,26778
float_arg(1383,27010
Init_Complex(1423,28289
#undef rb_intern1425,28310
#define rb_intern(1426,28327

cont.c,1744
#define CAPTURE_JUST_VALID_VM_STACK 17,340
enum context_type 19,379
    CONTINUATION_CONTEXT 20,399
    FIBER_CONTEXT 21,429
    ROOT_FIBER_CONTEXT 22,452
typedef struct rb_context_struct 25,483
} rb_context_t;45,1067
enum fiber_status 47,1084
    CREATED,48,1104
    RUNNING,49,1117
    TERMINATED50,1130
typedef struct rb_fiber_struct 53,1149
} rb_fiber_t;59,1331
static VALUE rb_cContinuation;61,1346
static VALUE rb_cFiber;62,1377
static VALUE rb_eFiberError;63,1401
#define GetContPtr(65,1431
#define GetFiberPtr(68,1506
cont_mark(78,1763
cont_free(111,2571
fiber_mark(130,2996
fiber_link_join(142,3186
fiber_link_remove(156,3549
fiber_free(163,3703
cont_save_machine_stack(180,4004
cont_init(230,5516
cont_new(239,5670
cont_capture(253,5952
cont_restore_1(296,7119
#define C(369,9021
#define E(370,9093
int rb_dummy_false 375,9365
register_stack_extend(378,9481
#undef C396,10155
#undef E397,10164
cont_restore_0(401,10193
#define STACK_PAD_SIZE 404,10292
rb_callcc(499,12985
make_passing_arg(513,13176
rb_cont_call(542,13930
#define FIBER_VM_STACK_SIZE 636,16588
fiber_alloc(639,16641
fiber_t_alloc(645,16753
fiber_init(662,17068
rb_fiber_init(701,17957
rb_fiber_new(707,18044
return_fiber(713,18181
rb_fiber_terminate(739,18643
rb_fiber_start(747,18804
root_fiber_alloc(791,19756
rb_fiber_current(804,20014
fiber_store(816,20245
fiber_switch(845,20826
rb_fiber_transfer(891,21931
rb_fiber_resume(897,22039
rb_fiber_yield(910,22283
rb_fiber_alive_p(924,22616
rb_fiber_m_resume(947,23437
rb_fiber_m_transfer(969,24210
rb_fiber_s_yield(985,24742
rb_fiber_s_current(999,25105
Init_Cont(1005,25178
ruby_Init_Continuation_body(1016,25584
ruby_Init_Fiber_as_Coroutine(1027,25980

debug.c,3881
        RUBY_ENCODING_INLINE_MAX 26,618
        RUBY_ENCODING_INLINE_MAX = ENCODING_INLINE_MAX,26,618
        RUBY_ENCODING_SHIFT 27,674
        RUBY_ENCODING_SHIFT = ENCODING_SHIFT,27,674
        RUBY_ENCODING_MASK 28,720
        RUBY_ENCODING_MASK  = ENCODING_MASK,28,720
        RUBY_ENC_CODERANGE_MASK 29,765
        RUBY_ENC_CODERANGE_MASK    = ENC_CODERANGE_MASK,29,765
        RUBY_ENC_CODERANGE_UNKNOWN 30,822
        RUBY_ENC_CODERANGE_UNKNOWN = ENC_CODERANGE_UNKNOWN,30,822
        RUBY_ENC_CODERANGE_7BIT 31,882
        RUBY_ENC_CODERANGE_7BIT    = ENC_CODERANGE_7BIT,31,882
        RUBY_ENC_CODERANGE_VALID 32,939
        RUBY_ENC_CODERANGE_VALID   = ENC_CODERANGE_VALID,32,939
        RUBY_ENC_CODERANGE_BROKEN 33,997
        RUBY_ENC_CODERANGE_BROKEN  = ENC_CODERANGE_BROKEN,33,997
        RUBY_FL_MARK 34,1057
        RUBY_FL_MARK        = FL_MARK,34,1057
        RUBY_FL_RESERVED 35,1096
        RUBY_FL_RESERVED    = FL_RESERVED,35,1096
        RUBY_FL_FINALIZE 36,1139
        RUBY_FL_FINALIZE    = FL_FINALIZE,36,1139
        RUBY_FL_TAINT 37,1182
        RUBY_FL_TAINT       = FL_TAINT,37,1182
        RUBY_FL_UNTRUSTED 38,1222
        RUBY_FL_UNTRUSTED   = FL_UNTRUSTED,38,1222
        RUBY_FL_EXIVAR 39,1266
        RUBY_FL_EXIVAR      = FL_EXIVAR,39,1266
        RUBY_FL_FREEZE 40,1307
        RUBY_FL_FREEZE      = FL_FREEZE,40,1307
        RUBY_FL_SINGLETON 41,1348
        RUBY_FL_SINGLETON   = FL_SINGLETON,41,1348
        RUBY_FL_USER0 42,1392
        RUBY_FL_USER0       = FL_USER0,42,1392
        RUBY_FL_USER1 43,1432
        RUBY_FL_USER1       = FL_USER1,43,1432
        RUBY_FL_USER2 44,1472
        RUBY_FL_USER2       = FL_USER2,44,1472
        RUBY_FL_USER3 45,1512
        RUBY_FL_USER3       = FL_USER3,45,1512
        RUBY_FL_USER4 46,1552
        RUBY_FL_USER4       = FL_USER4,46,1552
        RUBY_FL_USER5 47,1592
        RUBY_FL_USER5       = FL_USER5,47,1592
        RUBY_FL_USER6 48,1632
        RUBY_FL_USER6       = FL_USER6,48,1632
        RUBY_FL_USER7 49,1672
        RUBY_FL_USER7       = FL_USER7,49,1672
        RUBY_FL_USER8 50,1712
        RUBY_FL_USER8       = FL_USER8,50,1712
        RUBY_FL_USER9 51,1752
        RUBY_FL_USER9       = FL_USER9,51,1752
        RUBY_FL_USER10 52,1792
        RUBY_FL_USER10      = FL_USER10,52,1792
        RUBY_FL_USER11 53,1833
        RUBY_FL_USER11      = FL_USER11,53,1833
        RUBY_FL_USER12 54,1874
        RUBY_FL_USER12      = FL_USER12,54,1874
        RUBY_FL_USER13 55,1915
        RUBY_FL_USER13      = FL_USER13,55,1915
        RUBY_FL_USER14 56,1956
        RUBY_FL_USER14      = FL_USER14,56,1956
        RUBY_FL_USER15 57,1997
        RUBY_FL_USER15      = FL_USER15,57,1997
        RUBY_FL_USER16 58,2038
        RUBY_FL_USER16      = FL_USER16,58,2038
        RUBY_FL_USER17 59,2079
        RUBY_FL_USER17      = FL_USER17,59,2079
        RUBY_FL_USER18 60,2120
        RUBY_FL_USER18      = FL_USER18,60,2120
        RUBY_FL_USHIFT 61,2161
        RUBY_FL_USHIFT      = FL_USHIFT,61,2161
        RUBY_NODE_TYPESHIFT 62,2202
        RUBY_NODE_TYPESHIFT = NODE_TYPESHIFT,62,2202
        RUBY_NODE_TYPEMASK 63,2248
        RUBY_NODE_TYPEMASK  = NODE_TYPEMASK,63,2248
        RUBY_NODE_LSHIFT 64,2293
        RUBY_NODE_LSHIFT    = NODE_LSHIFT,64,2293
        RUBY_NODE_LMASK 65,2336
        RUBY_NODE_LMASK     = NODE_LMASK,65,2336
        RUBY_NODE_FL_NEWLINE 66,2378
        RUBY_NODE_FL_NEWLINE   = NODE_FL_NEWLINE66,2378
} dummy_gdb_enums;68,2442
const VALUE RUBY_FL_USER19 70,2462
ruby_debug_print_indent(73,2510
ruby_debug_printf(84,2721
ruby_debug_print_value(93,2867
ruby_debug_print_v(106,3149
ruby_debug_print_id(112,3226
ruby_debug_print_node(122,3441
ruby_debug_breakpoint(132,3698
set_debug_option(139,3775
#define SET_WHEN(141,3831
ruby_set_debug_option(155,4218

debug.h,126
#define RUBY_DEBUG_H13,305
#define dpv(18,369
#define dp(19,422
#define dpi(20,476
#define dpn(21,527
#define bp(23,581

dir.c,2987
# define NAMLEN(26,616
# define NAMLEN(29,733
# define dirent 31,788
#  define NAMLEN(33,834
#  define NAMLEN(36,962
#define lstat 67,1433
#define FNM_NOESCAPE	70,1460
#define FNM_PATHNAME	71,1486
#define FNM_DOTMATCH	72,1512
#define FNM_CASEFOLD	73,1538
#define FNM_SYSCASE	75,1588
#define FNM_SYSCASE	77,1627
#define FNM_NOMATCH	80,1657
#define FNM_ERROR	81,1679
# define Next(83,1700
# define Inc(84,1756
bracket(87,1819
#define UNESCAPE(158,3624
#define ISEND(159,3685
#define RETURN(160,3739
fnmatch_helper(163,3807
fnmatch(255,5683
VALUE rb_cDir;304,6738
struct dir_data 306,6754
mark_dir(313,6840
free_dir(319,6915
dir_s_alloc(330,7068
dir_initialize(349,7424
dir_s_open(409,8867
dir_closed(423,9179
dir_check(429,9260
#define GetDIR(436,9433
dir_inspect(450,9706
dir_path(472,10192
dir_read(494,10678
dir_each(532,11426
dir_tell(561,12072
dir_seek(590,12742
dir_set_pos(619,13367
dir_rewind(637,13682
dir_close(660,14154
dir_chdir(672,14308
static int chdir_blocking 678,14406
static VALUE chdir_thread 679,14437
struct chdir_data 681,14472
chdir_yield(687,14553
chdir_restore(698,14789
dir_s_chdir(749,16279
dir_s_getwd(797,17366
check_dirname(812,17604
dir_s_chroot(834,18137
dir_s_mkdir(863,18914
dir_s_rmdir(892,19508
sys_warning_1(902,19677
#define GLOB_VERBOSE	907,19746
#define sys_warning(908,19805
#define GLOB_ALLOC(911,19932
#define GLOB_ALLOC_N(912,19986
#define GLOB_FREE(913,20051
#define GLOB_JUMP_TAG(914,20084
#define to_be_ignored(920,20272
do_stat(924,20374
do_lstat(935,20556
do_opendir(945,20741
has_magic(956,20978
find_dirsep(990,21584
remove_backslashes(1027,22202
enum glob_pattern_type 1051,22594
enum glob_pattern_type { PLAIN,1051,22594
enum glob_pattern_type { PLAIN, MAGICAL,1051,22594
enum glob_pattern_type { PLAIN, MAGICAL, RECURSIVE,1051,22594
enum glob_pattern_type { PLAIN, MAGICAL, RECURSIVE, MATCH_ALL,1051,22594
enum glob_pattern_type { PLAIN, MAGICAL, RECURSIVE, MATCH_ALL, MATCH_DIR 1051,22594
struct glob_pattern 1053,22671
glob_make_pattern(1062,22864
glob_free_pattern(1117,24055
join_path(1129,24256
enum answer 1145,24606
enum answer { YES,1145,24606
enum answer { YES, NO,1145,24606
enum answer { YES, NO, UNKNOWN 1145,24606
#   define S_ISDIR(1148,24657
#    define S_ISLNK(1153,24747
#    define S_ISLNK(1155,24782
struct glob_args 1159,24848
glob_func_caller(1167,24992
#define glob_call_func(1175,25152
glob_helper(1178,25233
ruby_glob0(1367,29888
ruby_glob(1402,30646
rb_glob_caller(1409,30830
rb_glob2(1420,31056
rb_glob(1439,31459
push_pattern(1446,31667
ruby_brace_expand(1452,31813
struct brace_args 1509,33053
glob_brace(1516,33146
ruby_brace_glob0(1524,33338
ruby_brace_glob(1536,33616
push_glob(1543,33809
rb_push_glob(1558,34195
dir_globs(1585,34776
dir_s_aref(1612,35335
dir_s_glob(1681,38735
dir_open_dir(1708,39230
dir_foreach(1739,39921
dir_entries(1761,40443
file_s_fnmatch(1851,45419
Init_Dir(1884,46296

dln.c,3266
#undef HAVE_DLOPEN20,376
#undef USE_DLN_A_OUT21,395
#undef USE_DLN_DLOPEN22,416
char *dln_argv0;dln_argv026,467
#define free(45,701
#   define S_ISDIR(55,861
# define MAXPATHLEN 62,991
#  define MACOSX_DLOPEN76,1246
#  define MACOSX_DYLD78,1277
# define USE_DLN_DLOPEN90,1531
#  define FUNCNAME_PATTERN 95,1846
#  define FUNCNAME_PATTERN 97,1891
init_funcname_len(102,1955
#define init_funcname(123,2482
# define LIBC_NAME 138,2772
#  define DLN_DEFAULT_LIB_PATH 142,2837
static int dln_errno;147,2929
#define DLN_ENOEXEC	149,2952
#define DLN_ECONFL	150,3004
#define DLN_ENOINIT	151,3055
#define DLN_EUNDEF	152,3107
#define DLN_ENOTLIB	153,3161
#define DLN_EBADLIB	154,3211
#define DLN_EINIT	155,3265
static int dln_init_p 157,3311
# define N_COMM 162,3389
# define N_MAGIC(165,3433
#define INVALID_OBJECT(168,3473
static st_table *sym_tbl;sym_tbl173,3568
static st_table *undef_tbl;undef_tbl174,3594
load_header(179,3658
#define RELOC_SYMBOL(197,3997
#define RELOC_MEMORY_SUB_P(198,4042
#define RELOC_PCREL_P(199,4086
#define RELOC_TARGET_SIZE(200,4141
#define RELOC_ADDRESS(205,4238
#define RELOC_EXTERN_P(206,4281
#define RELOC_SYMBOL(207,4324
#define RELOC_MEMORY_SUB_P(208,4369
#define RELOC_PCREL_P(209,4402
#define RELOC_TARGET_SIZE(210,4443
#  undef relocation_info215,4559
#  define relocation_info 216,4584
#  define R_RIGHTSHIFT(217,4627
#  define R_BITSIZE(218,4687
#  define R_LENGTH(219,4743
static int reloc_r_rightshift[reloc_r_rightshift220,4796
static int reloc_r_bitsize[reloc_r_bitsize223,4883
static int reloc_r_length[reloc_r_length226,4979
#  define R_PCREL(229,5061
#  define R_SYMBOL(231,5149
#define R_SYMBOL(235,5215
#define R_MEMORY_SUB(236,5255
#define R_PCREL(237,5293
#define R_LENGTH(238,5342
#  define R_SYMBOL(242,5404
#  define R_MEMORY_SUB(243,5447
#  define R_PCREL(244,5475
#  define R_LENGTH(245,5514
load_reloc(249,5594
load_sym(272,6069
sym_hash(313,6953
dln_init(333,7325
load_text_data(407,8763
undef_print(441,9433
dln_print_undef(448,9546
dln_undefined(455,9673
struct undef 464,9826
static st_table *reloc_tbl reloc_tbl476,9975
link_undef(478,10022
struct reloc_arg 505,10649
reloc_undef(511,10721
unlink_undef(572,12265
struct indr_data 582,12444
reloc_repl(587,12503
load_1(598,12725
static int target_offset;877,18897
search_undef(879,18934
struct symdef 888,19132
char *dln_librrb_ary_path dln_librrb_ary_path893,19194
load_lib(896,19256
load(1033,22493
dln_sym(1058,22881
#define NSLINKMODULE_OPTION_BINDNOW 1090,23412
dln_strerror(1104,23620
aix_loaderror(1156,24676
    struct errtab 1161,24764
#define LOAD_ERRTAB_LEN	1179,25371
#define ERRBUF_APPEND(1180,25440
dln_load(1205,26141
#define DLN_ERROR(1213,26344
#define DLN_DEFINED1256,27304
# define RTLD_LAZY 1262,27385
# undef RTLD_GLOBAL1265,27430
# define RTLD_GLOBAL 1268,27477
#define DLN_DEFINED1291,27891
#define DLN_DEFINED1317,28480
#define DLN_DEFINED1334,28827
# define DLN_DEFINED1411,30760
dln_find_exe_r(1476,32664
dln_find_file_r(1493,33007
static char fbuf[fbuf1499,33163
dln_find_exe(1502,33201
dln_find_file(1508,33323
dln_find_1(1514,33454
#define RETURN_IF(1532,33906
# define CharNext(1537,34018
#undef RETURN_IF1594,35052

dln.h,150
#define DLN_H13,279
#  define HAVE_PROTOTYPES 17,339
#  define HAVE_STDARG_PROTOTYPES 20,408
#undef _24,459
# define _(26,491
# define _(28,519

dmydln.c,25
#define NO_DLN_LOAD 1,0

dmyencoding.c,31
#define NO_LOCALE_CHARMAP 1,0

dmyext.c,14
Init_ext(2,5

encdb.h,33
#define ENCODING_COUNT 147,5134

encoding.c,3482
static ID id_encoding;26,510
VALUE rb_cEncoding;27,533
static VALUE rb_encoding_list;28,553
struct rb_encoding_entry 30,585
} enc_table;41,785
#define ENCODING_COUNT 45,824
#define UNSPECIFIED_ENCODING 46,868
#define enc_autoload_p(48,906
enc_mark(53,1016
enc_new(58,1054
rb_enc_from_encoding(64,1162
check_encoding(86,1686
enc_check_encoding(98,1909
must_encoding(108,2115
rb_to_encoding_index(119,2333
to_encoding(137,2670
rb_to_encoding(153,3048
rb_gc_mark_encodings(160,3176
enc_table_expand(165,3219
enc_register_at(181,3661
enc_register(214,4469
rb_enc_register(227,4815
rb_encdb_declare(251,5411
enc_check_duplication(261,5611
set_base_encoding(269,5790
rb_enc_replicate(279,6003
enc_replicate(291,6272
rb_encdb_replicate(307,6593
rb_define_dummy_encoding(319,6868
rb_encdb_dummy(329,7078
enc_dummy_p(353,7650
enc_alias_internal(359,7779
enc_alias(367,7953
rb_enc_alias(375,8115
rb_encdb_alias(390,8370
    ENCINDEX_ASCII,401,8563
    ENCINDEX_UTF_8,402,8583
    ENCINDEX_US_ASCII,403,8603
    ENCINDEX_BUILTIN_MAX404,8626
rb_enc_init(411,8740
#define ENC_REGISTER(417,8879
#undef ENC_REGISTER421,9068
rb_enc_from_index(426,9149
rb_enc_registered(438,9340
require_enc(451,9580
load_encoding(457,9675
enc_autoload(485,10409
rb_enc_find_index(508,10877
rb_enc_find(532,11384
enc_capable(540,11537
rb_id_encoding(556,11828
rb_enc_get_index(563,11921
rb_enc_set_index(595,12577
rb_enc_associate_index(607,12828
rb_enc_associate(621,13139
rb_enc_get(627,13265
rb_enc_check(633,13358
rb_enc_compatible(644,13643
rb_enc_copy(706,15111
rb_obj_encoding(720,15345
rb_enc_mbclen(730,15527
rb_enc_precise_mbclen(742,15867
rb_enc_ascget(754,16180
rb_enc_codepoint(777,16719
rb_enc_codelen(790,17075
rb_enc_toupper(800,17283
rb_enc_tolower(806,17411
enc_inspect(821,17800
enc_name(839,18228
enc_names_i(845,18340
enc_names(866,18792
enc_list(895,19438
enc_find(918,20094
enc_compatible_p(942,20710
enc_dump(955,21007
enc_load(963,21149
rb_ascii8bit_encoding(969,21234
rb_ascii8bit_encindex(978,21367
rb_utf8_encoding(984,21441
rb_utf8_encindex(993,21569
rb_usascii_encoding(999,21638
rb_usascii_encindex(1008,21772
rb_locale_encoding(1014,21847
rb_filesystem_encoding(1030,22241
struct default_encoding 1047,22687
enc_set_default_encoding(1053,22802
static struct default_encoding default_external 1075,23301
rb_default_external_encoding(1078,23371
rb_enc_default_external(1092,23687
get_default_external(1106,23951
rb_enc_set_default_external(1112,24033
set_default_external(1128,24389
static struct default_encoding default_internal 1135,24561
rb_default_internal_encoding(1138,24632
rb_enc_default_internal(1147,24873
get_default_internal(1162,25228
rb_enc_set_default_internal(1168,25310
set_default_internal(1182,25630
rb_locale_charmap(1214,26418
set_encoding_const(1237,27000
rb_enc_name_list_i(1283,28130
rb_enc_name_list(1307,28667
rb_enc_aliases_enc_i(1315,28857
rb_enc_aliases(1352,29847
Init_Encoding(1362,30068
#undef rb_intern1364,30090
#define rb_intern(1365,30107
#define ctype_test(1403,31809
int rb_isalnum(1406,31904
int rb_isalpha(1407,31973
int rb_isblank(1408,32042
int rb_iscntrl(1409,32111
int rb_isdigit(1410,32180
int rb_isgraph(1411,32249
int rb_islower(1412,32318
int rb_isprint(1413,32387
int rb_ispunct(1414,32456
int rb_isspace(1415,32525
int rb_isupper(1416,32594
int rb_isxdigit(1417,32663
rb_tolower(1420,32739
rb_toupper(1426,32834

enum.c,2169
VALUE rb_mEnumerable;16,332
static ID id_each,17,354
static ID id_each, id_eqq,17,354
static ID id_each, id_eqq, id_cmp,17,354
static ID id_each, id_eqq, id_cmp, id_next,17,354
static ID id_each, id_eqq, id_cmp, id_next, id_size;17,354
enum_values_pack(20,421
#define ENUM_WANT_SVALUE(27,569
#define enum_yield 31,656
grep_i(34,706
grep_iter_i(45,899
enum_grep(74,1740
count_i(88,1987
count_iter_i(101,2184
count_all_i(112,2370
enum_count(140,3143
find_i(170,3751
enum_find(197,4475
find_index_i(215,4879
find_index_iter_i(230,5132
enum_find_index(259,5948
find_all_i(283,6490
enum_find_all(307,7010
reject_i(320,7201
enum_reject(342,7655
collect_i(355,7842
collect_all(363,7977
enum_collect(384,8476
enum_to_a(407,8961
inject_i(418,9160
inject_op_i(434,9410
enum_inject(495,11473
partition_i(526,12137
enum_partition(552,12681
group_by_i(566,12939
enum_group_by(598,13597
first_i(612,13820
enum_first(645,14430
enum_sort(685,15544
sort_by_i(691,15629
sort_by_cmp(707,15977
enum_sort_by(789,18821
#define DEFINE_ENUMFUNCS(820,19510
enum_all_func(834,19856
DEFINE_ENUMFUNCS(843,19986
enum_any_func(872,20897
DEFINE_ENUMFUNCS(881,21025
enum_one_func(911,21962
DEFINE_ENUMFUNCS(925,22177
enum_none_func(956,23150
DEFINE_ENUMFUNCS(965,23280
min_i(992,24210
min_ii(1011,24495
enum_min(1048,25299
max_i(1065,25658
max_ii(1084,25943
enum_max(1120,26741
minmax_i(1137,27100
minmax_ii(1161,27502
enum_minmax(1206,28549
min_by_i(1227,29007
enum_min_by(1257,29574
max_by_i(1270,29794
enum_max_by(1300,30367
minmax_by_i(1313,30587
enum_minmax_by(1352,31402
member_i(1367,31693
enum_member(1390,32250
each_with_index_i(1401,32445
enum_each_with_index(1425,33042
enum_reverse_each(1445,33394
zip_ary(1463,33671
call_next(1493,34293
call_stop(1499,34382
zip_i(1505,34446
enum_zip(1563,36112
take_i(1598,36884
enum_take(1617,37260
take_while_i(1635,37609
enum_take_while(1655,38108
drop_i(1666,38309
enum_drop(1690,38740
drop_while_i(1707,39048
enum_drop_while(1734,39615
cycle_i(1746,39850
enum_cycle(1775,40653
Init_Enumerable(1816,41810
#undef rb_intern1818,41834
#define rb_intern(1819,41851

enumerator.c,1379
VALUE rb_cEnumerator;23,560
static VALUE sym_each;24,582
static ID id_rewind;25,605
VALUE rb_eStopIteration;27,627
struct enumerator 29,653
static VALUE rb_cGenerator,38,773
static VALUE rb_cGenerator, rb_cYielder;38,773
struct generator 40,815
struct yielder 44,854
enumerator_mark(55,1023
enumerator_ptr(65,1217
obj_to_enum(101,2031
each_slice_i(113,2227
enum_each_slice(147,2825
each_cons_i(166,3251
enum_each_cons(204,3972
each_with_object_i(220,4321
enum_each_with_object(241,4832
enumerator_allocate(251,5026
enumerator_each_i(263,5256
enumerator_init(269,5381
enumerator_initialize(322,6843
enumerator_init_copy(344,7303
rb_enumeratorize(369,7795
enumerator_each(383,8145
enumerator_with_index_i(400,8497
enumerator_with_index(423,8979
enumerator_with_object_i(441,9360
enumerator_with_object(461,9848
next_ii(480,10230
next_i(487,10348
next_init(498,10589
enumerator_next(520,11180
enumerator_rewind(550,11768
yielder_mark(567,12035
yielder_ptr(574,12142
yielder_allocate(592,12555
yielder_init(604,12759
yielder_initialize(621,13011
yielder_yield(630,13142
yielder_yield_i(640,13294
yielder_new(646,13415
generator_mark(655,13559
generator_ptr(662,13672
generator_allocate(680,14097
generator_init(692,14309
generator_initialize(711,14604
generator_init_copy(737,15078
generator_each(756,15393
Init_Enumerator(769,15598

error.c,2498
#define EXIT_SUCCESS 22,442
err_position_0(28,523
err_position(42,779
err_snprintf(48,901
compile_snprintf(59,1097
rb_compile_error(72,1370
rb_compile_error_append(84,1610
compile_warn_print(96,1817
rb_compile_warn(108,2076
rb_compile_warning(124,2425
warn_print(139,2729
rb_warn(151,2936
rb_warning(167,3221
rb_warn_m(190,3660
report_bug(202,3866
rb_bug(225,4428
rb_compile_bug(237,4604
static const struct types 248,4789
} builtin_types[builtin_types251,4853
rb_check_type(278,5649
VALUE rb_eException;320,6516
VALUE rb_eSystemExit;321,6537
VALUE rb_eInterrupt;322,6559
VALUE rb_eSignal;323,6580
VALUE rb_eFatal;324,6598
VALUE rb_eStandardError;325,6615
VALUE rb_eRuntimeError;326,6640
VALUE rb_eTypeError;327,6664
VALUE rb_eArgError;328,6685
VALUE rb_eIndexError;329,6705
VALUE rb_eKeyError;330,6727
VALUE rb_eRangeError;331,6747
VALUE rb_eNameError;332,6769
VALUE rb_eEncodingError;333,6790
VALUE rb_eEncCompatError;334,6815
VALUE rb_eNoMethodError;335,6841
VALUE rb_eSecurityError;336,6866
VALUE rb_eNotImpError;337,6891
VALUE rb_eNoMemError;338,6914
VALUE rb_cNameErrorMesg;339,6936
VALUE rb_eScriptError;341,6962
VALUE rb_eSyntaxError;342,6985
VALUE rb_eLoadError;343,7008
VALUE rb_eSystemCallError;345,7030
VALUE rb_mErrno;346,7057
static VALUE rb_eNOERROR;347,7074
rb_exc_new(350,7107
rb_exc_new2(356,7242
rb_exc_new3(362,7337
exc_initialize(377,7616
exc_exception(402,8179
exc_to_s(423,8573
exc_message(443,9064
exc_inspect(456,9266
exc_backtrace(506,10255
rb_check_backtrace(515,10360
exc_set_backtrace(547,11052
exc_equal(562,11439
exit_initialize(603,12339
exit_status(624,12731
exit_success_p(638,12948
rb_name_error(647,13153
name_err_initialize(671,13673
name_err_name(689,14021
name_err_to_s(702,14237
nometh_err_initialize(727,14903
name_err_mesg_mark(737,15137
name_err_mesg_new(744,15238
name_err_mesg_equal(756,15510
name_err_mesg_to_str(776,15908
name_err_mesg_load(822,16775
nometh_err_args(836,16990
rb_invalid_str(842,17077
static st_table *syserr_tbl;syserr_tbl880,18576
set_syserr(883,18619
get_syserr(899,18973
syserr_initialize(924,19600
syserr_errno(975,20817
syserr_eqq(989,21110
Init_Exception(1022,22084
rb_raise(1088,25805
rb_loaderror(1100,26012
rb_notimplement(1112,26222
rb_fatal(1120,26381
rb_sys_fail(1133,26584
rb_sys_warning(1148,26866
rb_load_fail(1168,27261
rb_error_frozen(1174,27355
rb_check_frozen(1180,27463
void Init_syserr(1185,27560
err_append(1192,27672

eval.c,1449
VALUE rb_eLocalJumpError;23,604
VALUE rb_eSysStackError;24,630
#define exception_error 26,656
#define environ 34,824
char **rb_origenviron;rb_origenviron38,912
ruby_init(49,1108
ruby_options(81,1575
ruby_finalize_0(101,1963
ruby_finalize_1(113,2134
ruby_finalize(121,2261
ruby_cleanup(130,2377
ruby_exec_node(196,3714
ruby_stop(216,4044
ruby_run_node(222,4099
rb_mod_nesting(253,4678
rb_mod_s_constants(283,5278
rb_frozen_class_p(312,5798
rb_longjmp(338,6247
rb_exc_raise(413,7806
rb_exc_fatal(419,7874
rb_interrupt(425,7942
rb_f_raise(457,8956
rb_make_exception(472,9207
rb_raise_jump(518,10111
rb_jump_tag(527,10294
rb_block_given_p(533,10343
rb_iterator_p(547,10547
VALUE rb_eThreadError;552,10599
rb_need_block(555,10628
rb_rescue2(563,10743
rb_rescue(625,11902
rb_protect(633,12096
rb_ensure(666,12822
frame_func_id(685,13253
rb_frame_this_func(707,13633
rb_frame_callee(713,13711
rb_frame_caller(719,13793
rb_frame_pop(731,14113
rb_mod_append_features(750,14689
rb_mod_include(773,15096
rb_obj_call_init(787,15404
rb_extend_object(794,15538
rb_mod_extend_object(827,16354
rb_obj_extend(859,16971
top_include(885,17584
errinfo_place(902,17985
get_errinfo(925,18566
errinfo_getter(938,18742
errinfo_setter(945,18813
rb_errinfo(963,19171
rb_set_errinfo(970,19258
rb_rubylevel_errinfo(979,19458
errat_getter(985,19529
errat_setter(997,19685
rb_f_method_name(1017,20093
Init_eval(1030,20261

eval_error.c,368
warn_printf(7,56
#define warn_print(18,247
#define warn_print2(19,287
error_pos(22,346
get_backtrace(44,779
rb_get_backtrace(55,979
set_backtrace(61,1057
error_print(67,1167
#define TRACE_MAX 163,3111
#define TRACE_HEAD 164,3155
#define TRACE_TAIL 165,3176
ruby_error_print(183,3528
rb_print_undef(189,3580
sysexit_status(206,4006
error_handle(213,4113

eval_intern.h,2047
#define RUBY_EVAL_INTERN_H2,27
#define PASS_PASSED_BLOCK_TH(7,100
#define PASS_PASSED_BLOCK(12,280
#define EXIT_SUCCESS 21,482
#define EXIT_FAILURE 24,533
#   define alloca 38,751
#define ruby_setjmp(67,1240
#define ruby_longjmp(68,1282
#define select(93,1926
#define SAVE_ROOT_JMPBUF(102,2076
#define TH_PUSH_TAG(110,2235
#define TH_POP_TAG(117,2392
#define TH_POP_TAG2(121,2454
#define PUSH_TAG(124,2502
#define POP_TAG(125,2547
#define TH_EXEC_TAG(127,2584
#define EXEC_TAG(129,2634
#define TH_JUMP_TAG(132,2672
#define JUMP_TAG(136,2757
enum ruby_tag_type 138,2809
    RUBY_TAG_RETURN	139,2830
    RUBY_TAG_RETURN	= 0x1,x1139,2830
    RUBY_TAG_BREAK	140,2857
    RUBY_TAG_BREAK	= 0x2,x2140,2857
    RUBY_TAG_NEXT	141,2883
    RUBY_TAG_NEXT	= 0x3,x3141,2883
    RUBY_TAG_RETRY	142,2908
    RUBY_TAG_RETRY	= 0x4,x4142,2908
    RUBY_TAG_REDO	143,2934
    RUBY_TAG_REDO	= 0x5,x5143,2934
    RUBY_TAG_RAISE	144,2959
    RUBY_TAG_RAISE	= 0x6,x6144,2959
    RUBY_TAG_THROW	145,2985
    RUBY_TAG_THROW	= 0x7,x7145,2985
    RUBY_TAG_FATAL	146,3011
    RUBY_TAG_FATAL	= 0x8,x8146,3011
    RUBY_TAG_MASK	147,3037
    RUBY_TAG_MASK	= 0xfxf147,3037
#define TAG_RETURN	149,3064
#define TAG_BREAK	150,3099
#define TAG_NEXT	151,3132
#define TAG_RETRY	152,3163
#define TAG_REDO	153,3196
#define TAG_RAISE	154,3227
#define TAG_THROW	155,3260
#define TAG_FATAL	156,3293
#define TAG_MASK	157,3326
#define NEW_THROW_OBJECT(159,3358
#define SET_THROWOBJ_CATCH_POINT(161,3447
#define SET_THROWOBJ_STATE(163,3527
#define GET_THROWOBJ_VAL(166,3602
#define GET_THROWOBJ_CATCH_POINT(167,3672
#define GET_THROWOBJ_STATE(168,3743
#define SCOPE_TEST(170,3812
#define SCOPE_CHECK(171,3865
#define SCOPE_SET(172,3919
#define CHECK_STACK_OVERFLOW(174,3973
    RAISED_EXCEPTION 184,4244
    RAISED_STACKOVERFLOW 185,4270
    RAISED_NOMEMORY 186,4300
#define rb_thread_raised_set(190,4415
#define rb_thread_raised_reset(191,4480
#define rb_thread_raised_p(192,4546
#define rb_thread_raised_clear(193,4617

eval_jump.c,420
rb_call_end_proc(11,80
rb_f_at_exit(38,675
struct end_proc_data 50,894
static struct end_proc_data *end_procs,end_procs57,1004
static struct end_proc_data *end_procs, *ephemeral_end_procs,ephemeral_end_procs57,1004
static struct end_proc_data *end_procs, *ephemeral_end_procs, *tmp_end_procs;tmp_end_procs57,1004
rb_set_end_proc(60,1088
rb_mark_end_proc(80,1501
rb_exec_end_proc(102,1857
Init_jump(148,2795

file.c,6251
# define MAXPATHLEN 41,812
#define lstat 70,1224
be_chown(75,1311
#define chown 85,1578
be_fchown(87,1612
#define fchown 97,1868
VALUE rb_cFile;100,1916
VALUE rb_mFileTest;101,1932
VALUE rb_cStat;102,1952
rb_get_path_check(105,1982
rb_get_path_no_checksafe(130,2446
rb_get_path(136,2531
apply2files(142,2609
rb_file_path(169,3216
stat_new_0(180,3452
stat_new(192,3649
get_stat(198,3737
rb_stat_cmp(222,4270
#define ST2UINT(238,4807
rb_stat_dev(251,5080
rb_stat_dev_major(268,5411
rb_stat_dev_minor(290,5826
rb_stat_ino(311,6160
rb_stat_mode(334,6686
rb_stat_nlink(352,7069
rb_stat_uid(368,7336
rb_stat_gid(384,7599
rb_stat_rdev(402,8016
rb_stat_rdev_major(423,8405
rb_stat_rdev_minor(445,8853
rb_stat_size(465,9206
rb_stat_blksize(482,9558
rb_stat_blocks(503,9986
stat_atimespec(513,10142
stat_atime(530,10538
stat_mtimespec(537,10691
stat_mtime(554,11087
stat_ctimespec(561,11240
stat_ctime(578,11636
rb_stat_atime(596,12012
rb_stat_mtime(612,12285
rb_stat_ctime(630,12651
rb_stat_inspect(650,13188
rb_stat(709,14519
w32_io_info(727,14854
rb_file_s_stat(769,15934
rb_io_stat(798,16524
#define rb_sys_fail_path(803,16588
rb_file_s_lstat(826,17232
rb_file_lstat(857,17977
group_member(877,18348
#    define NGROUPS 886,18519
#    define NGROUPS 888,18560
#  define S_IXUGO	907,18813
#define USE_GETEUID 911,18935
eaccess(916,18990
rb_file_directory_p(1002,20759
#   define S_ISDIR(1005,20821
rb_file_pipe_p(1023,21153
#    define S_ISFIFO(1027,21228
rb_file_symlink_p(1047,21585
#    define S_ISLNK(1051,21663
#      define S_ISLNK(1054,21726
#	 define S_ISLNK(1057,21809
rb_file_socket_p(1083,22259
#    define S_ISSOCK(1087,22338
#      define S_ISSOCK(1090,22404
#	 define S_ISSOCK(1093,22490
rb_file_blockdev_p(1117,22893
#	define S_ISBLK(1121,22972
#	define S_ISBLK(1123,23027
rb_file_chardev_p(1144,23403
#   define S_ISCHR(1147,23463
rb_file_exist_p(1167,23845
rb_file_readable_p(1184,24169
rb_file_readable_real_p(1201,24537
#  define S_IRUGO	1210,24733
#  define S_IWUGO	1214,24806
rb_file_world_readable_p(1232,25366
rb_file_writable_p(1254,25829
rb_file_writable_real_p(1271,26197
rb_file_world_writable_p(1294,26865
rb_file_executable_p(1316,27332
rb_file_executable_real_p(1333,27706
#   define S_ISREG(1342,27904
rb_file_file_p(1354,28124
rb_file_zero_p(1372,28461
rb_file_size_p(1390,28816
rb_file_owned_p(1409,29218
rb_file_rowned_p(1419,29410
rb_file_grpowned_p(1438,29852
check3rdbyte(1451,30131
rb_file_suid_p(1471,30523
rb_file_sgid_p(1488,30812
rb_file_sticky_p(1505,31101
rb_file_identical_p(1532,31746
rb_file_s_size(1586,33277
rb_file_ftype(1598,33488
rb_file_s_ftype(1654,34688
rb_file_s_atime(1678,35155
rb_file_atime(1701,35634
rb_file_s_mtime(1724,36067
rb_file_mtime(1746,36463
rb_file_s_ctime(1771,36970
rb_file_ctime(1794,37454
chmod_internal(1807,37668
rb_file_s_chmod(1827,38226
rb_file_chmod(1856,38906
lchmod_internal(1879,39346
rb_file_s_lchmod(1896,39773
rb_file_s_lchmod(1911,40073
struct chown_args 1918,40184
chown_internal(1924,40260
rb_file_s_chown(1947,40958
rb_file_chown(1988,41922
lchown_internal(2011,42506
rb_file_s_lchown(2030,43028
rb_file_s_lchown(2056,43469
utime_internal(2067,43629
struct utimbuf 2103,44464
utime_internal(2110,44539
rb_file_s_utime(2135,45082
sys_fail2(2156,45549
rb_file_s_link(2200,46585
rb_file_s_symlink(2230,47261
rb_file_s_readlink(2259,47903
unlink_internal(2293,48517
rb_file_s_unlink(2310,48903
rb_file_s_rename(2330,49312
rb_file_s_umask(2377,50383
#undef DOSISH2396,50708
#define DOSISH_UNC2399,50770
#define DOSISH_DRIVE_LETTER2400,50789
#define isdirsep(2401,50817
#define isdirsep(2403,50871
#define USE_NTFS 2407,50953
#define USE_NTFS 2409,50978
#define istrailinggarbage(2413,51018
#define istrailinggarbage(2415,51080
# define CharNext(2419,51179
has_drive_letter(2424,51263
getcwdofdrv(2435,51404
skiproot(2463,51986
#define nextdirsep 2472,52156
rb_path_next(2474,52195
#define skipprefix 2483,52365
#define skipprefix(2485,52410
rb_path_skip_prefix(2488,52456
#define strrdirsep 2508,52930
rb_path_last_separator(2510,52979
chompdirsep(2528,53288
rb_path_end(2544,53554
ntfs_tail(2552,53679
#define BUFCHECK(2575,54196
#define BUFINIT(2586,54427
#define SET_EXTERNAL_ENCODING(2591,54543
file_expand_path(2598,54739
rb_file_expand_path(2889,60820
rb_file_s_expand_path(2912,61692
rb_file_absolute_path(2925,61943
rb_file_s_absolute_path(2944,62623
rmext(2957,62885
#define fncomp 2978,63261
#define fncomp 2980,63294
rb_file_s_basename(3003,63945
rb_file_s_dirname(3080,65662
rb_file_s_extname(3134,66970
rb_file_s_path(3196,68285
rb_file_s_split(3213,68710
static VALUE separator;3219,68907
file_inspect_join(3224,68995
rb_file_join(3232,69190
rb_file_s_join(3300,70599
rb_file_s_truncate(3321,71097
rb_file_truncate(3373,72206
#  define LOCK_SH 3400,72741
#  define LOCK_EX 3403,72786
#  define LOCK_NB 3406,72831
#  define LOCK_UN 3409,72876
rb_thread_flock(3418,73032
rb_file_flock(3464,74420
#undef flock3503,75185
test_check(3506,75211
#define CHECK(3525,75550
rb_f_test(3587,78353
rb_stat_s_alloc(3739,81644
rb_stat_init(3754,81898
rb_stat_init_copy(3776,82294
rb_stat_ftype(3814,83248
rb_stat_d(3831,83607
rb_stat_p(3846,83915
rb_stat_l(3873,84635
rb_stat_S(3894,85056
rb_stat_b(3917,85538
rb_stat_c(3939,85968
rb_stat_owned(3959,86380
rb_stat_rowned(3966,86500
rb_stat_grpowned(3985,86960
rb_stat_r(4005,87344
rb_stat_R(4038,88013
rb_stat_wr(4073,88883
rb_stat_w(4097,89346
rb_stat_W(4130,90015
rb_stat_ww(4165,90881
rb_stat_x(4191,91471
rb_stat_X(4223,92107
rb_stat_f(4258,92827
rb_stat_z(4276,93170
rb_stat_s(4293,93443
rb_stat_suid(4313,93888
rb_stat_sgid(4334,94346
rb_stat_sticky(4355,94784
VALUE rb_mFConst;4363,94912
rb_file_const(4366,94936
is_absolute_path(4372,95043
#   define ENABLE_PATH_CHECK 4388,95401
#   define ENABLE_PATH_CHECK 4390,95439
path_check_0(4396,95519
# define S_IWOTH 4415,95892
fpath_check(4437,96368
rb_path_check(4447,96508
file_load_ok(4474,96975
is_explicit_relative(4492,97259
rb_find_file_ext(4502,97430
rb_find_file(4566,99026
define_filetest_function(4624,100440
Init_File(4664,102264

gc.c,6080
#  define VALGRIND_MAKE_MEM_DEFINED(41,920
#  define VALGRIND_MAKE_MEM_UNDEFINED(44,1036
# define VALGRIND_MAKE_MEM_DEFINED(47,1123
# define VALGRIND_MAKE_MEM_UNDEFINED(48,1176
#define rb_setjmp(53,1282
#define rb_jmp_buf 54,1322
#   define alloca 60,1451
#define GC_MALLOC_LIMIT 78,1788
#define nomem_error 81,1828
#define MARK_STACK_MAX 83,1899
int ruby_gc_debug_indent 85,1928
#undef GC_DEBUG87,1959
#define GC_DEBUG88,1975
#define GC_PROFILE_MORE_DETAIL 91,2014
typedef struct gc_profile_record 92,2047
} gc_profile_record;106,2432
getrusage_time(109,2468
#define GC_PROF_TIMER_START 144,3243
#define GC_PROF_TIMER_STOP 163,4000
#define INIT_GC_PROF_PARAMS 173,4281
#define GC_PROF_MARK_TIMER_START 176,4405
#define GC_PROF_MARK_TIMER_STOP 182,4531
#define GC_PROF_SWEEP_TIMER_START 190,4772
#define GC_PROF_SWEEP_TIMER_STOP 196,4900
#define GC_PROF_SET_MALLOC_INFO 203,5147
#define GC_PROF_SET_HEAP_INFO 210,5426
#define INIT_GC_PROF_PARAMS 224,6113
#define GC_PROF_MARK_TIMER_START226,6205
#define GC_PROF_MARK_TIMER_STOP227,6238
#define GC_PROF_SWEEP_TIMER_START228,6270
#define GC_PROF_SWEEP_TIMER_STOP229,6304
#define GC_PROF_SET_MALLOC_INFO230,6337
#define GC_PROF_SET_HEAP_INFO 231,6369
typedef struct RVALUE 246,6905
} RVALUE;273,7484
struct heaps_slot 279,7591
#define HEAP_MIN_SLOTS 285,7667
#define FREE_MIN 286,7696
struct gc_list 288,7720
#define CALC_EXACT_MALLOC_SIZE 293,7786
typedef struct rb_objspace 295,7820
} rb_objspace_t;336,8548
#define rb_objspace 339,8620
static int ruby_initial_gc_stress 340,8662
int *ruby_initial_gc_stress_ptr ruby_initial_gc_stress_ptr341,8701
static rb_objspace_t rb_objspace 343,8766
int *ruby_initial_gc_stress_ptr ruby_initial_gc_stress_ptr344,8840
#define malloc_limit	346,8905
#define malloc_increase 347,8957
#define heap_slots	348,9015
#define heaps	349,9056
#define heaps_length	350,9091
#define heaps_used	351,9135
#define freelist	352,9175
#define lomem	353,9217
#define himem	354,9257
#define heaps_inc	355,9297
#define heaps_freed	356,9341
#define dont_gc 357,9383
#define during_gc	358,9425
#define finalizer_table 359,9470
#define deferred_final_list	360,9517
#define mark_stack	361,9570
#define mark_stack_ptr	362,9617
#define mark_stack_overflow	363,9665
#define global_List	364,9722
#define ruby_gc_stress	365,9765
#define need_call_final 367,9810
rb_objspace_alloc(371,9956
#define HEAP_SIZE 390,10358
#define HEAP_OBJ_LIMIT 398,10503
int ruby_disable_gc_stress 403,10619
rb_global_variable(409,10770
ruby_memerror_body(415,10853
ruby_memerror(422,10935
rb_memerror(440,11249
gc_stress_get(465,11842
gc_stress_set(484,12237
gc_profile_enable_get(500,12538
gc_profile_enable(516,12794
gc_profile_disable(534,13059
gc_profile_clear(551,13300
negative_size_allocation_error_with_gvl(560,13518
negative_size_allocation_error(567,13683
gc_with_gvl(584,14043
garbage_collect_with_gvl(590,14147
vm_xmalloc(608,14539
vm_xrealloc(647,15347
vm_xfree(686,16206
ruby_xmalloc(700,16486
ruby_xmalloc2(706,16567
ruby_xcalloc(716,16790
ruby_xrealloc(725,16925
ruby_xrealloc2(731,17024
ruby_xfree(741,17252
rb_gc_enable(762,17596
rb_gc_disable(784,17969
VALUE rb_mGC;793,18099
rb_gc_register_mark_object(796,18119
rb_gc_register_address(803,18245
rb_gc_unregister_address(815,18470
allocate_heaps(839,18878
assign_heap_slot(862,19321
init_heap(920,20580
set_heaps_increment(939,20942
heaps_increment(950,21197
#define RANY(960,21351
rb_newobj_from_heap(963,21396
rb_fill_value_cache(988,21904
rb_during_gc(1009,22313
rb_newobj(1016,22410
rb_node_newnode(1056,23228
rb_data_object_alloc(1071,23473
#define SET_STACK_END 1084,23792
#define SET_STACK_END 1086,23916
#define STACK_START 1089,23992
#define STACK_END 1090,24038
#define STACK_LEVEL_MAX 1091,24080
# define STACK_LENGTH 1094,24176
# define STACK_LENGTH 1096,24256
# define STACK_LENGTH 1098,24315
int ruby_stack_grow_direction;1102,24499
ruby_get_stack_grow_direction(1104,24534
#define GC_WATER_MARK 1114,24740
ruby_stack_length(1117,24774
stack_check(1126,24963
ruby_stack_check(1142,25328
init_mark_stack(1152,25496
#define MARK_STACK_EMPTY 1158,25604
gc_mark_all(1164,25815
gc_mark_rest(1183,26190
is_pointer_to_heap(1199,26515
mark_locations_array(1227,27103
gc_mark_locations(1241,27392
rb_gc_mark_locations(1251,27581
#define rb_gc_mark_locations(1256,27682
struct mark_tbl_arg 1258,27764
mark_entry(1264,27843
mark_tbl(1272,28021
rb_mark_tbl(1282,28238
mark_key(1288,28317
mark_set(1296,28494
rb_mark_set(1306,28709
mark_keyvalue(1312,28788
mark_hash(1321,29015
rb_mark_hash(1331,29236
rb_gc_mark_maybe(1337,29311
#define GC_LEVEL_MAX 1344,29439
gc_mark(1347,29477
rb_gc_mark(1373,30137
gc_mark_children(1379,30211
#define STR_ASSOC 1569,34714
add_freelist(1649,36738
finalize_list(1658,36939
free_unused_heaps(1675,37294
gc_sweep(1709,37789
rb_gc_force_recycle(1803,40132
make_deferred(1810,40270
make_io_deferred(1816,40385
obj_free(1825,40577
#define GC_NOTIFY 1945,43189
mark_current_machine_context(1950,43251
garbage_collect(1993,44512
rb_garbage_collect(2070,46155
rb_gc_mark_machine_stack(2076,46232
rb_gc_start(2108,47105
#undef Init_stack2114,47158
Init_stack(2117,47182
Init_heap(2154,48097
os_obj_of(2160,48160
os_each_obj(2239,50235
undefine_final(2263,50611
define_final(2282,50978
rb_gc_copy_finalizer(2319,51912
run_single_final(2333,52244
run_final(2341,52387
finalize_deferred(2371,53126
gc_finalize_deferred(2382,53301
rb_gc_finalize_deferred(2389,53423
chain_finalized_object(2395,53509
rb_gc_call_finalizer_at_exit(2413,53934
rb_gc(2471,55421
id2ref(2492,55963
#define NUM2PTR(2495,56028
#define NUM2PTR(2497,56099
rb_obj_id(2558,57969
set_zero(2598,59453
count_objects(2627,60152
#define COUNT_TYPE(2672,61291
#undef COUNT_TYPE2698,62015
gc_count(2719,62391
gc_malloc_allocated_size(2735,62655
gc_malloc_allocations(2750,62966
gc_profile_record_get(2757,63089
gc_profile_result(2804,65446
gc_profile_report(2856,67373
Init_GC(2879,67830

gc.h,801
#define RUBY_GC_H 3,19
#define SET_MACHINE_STACK_END(6,81
#define SET_MACHINE_STACK_END(9,214
#define USE_CONSERVATIVE_STACK_END10,270
#define RUBY_MARK_FREE_DEBUG 16,362
rb_gc_debug_indent(23,472
rb_gc_debug_body(29,559
#define RUBY_MARK_ENTER(44,832
#define RUBY_MARK_LEAVE(45,899
#define RUBY_FREE_ENTER(46,966
#define RUBY_FREE_LEAVE(47,1033
#define RUBY_GC_INFO 48,1100
#define RUBY_MARK_ENTER(51,1165
#define RUBY_MARK_LEAVE(52,1194
#define RUBY_FREE_ENTER(53,1223
#define RUBY_FREE_LEAVE(54,1252
#define RUBY_GC_INFO 55,1281
#define RUBY_MARK_UNLESS_NULL(58,1322
#define RUBY_FREE_UNLESS_NULL(59,1390
# define STACK_UPPER(62,1481
# define STACK_UPPER(64,1544
RUBY_EXTERN int ruby_stack_grow_direction;66,1582
# define stack_growup_p(68,1673
# define STACK_UPPER(72,1813

golf_prelude.c,125
static const char prelude_name0[prelude_name04,45
static const char prelude_code0[prelude_code05,108
Init_golf(123,2980

goruby.c,96
#define ruby_run_node 2,23
#undef ruby_run_node4,79
init_golf(10,223
goruby_run_node(17,307

hash.c,4603
#define HASH_DELETED 24,574
#define HASH_PROC_DEFAULT 25,605
rb_hash_freeze(28,647
VALUE rb_cHash;33,711
static VALUE envtbl;35,728
static ID id_hash,36,749
static ID id_hash, id_yield,36,749
static ID id_hash, id_yield, id_default;36,749
rb_any_cmp(39,802
rb_hash(58,1222
rb_any_hash(64,1297
static const struct st_hash_type objhash 90,1712
static const struct st_hash_type identhash 95,1794
typedef int st_foreach_func(100,1876
struct foreach_safe_arg 102,1939
foreach_safe_i(109,2045
st_foreach_safe(122,2317
typedef int rb_foreach_func(134,2633
struct hash_foreach_arg 136,2684
hash_foreach_iter(143,2783
hash_foreach_ensure(167,3372
hash_foreach_call(181,3633
rb_hash_foreach(190,3859
hash_alloc(204,4202
rb_hash_new(215,4355
rb_hash_dup(221,4417
rb_hash_modify_check(236,4745
rb_hash_tbl(244,4967
rb_hash_modify(253,5127
rb_hash_initialize(295,6585
rb_hash_s_create(329,7475
to_hash(378,8467
rb_hash_s_try_convert(395,8879
rb_hash_rehash_i(401,9009
rb_hash_rehash(428,9773
rb_hash_aref(461,10585
rb_hash_lookup2(472,10790
rb_hash_lookup(483,11003
rb_hash_fetch_m(518,12086
rb_hash_fetch(541,12616
rb_hash_default(568,13485
rb_hash_set_default(601,14399
rb_hash_default_proc(625,15007
rb_hash_set_default_proc(649,15470
key_i(667,15889
rb_hash_key(689,16285
rb_hash_index(703,16488
rb_hash_delete_key(710,16637
rb_hash_delete(746,17683
struct shift_var 759,17920
shift_i(765,17984
shift_i_safe(775,18206
rb_hash_shift(797,18753
delete_if_i(821,19292
rb_hash_delete_if(843,19810
rb_hash_reject_bang(860,20163
rb_hash_reject(884,20689
rb_hash_values_at(901,21079
select_i(913,21304
rb_hash_select(933,21827
clear_i(944,22016
rb_hash_clear(961,22317
rb_hash_aset(995,23106
replace_i(1009,23448
rb_hash_replace(1031,23860
rb_hash_size(1062,24555
rb_hash_empty_p(1081,24876
each_value_i(1087,24969
rb_hash_each_value(1111,25413
each_key_i(1119,25556
rb_hash_each_key(1142,25979
each_pair_i(1150,26118
rb_hash_each_pair(1176,26666
to_a_i(1184,26807
rb_hash_to_a(1203,27260
inspect_i(1215,27425
inspect_hash(1235,27848
rb_hash_inspect(1260,28385
rb_hash_to_hash(1275,28623
keys_i(1281,28684
rb_hash_keys(1301,29103
values_i(1312,29241
rb_hash_values(1332,29652
rb_hash_has_key(1358,30187
rb_hash_search_value(1369,30381
rb_hash_has_value(1393,30930
struct equal_data 1403,31123
eql_i(1410,31208
recursive_eql(1427,31571
hash_equal(1440,31847
rb_hash_equal(1491,33245
rb_hash_eql(1505,33520
hash_i(1511,33618
recursive_hash(1520,33797
rb_hash_hash(1543,34305
rb_hash_invert_i(1549,34401
rb_hash_invert(1569,34863
rb_hash_update_i(1578,34998
rb_hash_update_block_i(1586,35170
rb_hash_update(1620,36416
rb_hash_merge(1649,37226
assoc_i(1655,37335
rb_hash_assoc(1680,38019
rassoc_i(1691,38204
rb_hash_rassoc(1715,38831
rb_hash_flatten(1742,39640
rb_hash_compare_by_id(1773,40354
rb_hash_compare_by_id_p(1791,40732
static int path_tainted 1801,40913
static char **origenviron;origenviron1803,40944
#define GET_ENVIRON(1805,40985
#define FREE_ENVIRON(1806,41035
static char **my_environ;my_environ1807,41082
#undef environ1808,41108
#define environ 1809,41123
#undef environ1811,41175
#define environ 1812,41190
#define GET_ENVIRON(1813,41225
#define FREE_ENVIRON(1814,41252
#define GET_ENVIRON(1817,41305
#define FREE_ENVIRON(1818,41332
#define ENVMATCH(1821,41385
#define ENVNMATCH(1822,41436
#define ENVMATCH(1824,41501
#define ENVNMATCH(1825,41548
env_str_new(1829,41623
env_str_new2(1838,41767
env_delete(1845,41884
env_delete_m(1869,42331
rb_f_getenv(1879,42508
env_fetch(1903,42992
path_tainted_p(1934,43758
rb_env_path_tainted(1940,43838
envix(1950,44048
ruby_setenv(1966,44387
#undef setenv1988,45350
#undef unsetenv1989,45364
ruby_unsetenv(2035,46479
env_aset(2041,46555
env_keys(2077,47344
env_each_key(2097,47652
env_values(2111,47901
env_each_value(2131,48203
env_each_pair(2145,48464
env_reject_bang(2173,48992
env_delete_if(2196,49510
env_values_at(2204,49638
env_select(2218,49873
rb_env_clear(2244,50337
env_to_s(2260,50641
env_inspect(2266,50713
env_to_a(2297,51276
env_none(2318,51624
env_size(2324,51674
env_empty_p(2338,51864
env_has_key(2353,52081
env_assoc(2366,52343
env_has_value(2380,52652
env_rassoc(2404,53120
env_key(2429,53656
env_index(2454,54126
env_to_hash(2461,54263
env_reject(2482,54609
env_shift(2488,54689
env_invert(2508,55064
env_replace_i(2514,55139
env_replace(2526,55356
env_update_i(2543,55698
env_update(2555,55928
Init_Hash(2578,56622
#undef rb_intern2580,56640
#define rb_intern(2581,56657

id.c,66
Init_id(17,309
#undef rb_intern19,325
#define rb_intern(20,342

id.h,2891
#define RUBY_ID_H14,306
#define ID_SCOPE_SHIFT 16,325
#define ID_SCOPE_MASK 17,350
#define ID_LOCAL 18,377
#define ID_INSTANCE 19,404
#define ID_GLOBAL 20,431
#define ID_ATTRSET 21,458
#define ID_CONST 22,485
#define ID_CLASS 23,512
#define ID_JUNK 24,539
#define ID_INTERNAL 25,566
#define symIFUNC 31,643
#define symCFUNC 32,676
#define tLAST_TOKEN 35,758
enum ruby_method_ids 38,798
  tUPLUS 40,841
    tUMINUS 41,857
    tPOW 42,876
    tCMP 43,892
    tEQ 44,908
    tEQQ 45,923
    tNEQ 46,939
    tGEQ 47,955
    tLEQ 48,971
    tANDOP 49,987
    tOROP 50,1005
    tMATCH 51,1022
    tNMATCH 52,1040
    tDOT2 53,1059
    tDOT3 54,1076
    tAREF 55,1093
    tASET 56,1110
    tLSHFT 57,1127
    tRSHFT 58,1145
    tLAMBDA 59,1163
    idNULL 60,1182
    idRespond_to 61,1200
    idIFUNC 62,1224
    idCFUNC 63,1243
    idThrowState 64,1262
    id_core_set_method_alias 65,1286
    id_core_set_variable_alias 66,1322
    id_core_undef_method 67,1360
    id_core_define_method 68,1392
    id_core_define_singleton_method 69,1425
    id_core_set_postexe 70,1468
    tLAST_TOKEN 71,1499
    idPLUS 73,1529
    idMINUS 74,1547
    idMULT 75,1566
    idDIV 76,1584
    idMOD 77,1601
    idLT 78,1618
    idLTLT 79,1634
    idLTLT = tLSHFT,79,1634
    idLE 80,1655
    idLE = tLEQ,80,1655
    idGT 81,1672
    idGE 82,1688
    idGE = tGEQ,82,1688
    idEq 83,1705
    idEq = tEQ,83,1705
    idEqq 84,1721
    idEqq = tEQQ,84,1721
    idNeq 85,1739
    idNeq = tNEQ,85,1739
    idNot 86,1757
    idBackquote 87,1774
    idEqTilde 88,1797
    idEqTilde = tMATCH,88,1797
    idAREF 89,1821
    idAREF = tAREF,89,1821
    idASET 90,1841
    idASET = tASET,90,1841
    idLAST_TOKEN 91,1861
    idLAST_TOKEN = tLAST_TOKEN 91,1861
    idLAST_TOKEN = tLAST_TOKEN >> ID_SCOPE_SHIFT,91,1861
    tIntern,92,1911
    tMethodMissing,93,1924
    tLength,94,1944
    tGets,95,1957
    tSucc,96,1968
    tEach,97,1979
    tLambda,98,1990
    tSend,99,2003
    t__send__,100,2014
    tInitialize,101,2029
    tBitblt,103,2063
    tAnswer,104,2076
    tLAST_ID,106,2096
#define TOKEN2ID(107,2110
    TOKEN2ID(109,2189
    TOKEN2ID(Bitblt)109,2189
    TOKEN2ID(110,2211
    TOKEN2ID(Answer)110,2211
    TOKEN2ID(112,2240
    TOKEN2ID(Intern)112,2240
    TOKEN2ID(113,2262
    TOKEN2ID(MethodMissing)113,2262
    TOKEN2ID(114,2291
    TOKEN2ID(Length)114,2291
    TOKEN2ID(115,2313
    TOKEN2ID(Gets)115,2313
    TOKEN2ID(116,2333
    TOKEN2ID(Succ)116,2333
    TOKEN2ID(117,2353
    TOKEN2ID(Each)117,2353
    TOKEN2ID(118,2373
    TOKEN2ID(Lambda)118,2373
    TOKEN2ID(119,2395
    TOKEN2ID(Send)119,2395
    TOKEN2ID(120,2415
    TOKEN2ID(__send__)120,2415
    TOKEN2ID(121,2439
    TOKEN2ID(Initialize)121,2439
struct ruby_method_ids_check 125,2487
#define ruby_method_id_check_for(126,2518

inits.c,63
#define CALL(14,292
rb_call_inits(17,349
#undef CALL63,1143

io.c,11806
#define free(20,503
# define NO_SAFE_RENAME34,843
# define NO_LONG_FNAME38,918
# define USE_SETVBUF42,1084
# define off_t 60,1422
# define NOFILE 71,1637
#  define NOFILE 88,1884
#define O_ACCMODE 95,1970
#  define PIPE_BUF 104,2199
#  define PIPE_BUF 106,2241
VALUE rb_cIO;110,2298
VALUE rb_eEOFError;111,2312
VALUE rb_eIOError;112,2332
VALUE rb_stdin,114,2352
VALUE rb_stdin, rb_stdout,114,2352
VALUE rb_stdin, rb_stdout, rb_stderr;114,2352
VALUE rb_deferr;115,2390
static VALUE orig_stdout,116,2432
static VALUE orig_stdout, orig_stderr;116,2432
VALUE rb_output_fs;118,2472
VALUE rb_rs;119,2492
VALUE rb_output_rs;120,2505
VALUE rb_default_rs;121,2525
static VALUE argf;123,2547
static ID id_write,125,2567
static ID id_write, id_read,125,2567
static ID id_write, id_read, id_getc,125,2567
static ID id_write, id_read, id_getc, id_flush,125,2567
static ID id_write, id_read, id_getc, id_flush, id_readpartial;125,2567
static VALUE sym_mode,126,2631
static VALUE sym_mode, sym_perm,126,2631
static VALUE sym_mode, sym_perm, sym_extenc,126,2631
static VALUE sym_mode, sym_perm, sym_extenc, sym_intenc,126,2631
static VALUE sym_mode, sym_perm, sym_extenc, sym_intenc, sym_encoding,126,2631
static VALUE sym_mode, sym_perm, sym_extenc, sym_intenc, sym_encoding, sym_open_args;126,2631
static VALUE sym_textmode,127,2717
static VALUE sym_textmode, sym_binmode;127,2717
struct argf 131,2799
static int max_file_descriptor 142,3003
#define UPDATE_MAXFD(143,3044
#define argf_of(148,3169
#define ARGF 149,3222
#    define STDIO_READ_DATA_PENDING(153,3314
#    define STDIO_READ_DATA_PENDING(155,3405
#  define STDIO_READ_DATA_PENDING(158,3509
#  define STDIO_READ_DATA_PENDING(160,3598
#  define STDIO_READ_DATA_PENDING(162,3702
#  define STDIO_READ_DATA_PENDING(164,3769
#define GetWriteIO(167,3827
#define READ_DATA_PENDING(169,3874
#define READ_DATA_PENDING_COUNT(170,3925
#define READ_DATA_PENDING_PTR(171,3982
#define READ_DATA_BUFFERED(172,4050
#define READ_CHECK(174,4108
#    define S_ISSOCK(183,4293
#      define S_ISSOCK(186,4359
#	 define S_ISSOCK(189,4445
#define shutdown(196,4583
#define rb_sys_fail_path(199,4615
#define is_socket(202,4716
#define is_socket(204,4790
is_socket(207,4837
rb_eof_error(217,5003
rb_io_taint_check(223,5084
rb_io_check_initialized(232,5281
rb_io_check_closed(240,5401
rb_io_get_io(251,5586
rb_io_check_io(257,5682
rb_io_get_write_io(263,5779
rb_io_s_try_convert(292,6534
io_unread(298,6625
io_ungetbyte(319,7136
flush_before_seek(347,7910
#define io_set_eof(356,8054
#define io_unset_eof(357,8145
#define io_seek(358,8199
#define io_tell(359,8304
# define SEEK_SET 362,8392
# define SEEK_CUR 363,8412
# define SEEK_END 364,8432
#define FMODE_SYNCWRITE 367,8460
rb_io_check_readable(370,8518
io_read_encoding(389,8970
io_input_encoding(398,9126
rb_io_check_writable(407,9262
rb_io_read_pending(419,9492
rb_read_check(425,9572
rb_io_read_check(433,9684
ruby_dup(442,9816
io_alloc(460,10064
#   define S_ISREG(471,10212
wsplit_p(475,10279
struct io_internal_struct 497,10864
internal_read_func(504,10953
internal_write_func(511,11118
rb_read_internal(518,11283
rb_write_internal(529,11523
io_writable_length(540,11766
io_flush_buffer(551,11948
io_fflush(559,12152
wait_readable(601,13138
rb_io_wait_readable(610,13299
wait_writable(646,13963
rb_io_wait_writable(655,14124
# define NEED_NEWLINE_DECORATOR_ON_READ(691,14829
# define NEED_NEWLINE_DECORATOR_ON_WRITE(692,14907
# define TEXTMODE_NEWLINE_DECORATOR_ON_WRITE 693,14986
# define NEED_NEWLINE_DECORATOR_ON_READ(696,15077
# define NEED_NEWLINE_DECORATOR_ON_WRITE(697,15153
#define NEED_READCONV(699,15209
#define NEED_WRITECONV(700,15303
make_writeconv(703,15537
struct binwrite_arg 762,17864
io_binwrite_string(770,17971
io_binwrite(778,18205
do_writeconv(852,20574
io_fwrite(887,21737
io_write(894,21881
io_write_m(939,22922
rb_io_write(945,22998
rb_io_addstr(967,23364
rb_io_flush(990,23786
rb_io_tell(1029,24476
rb_io_seek(1041,24685
rb_io_seek_m(1076,25697
rb_io_set_pos(1100,26178
rb_io_rewind(1130,26808
io_fillbuf(1148,27131
rb_io_eof(1214,28766
rb_io_sync(1243,29380
rb_io_set_sync(1268,29966
rb_io_fsync(1296,30672
rb_io_fileno(1328,31248
rb_io_pid(1360,31840
rb_io_inspect(1379,32091
rb_io_to_io(1402,32545
read_buffered_data(1409,32623
io_fread(1423,32917
#define SMALLBUF 1464,33759
remain_size(1467,33793
io_enc_str(1496,34352
make_readconv(1504,34493
more_char(1532,35373
io_shift_cbuf(1595,37497
read_all(1623,38263
rb_io_set_nonblock(1678,39463
io_getpartial(1698,39864
io_readpartial(1815,44016
io_read_nonblock(1865,45442
rb_io_write_nonblock(1911,46745
io_read(1958,48036
rscheck(2006,49017
appendline(2014,49209
swallow(2094,51580
rb_io_getline_fast(2116,52134
prepare_getline_args(2165,53225
rb_io_getline_1(2210,54410
rb_io_getline(2305,56676
rb_io_gets(2315,56863
rb_io_gets_m(2342,57893
rb_io_lineno(2372,58677
rb_io_set_lineno(2399,59413
rb_io_readline(2420,59860
rb_io_readlines(2449,60743
rb_io_each_line(2487,61802
rb_io_each_byte(2515,62525
io_getc(2543,62978
rb_io_each_char(2644,66087
rb_io_lines(2681,66877
rb_io_bytes(2701,67397
rb_io_chars(2721,67886
rb_io_getc(2739,68247
rb_io_readchar(2765,68728
rb_io_getbyte(2788,69115
rb_io_readbyte(2821,69841
rb_io_ungetbyte(2849,70624
rb_io_ungetc(2885,71593
rb_io_isatty(2938,72973
rb_io_close_on_exec_p(2963,73508
rb_io_set_close_on_exec(3004,74590
#define FMODE_PREP 3041,75692
#define IS_PREP_STDIO(3042,75719
#define PREP_STDIO_NAME(3043,75769
finish_writeconv(3046,75836
struct finish_writeconv_arg 3105,77868
finish_writeconv_sync(3111,77951
fptr_finalize(3118,78124
rb_io_fptr_cleanup(3171,79606
clear_readconv(3182,79785
clear_writeconv(3195,80016
clear_codeconv(3205,80207
rb_io_fptr_finalize(3212,80299
rb_io_close(3233,80689
rb_io_close_m(3279,81744
io_call_close(3290,81980
io_close(3296,82075
rb_io_closed(3321,82636
rb_io_close_read(3359,83490
# define SHUT_RD 3370,83761
rb_io_close_write(3417,84939
# define SHUT_WR 3429,85248
rb_io_sysseek(3466,86201
rb_io_syswrite(3504,87251
rb_io_sysread(3548,88366
rb_io_binmode(3597,89325
rb_io_ascii8bit_binmode(3613,89753
rb_io_binmode_m(3652,90587
rb_io_binmode_p(3671,90921
rb_io_fmode_modestr(3679,91073
# define MODE_BTMODE(3681,91106
rb_io_modestr_fmode(3705,91841
rb_io_oflags_fmode(3751,92717
rb_io_fmode_oflags(3786,93279
rb_io_modestr_oflags(3821,93899
rb_io_oflags_modestr(3827,94026
# define MODE_BINARY(3830,94077
# define MODE_BINARY(3832,94143
rb_io_ext_int_to_encs(3858,94796
parse_mode_enc(3881,95440
mode_enc(3936,96713
rb_io_mode_enc(3944,96860
rb_io_extract_encoding_option(3953,97003
typedef struct rb_io_enc_t convconfig_t;4012,98691
validate_enc_binmode(4015,98745
extract_binmode(4025,99070
rb_io_extract_modeenc(4042,99516
struct sysopen_struct 4143,101854
sysopen_func(4150,101951
rb_sysopen_internal(4157,102093
rb_sysopen(4167,102357
rb_fdopen(4190,102752
io_check_tty(4229,103464
rb_file_open_generic(4236,103582
rb_file_open_internal(4260,104246
rb_file_open_str(4287,104940
rb_file_open(4294,105098
static struct pipe_list 4300,105290
} *pipe_list;pipe_list4303,105363
pipe_add_fptr(4306,105390
pipe_del_fptr(4317,105574
pipe_atexit(4340,105947
pipe_finalize(4353,106141
rb_io_synchronized(4371,106490
rb_io_unbuffered(4378,106599
rb_pipe(4384,106670
struct popen_arg 4402,106993
popen_redirect(4410,107114
rb_close_before_exec(4441,107853
popen_exec(4463,108364
pipe_open(4473,108526
pipe_open_v(4729,115188
pipe_open_s(4738,115463
pop_last_hash(4758,116020
rb_io_s_popen(4837,118938
rb_scan_open_args(4879,119982
rb_open_file(4921,121136
rb_io_s_open(4967,122653
rb_io_s_sysopen(4990,123094
check_pipe_command(5019,123816
rb_f_open(5142,127801
rb_io_open(5179,128542
rb_io_open_with_args(5199,129109
io_reopen(5209,129264
rb_io_reopen(5313,132182
rb_io_init_copy(5387,134235
rb_io_printf(5442,135543
rb_f_printf(5460,135913
rb_io_print(5499,136857
rb_f_print(5547,137965
rb_io_putc(5570,138413
rb_f_putc(5588,138641
io_puts_ary(5597,138818
rb_io_puts(5635,139627
rb_f_puts(5672,140321
rb_p(5681,140515
rb_f_p(5715,141355
rb_obj_display(5759,142050
rb_write_error2(5775,142273
rb_write_error(5786,142512
must_respond_to(5792,142603
stdout_setter(5802,142828
prep_io(5809,142956
rb_io_fdopen(5830,143352
prep_stdio(5839,143566
rb_io_stdio_file(5851,143795
rb_io_initialize(5932,146428
rb_file_initialize(6002,148381
rb_io_s_new(6021,148786
rb_io_s_for_fd(6042,149178
argf_mark(6050,149335
argf_free(6060,149518
argf_init(6067,149611
argf_alloc(6076,149752
#undef rb_argv6085,149923
argf_initialize(6088,149952
argf_initialize_copy(6097,150092
argf_set_lineno(6110,150361
argf_lineno(6118,150503
argf_forward(6124,150578
#define next_argv(6129,150708
#define ARGF_GENERIC_INPUT_P(6130,150749
#define ARGF_FORWARD(6132,150855
#define NEXT_ARGF_FORWARD(6136,150980
argf_close(6142,151116
argf_next_argv(6148,151204
argf_getline(6274,154135
argf_lineno_getter(6304,154764
argf_lineno_setter(6311,154880
rb_f_gets(6354,156329
argf_gets(6363,156520
rb_gets(6374,156681
rb_f_readline(6412,157416
argf_readline(6421,157619
rb_f_readlines(6448,158188
argf_readlines(6457,158394
rb_f_backquote(6484,159044
select_internal(6506,159473
struct select_args 6633,162884
select_call(6641,163031
select_end(6649,163209
rb_f_select(6671,163640
io_cntl(6700,164319
rb_io_ctl(6720,164697
#define IOCPARM_LEN(6749,165199
rb_io_ioctl(6803,166692
rb_io_fcntl(6825,167396
rb_f_syscall(6858,168273
io_new_instance(6959,170864
io_encoding_set(6965,170977
rb_io_s_pipe(7073,174310
struct foreach_arg 7115,175308
open_key_args(7122,175390
io_s_foreach(7154,176149
rb_io_s_foreach(7188,176997
io_s_readlines(7200,177339
rb_io_s_readlines(7224,178012
io_s_read(7235,178315
rb_io_s_read(7273,179528
rb_io_s_binread(7304,180554
struct copy_stream_struct 7321,181052
maygvl_copy_stream_wait_read(7340,181424
nogvl_copy_stream_wait_write(7355,181778
#define USE_SENDFILE7372,182160
simple_sendfile(7379,182258
nogvl_copy_stream_sendfile(7390,182429
maygvl_copy_stream_read(7477,184495
nogvl_copy_stream_write(7517,185385
nogvl_copy_stream_read_write(7541,185978
nogvl_copy_stream_func(7600,187384
copy_stream_fallback_body(7622,187775
copy_stream_fallback(7678,189217
copy_stream_body(7690,189580
copy_stream_finalize(7799,192727
rb_io_s_copy_stream(7848,194059
rb_io_external_encoding(7884,194924
rb_io_internal_encoding(7909,195461
rb_io_set_encoding(7938,196545
argf_external_encoding(7951,196824
argf_internal_encoding(7960,197053
argf_set_encoding(7969,197282
argf_tell(7983,197599
argf_seek_m(7993,197781
argf_set_pos(8003,198008
argf_rewind(8013,198232
argf_fileno(8023,198420
argf_to_io(8033,198598
argf_eof(8041,198710
argf_read(8054,198920
struct argf_call_arg 8098,199799
argf_forward_call(8105,199886
argf_readpartial(8113,200054
argf_getc(8154,201005
argf_getbyte(8176,201388
argf_readchar(8198,201791
argf_readbyte(8220,202192
argf_each_line(8233,202364
argf_each_byte(8244,202628
argf_each_char(8255,202857
argf_filename(8266,203086
argf_filename_getter(8273,203173
argf_file(8279,203263
argf_binmode_m(8286,203350
argf_binmode_p(8297,203524
argf_skip(8303,203611
argf_close_m(8313,203767
argf_closed(8325,203953
argf_to_s(8333,204080
argf_inplace_mode_get(8339,204152
opt_i_get(8346,204278
argf_inplace_mode_set(8352,204365
opt_i_set(8368,204667
ruby_get_inplace_mode(8374,204763
ruby_set_inplace_mode(8380,204826
argf_argv(8388,204997
argf_argv_getter(8394,205059
rb_get_argv(8400,205134
Init_IO(8488,209000
#undef rb_intern8490,209016
#define rb_intern(8491,209033

iseq.c,2026
VALUE rb_cISeq;22,419
#define hidden_obj_p(24,436
compile_data_free(27,522
iseq_free(42,816
iseq_mark(71,1552
iseq_alloc(99,2388
set_relation(110,2598
prepare_iseq_build(150,3619
cleanup_iseq_build(210,5464
static rb_compile_option_t COMPILE_OPTION_DEFAULT 224,5785
static const rb_compile_option_t COMPILE_OPTION_FALSE 234,6330
make_compile_option(237,6404
#define SET_COMPILE_OPTION(251,6761
#define SET_COMPILE_OPTION_NUM(256,6960
#undef SET_COMPILE_OPTION269,7614
#undef SET_COMPILE_OPTION_NUM270,7640
make_compile_option_value(278,7781
#define SET_COMPILE_OPTION(281,7869
#define SET_COMPILE_OPTION_NUM(283,7977
#undef SET_COMPILE_OPTION295,8536
#undef SET_COMPILE_OPTION_NUM296,8562
rb_iseq_new(301,8617
rb_iseq_new_top(309,8811
rb_iseq_new_main(316,8999
rb_iseq_new_with_bopt_and_opt(325,9270
rb_iseq_new_with_opt(343,9708
rb_iseq_new_with_bopt(352,9957
#define CHECK_ARRAY(359,10188
#define CHECK_STRING(360,10260
#define CHECK_SYMBOL(361,10334
static inline VALUE CHECK_INTEGER(362,10408
iseq_load(364,10489
iseq_s_load(444,13067
ruby_iseq_load(453,13243
compile_string(459,13365
rb_iseq_compile_with_option(472,13664
rb_iseq_compile(491,14241
iseq_s_compile(497,14373
iseq_s_compile_file(511,14750
iseq_s_compile_option_set(535,15380
iseq_s_compile_option_get(545,15589
iseq_check(551,15714
iseq_eval(562,15911
iseq_inspect(569,16000
iseq_to_a(586,16391
rb_iseq_first_lineno(594,16515
get_insn_info(603,16731
find_line_no(618,17048
find_prev_line_no(630,17266
insn_operand_intern(650,17639
rb_iseq_disasm_insn(765,19868
catch_type(825,21377
rb_iseq_disasm(847,21779
    enum {header_minlen header_minlen857,21994
iseq_s_disasm(949,24677
ruby_node_name(968,25034
#define DECL_SYMBOL(978,25177
#define INIT_SYMBOL(981,25232
register_label(985,25314
exception_type2symbol(997,25586
cdhash_each(1014,26092
iseq_data_to_ary(1022,26237
rb_iseq_clone(1266,32558
rb_iseq_build_for_ruby2cext(1292,33060
#define ALLOC_AND_COPY(1323,33893
Init_ISeq(1345,34434

iseq.h,1049
#define RUBY_COMPILE_H13,278
#define ISEQ_TYPE_TOP 25,658
#define ISEQ_TYPE_METHOD 26,694
#define ISEQ_TYPE_BLOCK 27,730
#define ISEQ_TYPE_CLASS 28,766
#define ISEQ_TYPE_RESCUE 29,802
#define ISEQ_TYPE_ENSURE 30,838
#define ISEQ_TYPE_EVAL 31,874
#define ISEQ_TYPE_MAIN 32,910
#define ISEQ_TYPE_DEFINED_GUARD 33,946
#define CATCH_TYPE_RESCUE 35,990
#define CATCH_TYPE_ENSURE 36,1027
#define CATCH_TYPE_RETRY 37,1064
#define CATCH_TYPE_BREAK 38,1101
#define CATCH_TYPE_REDO 39,1138
#define CATCH_TYPE_NEXT 40,1175
struct iseq_insn_info_entry 42,1213
struct iseq_catch_table_entry 48,1327
#define INITIAL_ISEQ_COMPILE_DATA_STORAGE_BUFF_SIZE 57,1489
struct iseq_compile_data_storage 59,1548
struct iseq_compile_data 66,1694
#define DEFINED_IVAR 92,2419
#define DEFINED_IVAR2 93,2453
#define DEFINED_GVAR 94,2487
#define DEFINED_CVAR 95,2521
#define DEFINED_CONST 96,2555
#define DEFINED_METHOD 97,2589
#define DEFINED_YIELD 98,2623
#define DEFINED_REF 99,2657
#define DEFINED_ZSUPER 100,2691
#define DEFINED_FUNC 101,2725

load.c,1041
VALUE ruby_dln_librefs;10,125
#define IS_RBEXT(12,150
#define IS_SOEXT(13,194
#define IS_DLEXT(15,276
#define IS_DLEXT(17,352
static const char *const loadable_ext[loadable_ext21,405
rb_get_load_path(30,516
rb_get_expanded_load_path(37,615
load_path_getter(53,982
get_loaded_features(59,1063
get_loading_table(65,1150
loaded_feature_path(71,1228
struct loaded_feature_searching 99,1918
loaded_feature_path_i(108,2062
rb_feature_p(120,2427
rb_provided(210,4656
rb_feature_provided(216,4742
rb_provide_feature(242,5510
rb_provide(248,5603
rb_load(256,5734
rb_load_protect(328,7357
rb_f_load(356,8132
load_lock(366,8310
load_unlock(386,8874
rb_f_require(428,10230
search_required(434,10335
load_failed(522,12677
load_ext(529,12805
rb_require_safe(536,12912
rb_require(602,14249
init_ext_call(610,14401
ruby_init_ext(618,14511
rb_mod_autoload(643,15125
rb_mod_autoload_p(657,15342
rb_f_autoload(674,15764
rb_f_autoload_p(688,16042
Init_load(699,16263
#undef rb_intern701,16277
#define rb_intern(702,16294

main.c,39
#undef RUBY_EXPORT12,265
main(22,393

marshal.c,3355
#define BITSPERSHORT 26,499
#define SHORTMASK 27,533
#define SHORTDN(28,573
#define SHORTLEN(31,651
shortlen(34,692
#define SHORTLEN(46,889
#define MARSHAL_MAJOR 49,933
#define MARSHAL_MINOR 50,959
#define TYPE_NIL	52,986
#define TYPE_TRUE	53,1007
#define TYPE_FALSE	54,1029
#define TYPE_FIXNUM	55,1052
#define TYPE_EXTENDED	57,1077
#define TYPE_UCLASS	58,1103
#define TYPE_OBJECT	59,1127
#define TYPE_DATA 60,1151
#define TYPE_USERDEF	61,1179
#define TYPE_USRMARSHAL	62,1204
#define TYPE_FLOAT	63,1232
#define TYPE_BIGNUM	64,1255
#define TYPE_STRING	65,1279
#define TYPE_REGEXP	66,1303
#define TYPE_ARRAY	67,1327
#define TYPE_HASH	68,1350
#define TYPE_HASH_DEF	69,1372
#define TYPE_STRUCT	70,1398
#define TYPE_MODULE_OLD	71,1422
#define TYPE_CLASS	72,1450
#define TYPE_MODULE	73,1473
#define TYPE_SYMBOL	75,1498
#define TYPE_SYMLINK	76,1522
#define TYPE_IVAR	78,1548
#define TYPE_LINK	79,1570
static ID s_dump,81,1593
static ID s_dump, s_load,81,1593
static ID s_dump, s_load, s_mdump,81,1593
static ID s_dump, s_load, s_mdump, s_mload;81,1593
static ID s_dump_data,82,1637
static ID s_dump_data, s_load_data,82,1637
static ID s_dump_data, s_load_data, s_alloc,82,1637
static ID s_dump_data, s_load_data, s_alloc, s_call;82,1637
static ID s_getbyte,83,1690
static ID s_getbyte, s_read,83,1690
static ID s_getbyte, s_read, s_write,83,1690
static ID s_getbyte, s_read, s_write, s_binmode;83,1690
} marshal_compat_t;92,1886
static st_table *compat_allocator_tbl;compat_allocator_tbl94,1907
static VALUE compat_allocator_tbl_wrapper;95,1946
mark_marshal_compat_i(98,2001
mark_marshal_compat_t(107,2207
rb_marshal_define_compat(114,2319
struct dump_arg 134,2905
struct dump_call_arg 146,3108
check_dump_arg(153,3203
mark_dump_arg(162,3394
class2path(172,3556
w_nbyte(191,3984
w_byte(204,4291
w_bytes(210,4370
w_short(217,4483
w_long(224,4621
#define DECIMAL_MANT 267,5361
#define MANT_BITS 270,5449
#define MANT_BITS 272,5494
#define MANT_BITS 274,5539
#define MANT_BITS 276,5566
save_mantissa(280,5605
load_mantissa(309,6111
#define load_mantissa(339,6833
#define save_mantissa(340,6872
#define FLOAT_DIG 344,6927
#define FLOAT_DIG 346,6963
w_float(350,7004
w_symbol(378,7606
w_unique(399,8048
hash_each(410,8285
w_extended(418,8471
w_class(438,9006
w_uclass(457,9447
w_obj_each(470,9728
w_encoding(479,9950
w_ivar(503,10644
w_objivar(514,10868
w_object(533,11243
#define has_ivars(539,11393
dump(793,17585
dump_ensure(804,17806
marshal_dump(849,18923
struct load_arg 906,20298
check_load_arg(919,20500
mark_load_arg(928,20691
r_byte(942,20993
long_toobig(965,21466
#undef SIGN_EXTEND_CHAR971,21615
# define SIGN_EXTEND_CHAR(973,21652
# define SIGN_EXTEND_CHAR(976,21760
r_long(980,21846
#define r_bytes(1012,22395
r_bytes0(1015,22459
r_symlink(1045,23180
r_symreal(1057,23372
r_symbol(1068,23572
r_unique(1084,23862
r_string(1090,23949
r_entry(1096,24023
r_leave(1119,24616
r_ivar(1141,25257
path2class(1162,25650
path2module(1173,25841
obj_alloc_by_path(1184,26035
r_object0(1205,26615
#define f_gsub_bang(1382,30497
r_object(1596,35678
load(1602,35763
load_ensure(1608,35834
marshal_load(1631,36496
Init_marshal(1715,39702
#undef rb_intern1717,39723
#define rb_intern(1718,39740
rb_marshal_dump(1749,40878
rb_marshal_load(1761,41074

math.c,859
VALUE rb_mMath;16,328
#define Need_Float(19,382
#define Need_Float2(20,425
domain_check(26,521
infinity_check(46,805
math_atan2(74,1248
math_cos(90,1528
math_sin(105,1771
math_tan(121,1999
math_acos(136,2223
math_asin(156,2549
math_atan(176,2878
cosh(184,3000
math_cosh(198,3205
sinh(207,3332
math_sinh(222,3539
tanh(230,3661
math_tanh(245,3865
math_acosh(259,4091
math_asinh(279,4409
math_atanh(293,4638
math_exp(314,4953
#  define nan(323,5137
# define log(325,5168
# define log10(326,5215
math_log(340,5523
log2(362,5925
math_log2(379,6155
math_log10(400,6509
math_sqrt(438,7288
math_cbrt(483,8273
math_frexp(502,8756
math_ldexp(524,9167
math_hypot(541,9516
math_erf(555,9750
math_erfc(569,9965
math_gamma(617,11391
math_lgamma(641,11884
#define exp1(656,12154
#define exp2(663,12243
exp2(670,12344
exp1(682,12479

miniprelude.c,126
static const char prelude_name0[prelude_name04,45
static const char prelude_code0[prelude_code05,103
Init_prelude(44,905

newline.c,802
newline_byte_array[newline_byte_array10,190
#define universal_newline_offsets 11,218
#define crlf_newline_offsets 30,1399
newline_word_array[newline_word_array51,2606
#define universal_newline_infos 52,2633
#define universal_newline 55,2696
#define crlf_newline_infos 59,2801
#define crlf_newline 62,2882
#define cr_newline_infos 66,2972
#define cr_newline 69,3041
#define TRANSCODE_TABLE_INFO 74,3130
#define STATE 77,3231
#define NORMAL 78,3253
#define JUST_AFTER_CR 79,3270
#define NEWLINES_MET 82,3341
#define MET_LF 83,3370
#define MET_CRLF 84,3399
#define MET_CR 85,3428
universal_newline_init(88,3469
fun_so_universal_newline(97,3614
universal_newline_finish(132,4389
rb_universal_newline 142,4622
rb_crlf_newline 155,5053
rb_cr_newline 167,5383
Init_newline(179,5685

node.h,11214
#define RUBY_NODE_H 13,287
enum node_type 22,393
    NODE_METHOD,23,410
#define NODE_METHOD 24,427
    NODE_FBODY,25,464
#define NODE_FBODY 26,480
    NODE_CFUNC,27,516
#define NODE_CFUNC 28,532
    NODE_SCOPE,29,568
#define NODE_SCOPE 30,584
    NODE_BLOCK,31,620
#define NODE_BLOCK 32,636
    NODE_IF,33,672
#define NODE_IF 34,685
    NODE_CASE,35,718
#define NODE_CASE 36,733
    NODE_PATERN,37,768
#define NODE_PATERN 38,785
    NODE_WHEN,39,823
#define NODE_WHEN 40,838
    NODE_OPT_N,41,873
#define NODE_OPT_N 42,889
    NODE_WHILE,43,925
#define NODE_WHILE 44,941
    NODE_UNTIL,45,977
#define NODE_UNTIL 46,993
    NODE_ITER,47,1029
#define NODE_ITER 48,1044
    NODE_FOR,49,1079
#define NODE_FOR 50,1093
    NODE_BREAK,51,1127
#define NODE_BREAK 52,1143
    NODE_NEXT,53,1179
#define NODE_NEXT 54,1194
    NODE_REDO,55,1229
#define NODE_REDO 56,1244
    NODE_RETRY,57,1279
#define NODE_RETRY 58,1295
    NODE_BEGIN,59,1331
#define NODE_BEGIN 60,1347
    NODE_RESCUE,61,1383
#define NODE_RESCUE 62,1400
    NODE_RESBODY,63,1437
#define NODE_RESBODY 64,1455
    NODE_ENSURE,65,1493
#define NODE_ENSURE 66,1510
    NODE_AND,67,1547
#define NODE_AND 68,1561
    NODE_OR,69,1595
#define NODE_OR 70,1608
    NODE_MASGN,71,1641
#define NODE_MASGN 72,1657
    NODE_LASGN,73,1693
#define NODE_LASGN 74,1709
    NODE_DASGN,75,1745
#define NODE_DASGN 76,1761
    NODE_DASGN_CURR,77,1797
#define NODE_DASGN_CURR 78,1818
    NODE_GASGN,79,1859
#define NODE_GASGN 80,1875
    NODE_IASGN,81,1911
#define NODE_IASGN 82,1927
    NODE_IASGN2,83,1963
#define NODE_IASGN2 84,1980
    NODE_CDECL,85,2017
#define NODE_CDECL 86,2033
    NODE_CVASGN,87,2069
#define NODE_CVASGN 88,2086
    NODE_CVDECL,89,2123
#define NODE_CVDECL 90,2140
    NODE_OP_ASGN1,91,2177
#define NODE_OP_ASGN1 92,2196
    NODE_OP_ASGN2,93,2235
#define NODE_OP_ASGN2 94,2254
    NODE_OP_ASGN_AND,95,2293
#define NODE_OP_ASGN_AND 96,2315
    NODE_OP_ASGN_OR,97,2357
#define NODE_OP_ASGN_OR 98,2378
    NODE_CALL,99,2419
#define NODE_CALL 100,2434
    NODE_FCALL,101,2469
#define NODE_FCALL 102,2485
    NODE_VCALL,103,2521
#define NODE_VCALL 104,2537
    NODE_SUPER,105,2573
#define NODE_SUPER 106,2589
    NODE_ZSUPER,107,2625
#define NODE_ZSUPER 108,2642
    NODE_ARRAY,109,2679
#define NODE_ARRAY 110,2695
    NODE_ZARRAY,111,2731
#define NODE_ZARRAY 112,2748
    NODE_VALUES,113,2785
#define NODE_VALUES 114,2802
    NODE_HASH,115,2839
#define NODE_HASH 116,2854
    NODE_RETURN,117,2889
#define NODE_RETURN 118,2906
    NODE_YIELD,119,2943
#define NODE_YIELD 120,2959
    NODE_LVAR,121,2995
#define NODE_LVAR 122,3010
    NODE_DVAR,123,3045
#define NODE_DVAR 124,3060
    NODE_GVAR,125,3095
#define NODE_GVAR 126,3110
    NODE_IVAR,127,3145
#define NODE_IVAR 128,3160
    NODE_CONST,129,3195
#define NODE_CONST 130,3211
    NODE_CVAR,131,3247
#define NODE_CVAR 132,3262
    NODE_NTH_REF,133,3297
#define NODE_NTH_REF 134,3315
    NODE_BACK_REF,135,3353
#define NODE_BACK_REF 136,3372
    NODE_MATCH,137,3411
#define NODE_MATCH 138,3427
    NODE_MATCH2,139,3463
#define NODE_MATCH2 140,3480
    NODE_MATCH3,141,3517
#define NODE_MATCH3 142,3534
    NODE_LIT,143,3571
#define NODE_LIT 144,3585
    NODE_STR,145,3619
#define NODE_STR 146,3633
    NODE_DSTR,147,3667
#define NODE_DSTR 148,3682
    NODE_XSTR,149,3717
#define NODE_XSTR 150,3732
    NODE_DXSTR,151,3767
#define NODE_DXSTR 152,3783
    NODE_EVSTR,153,3819
#define NODE_EVSTR 154,3835
    NODE_DREGX,155,3871
#define NODE_DREGX 156,3887
    NODE_DREGX_ONCE,157,3923
#define NODE_DREGX_ONCE 158,3944
    NODE_ARGS,159,3985
#define NODE_ARGS 160,4000
    NODE_ARGS_AUX,161,4035
#define NODE_ARGS_AUX 162,4054
    NODE_OPT_ARG,163,4093
#define NODE_OPT_ARG 164,4111
    NODE_POSTARG,165,4149
#define NODE_POSTARG 166,4167
    NODE_ARGSCAT,167,4205
#define NODE_ARGSCAT 168,4223
    NODE_ARGSPUSH,169,4261
#define NODE_ARGSPUSH 170,4280
    NODE_SPLAT,171,4319
#define NODE_SPLAT 172,4335
    NODE_TO_ARY,173,4371
#define NODE_TO_ARY 174,4388
    NODE_BLOCK_ARG,175,4425
#define NODE_BLOCK_ARG 176,4445
    NODE_BLOCK_PASS,177,4485
#define NODE_BLOCK_PASS 178,4506
    NODE_DEFN,179,4547
#define NODE_DEFN 180,4562
    NODE_DEFS,181,4597
#define NODE_DEFS 182,4612
    NODE_ALIAS,183,4647
#define NODE_ALIAS 184,4663
    NODE_VALIAS,185,4699
#define NODE_VALIAS 186,4716
    NODE_UNDEF,187,4753
#define NODE_UNDEF 188,4769
    NODE_CLASS,189,4805
#define NODE_CLASS 190,4821
    NODE_MODULE,191,4857
#define NODE_MODULE 192,4874
    NODE_SCLASS,193,4911
#define NODE_SCLASS 194,4928
    NODE_COLON2,195,4965
#define NODE_COLON2 196,4982
    NODE_COLON3,197,5019
#define NODE_COLON3 198,5036
    NODE_DOT2,199,5073
#define NODE_DOT2 200,5088
    NODE_DOT3,201,5123
#define NODE_DOT3 202,5138
    NODE_FLIP2,203,5173
#define NODE_FLIP2 204,5189
    NODE_FLIP3,205,5225
#define NODE_FLIP3 206,5241
    NODE_ATTRSET,207,5277
#define NODE_ATTRSET 208,5295
    NODE_SELF,209,5333
#define NODE_SELF 210,5348
    NODE_NIL,211,5383
#define NODE_NIL 212,5397
    NODE_TRUE,213,5431
#define NODE_TRUE 214,5446
    NODE_FALSE,215,5481
#define NODE_FALSE 216,5497
    NODE_ERRINFO,217,5533
#define NODE_ERRINFO 218,5551
    NODE_DEFINED,219,5589
#define NODE_DEFINED 220,5607
    NODE_POSTEXE,221,5645
#define NODE_POSTEXE 222,5663
    NODE_ALLOCA,223,5701
#define NODE_ALLOCA 224,5718
    NODE_BMETHOD,225,5755
#define NODE_BMETHOD 226,5773
    NODE_MEMO,227,5811
#define NODE_MEMO 228,5826
    NODE_IFUNC,229,5861
#define NODE_IFUNC 230,5877
    NODE_DSYM,231,5913
#define NODE_DSYM 232,5928
    NODE_ATTRASGN,233,5963
#define NODE_ATTRASGN 234,5982
    NODE_PRELUDE,235,6021
#define NODE_PRELUDE 236,6039
    NODE_LAMBDA,237,6077
#define NODE_LAMBDA 238,6094
    NODE_OPTBLOCK,239,6131
#define NODE_OPTBLOCK 240,6150
    NODE_LAST241,6189
#define NODE_LAST 242,6203
typedef struct RNode 245,6242
} NODE;269,6605
#define RNODE(271,6614
#define NODE_FL_NEWLINE 274,6717
#define NODE_TYPESHIFT 276,6758
#define NODE_TYPEMASK 277,6783
#define nd_type(279,6839
#define nd_set_type(280,6920
#define NODE_LSHIFT 283,7041
#define NODE_LMASK 284,7080
#define nd_line(285,7160
#define nd_set_line(286,7234
#define nd_head 289,7353
#define nd_alen 290,7378
#define nd_next 291,7403
#define nd_cond 293,7429
#define nd_body 294,7454
#define nd_else 295,7479
#define nd_orig 297,7505
#define nd_resq 299,7532
#define nd_ensr 300,7557
#define nd_1st 302,7583
#define nd_2nd 303,7608
#define nd_stts 305,7634
#define nd_entry 307,7660
#define nd_vid 308,7686
#define nd_cflag 309,7709
#define nd_cval 310,7732
#define nd_oid 312,7759
#define nd_cnt 313,7782
#define nd_tbl 314,7806
#define nd_var 316,7831
#define nd_iter 317,7856
#define nd_value 319,7882
#define nd_aid 320,7907
#define nd_lit 322,7931
#define nd_frml 324,7958
#define nd_rest 325,7983
#define nd_opt 326,8006
#define nd_pid 327,8031
#define nd_plen 328,8054
#define nd_recv 330,8080
#define nd_mid 331,8105
#define nd_args 332,8128
#define nd_noex 334,8154
#define nd_defn 335,8177
#define nd_cfnc 337,8203
#define nd_argc 338,8229
#define nd_cpath 340,8255
#define nd_super 341,8280
#define nd_modl 343,8306
#define nd_clss 344,8329
#define nd_beg 346,8356
#define nd_end 347,8381
#define nd_state 348,8406
#define nd_rval 349,8432
#define nd_nth 351,8459
#define nd_tag 353,8485
#define nd_tval 354,8508
#define nd_visi 356,8535
#define NEW_NODE(358,8561
#define NEW_METHOD(360,8648
#define NEW_FBODY(361,8702
#define NEW_DEFN(362,8752
#define NEW_DEFS(363,8817
#define NEW_CFUNC(364,8882
#define NEW_IFUNC(365,8932
#define NEW_SCOPE(366,8982
#define NEW_BLOCK(367,9042
#define NEW_IF(368,9090
#define NEW_UNLESS(369,9136
#define NEW_CASE(370,9176
#define NEW_PATERN(371,9224
#define NEW_WHEN(372,9276
#define NEW_OPT_N(373,9326
#define NEW_WHILE(374,9374
#define NEW_UNTIL(375,9426
#define NEW_FOR(376,9478
#define NEW_ITER(377,9526
#define NEW_LAMBDA(378,9587
#define NEW_BREAK(379,9637
#define NEW_NEXT(380,9685
#define NEW_REDO(381,9731
#define NEW_RETRY(382,9776
#define NEW_BEGIN(383,9823
#define NEW_RESCUE(384,9871
#define NEW_RESBODY(385,9929
#define NEW_ENSURE(386,9987
#define NEW_RETURN(387,10041
#define NEW_YIELD(388,10091
#define NEW_LIST(389,10141
#define NEW_ARRAY(390,10175
#define NEW_ZARRAY(391,10223
#define NEW_HASH(392,10272
#define NEW_MASGN(393,10319
#define NEW_GASGN(394,10371
#define NEW_LASGN(395,10442
#define NEW_DASGN(396,10496
#define NEW_DASGN_CURR(397,10550
#define NEW_IASGN(398,10614
#define NEW_IASGN2(399,10668
#define NEW_CDECL(400,10724
#define NEW_CVASGN(401,10786
#define NEW_CVDECL(402,10842
#define NEW_OP_ASGN1(403,10898
#define NEW_OP_ASGN2(404,10958
#define NEW_OP_ASGN22(405,11039
#define NEW_OP_ASGN_OR(406,11111
#define NEW_OP_ASGN_AND(407,11175
#define NEW_GVAR(408,11241
#define NEW_LVAR(409,11304
#define NEW_DVAR(410,11350
#define NEW_IVAR(411,11396
#define NEW_CONST(412,11442
#define NEW_CVAR(413,11490
#define NEW_NTH_REF(414,11536
#define NEW_BACK_REF(415,11589
#define NEW_MATCH(416,11643
#define NEW_MATCH2(417,11691
#define NEW_MATCH3(418,11747
#define NEW_LIT(419,11801
#define NEW_STR(420,11845
#define NEW_DSTR(421,11889
#define NEW_XSTR(422,11935
#define NEW_DXSTR(423,11981
#define NEW_DSYM(424,12029
#define NEW_EVSTR(425,12075
#define NEW_CALL(426,12125
#define NEW_FCALL(427,12175
#define NEW_VCALL(428,12225
#define NEW_SUPER(429,12273
#define NEW_ZSUPER(430,12321
#define NEW_ARGS(431,12370
#define NEW_ARGS_AUX(432,12418
#define NEW_OPT_ARG(433,12474
#define NEW_POSTARG(434,12528
#define NEW_ARGSCAT(435,12582
#define NEW_ARGSPUSH(436,12636
#define NEW_SPLAT(437,12692
#define NEW_TO_ARY(438,12740
#define NEW_BLOCK_ARG(439,12790
#define NEW_BLOCK_PASS(440,12857
#define NEW_ALIAS(441,12915
#define NEW_VALIAS(442,12965
#define NEW_UNDEF(443,13017
#define NEW_CLASS(444,13065
#define NEW_SCLASS(445,13132
#define NEW_MODULE(446,13197
#define NEW_COLON2(447,13262
#define NEW_COLON3(448,13314
#define NEW_DOT2(449,13364
#define NEW_DOT3(450,13412
#define NEW_ATTRSET(451,13460
#define NEW_SELF(452,13512
#define NEW_NIL(453,13557
#define NEW_TRUE(454,13600
#define NEW_FALSE(455,13645
#define NEW_ERRINFO(456,13692
#define NEW_DEFINED(457,13743
#define NEW_PREEXE(458,13795
#define NEW_POSTEXE(459,13830
#define NEW_BMETHOD(460,13882
#define NEW_ATTRASGN(461,13934
#define NEW_PRELUDE(462,13992
#define NEW_OPTBLOCK(463,14046
#define NOEX_PUBLIC 465,14101
#define NOEX_NOSUPER 466,14129
#define NOEX_PRIVATE 467,14157
#define NOEX_PROTECTED 468,14185
#define NOEX_MASK 469,14213
#define NOEX_BASIC 470,14252
#define NOEX_UNDEF 472,14281
#define NOEX_MODFUNC 474,14318
#define NOEX_SUPER 475,14346
#define NOEX_VCALL 476,14374
#define NOEX_SAFE(478,14403
#define NOEX_WITH(479,14444
#define NOEX_WITH_SAFE(480,14519
#define CALL_PUBLIC 482,14576
#define CALL_FCALL 483,14598
#define CALL_VCALL 484,14620
#define CALL_SUPER 485,14642
#define RUBY_VM_METHOD_NODE 487,14665

numeric.c,3554
#define FLT_RADIX 32,613
#define FLT_ROUNDS 35,659
#define DBL_MIN 38,703
#define DBL_MAX 41,766
#define DBL_MIN_EXP 44,833
#define DBL_MAX_EXP 47,888
#define DBL_MIN_10_EXP 50,943
#define DBL_MAX_10_EXP 53,1003
#define DBL_DIG 56,1053
#define DBL_MANT_DIG 59,1100
#define DBL_EPSILON 62,1151
round(67,1228
static ID id_coerce,86,1513
static ID id_coerce, id_to_i,86,1513
static ID id_coerce, id_to_i, id_eq;86,1513
VALUE rb_cNumeric;88,1551
VALUE rb_cFloat;89,1570
VALUE rb_cInteger;90,1587
VALUE rb_cFixnum;91,1606
VALUE rb_eZeroDivError;93,1625
VALUE rb_eFloatDomainError;94,1649
rb_num_zerodiv(97,1683
num_coerce(120,2365
coerce_body(130,2549
coerce_rescue(136,2638
do_coerce(149,2924
rb_num_coerce_bin(170,3337
rb_num_coerce_cmp(177,3461
rb_num_coerce_relop(185,3604
num_sadded(203,3966
num_init_copy(218,4458
num_uplus(233,4773
num_uminus(246,4936
num_quo(264,5233
num_fdiv(278,5425
num_div(296,5804
num_divmod(345,7754
num_modulo(359,8019
num_remainder(377,8554
num_real_p(400,9091
num_int_p(414,9343
num_abs(431,9603
num_zero_p(448,9886
num_nonzero_p(470,10394
num_to_int(487,10686
rb_float_new(502,11007
flo_to_s(522,11448
flo_coerce(555,12230
flo_uminus(568,12393
flo_plus(582,12616
flo_minus(605,13113
flo_mul(628,13608
flo_div(651,14108
flo_quo(671,14503
flodivmod(677,14583
flo_mod(716,15258
dbl2ival(738,15632
flo_divmod(761,15997
flo_pow(794,16588
num_eql(821,17242
num_cmp(837,17499
num_equal(844,17595
flo_eq(863,17994
flo_hash(894,18491
rb_dbl_cmp(905,18642
flo_cmp(924,19099
flo_gt(966,19912
flo_ge(1001,20490
flo_lt(1035,21062
flo_le(1070,21637
flo_eql(1108,22363
flo_to_f(1128,22701
flo_abs(1145,22923
flo_zero_p(1160,23141
flo_is_nan_p(1182,23528
flo_is_infinite_p(1202,23938
flo_is_finite_p(1224,24332
flo_floor(1252,24796
flo_ceil(1278,25237
flo_round(1303,25738
flo_truncate(1349,26609
num_floor(1377,27170
num_ceil(1399,27635
num_round(1415,28093
num_truncate(1430,28433
ruby_float_step(1437,28507
num_step(1492,30252
rb_num2long(1554,31321
rb_num2ulong(1588,32032
check_int(1598,32205
check_uint(1615,32479
rb_num2int(1632,32926
rb_fix2int(1641,33028
rb_num2uint(1650,33167
rb_fix2uint(1659,33327
rb_num2int(1673,33548
rb_fix2int(1679,33609
rb_num2fix(1686,33674
rb_num2ll(1701,33929
rb_num2ull(1743,34916
int_to_i(1776,35577
int_int_p(1789,35722
int_odd_p(1802,35899
int_even_p(1818,36161
fix_succ(1838,36508
int_succ(1856,36802
int_pred(1876,37140
int_chr(1898,37588
int_ord(1947,38620
fix_uminus(1980,39599
rb_fix2str(1986,39669
fix_to_s(2030,40626
fix_plus(2055,41055
fix_minus(2088,41649
#define SQRT_LONG_MAX 2112,42052
#define FIT_SQRT_LONG(2114,42154
fix_mul(2126,42451
fixdivmod(2172,43356
fix_fdiv(2211,44048
fix_divide(2227,44429
fix_div(2268,45250
fix_idiv(2281,45448
fix_mod(2296,45753
fix_divmod(2327,46303
int_pow(2356,46897
fix_pow(2404,47732
fix_equal(2468,49123
fix_cmp(2492,49693
fix_gt(2518,50286
fix_ge(2543,50871
fix_lt(2568,51455
fix_le(2593,52037
fix_rev(2617,52567
bit_coerce(2626,52677
fix_and(2645,52972
fix_or(2664,53237
fix_xor(2683,53510
rb_fix_lshift(2705,53925
fix_lshift(2719,54212
rb_fix_rshift(2737,54619
fix_rshift(2752,54912
fix_aref(2779,55463
fix_to_f(2814,56073
fix_abs(2835,56350
fix_size(2859,56714
int_upto(2879,57058
int_downto(2918,57824
int_dotimes(2958,58523
int_round(2983,58909
fix_zero_p(3028,59859
fix_odd_p(3044,60089
fix_even_p(3060,60309
Init_Numeric(3069,60400
#undef rb_intern3071,60421
#define rb_intern(3072,60438

object.c,3490
VALUE rb_cBasicObject;23,569
VALUE rb_mKernel;24,592
VALUE rb_cObject;25,610
VALUE rb_cModule;26,628
VALUE rb_cClass;27,646
VALUE rb_cData;28,663
VALUE rb_cNilClass;30,680
VALUE rb_cTrueClass;31,700
VALUE rb_cFalseClass;32,721
static ID id_peq,34,744
static ID id_peq, id_eq,34,744
static ID id_peq, id_eq, id_eql,34,744
static ID id_peq, id_eq, id_eql, id_match,34,744
static ID id_peq, id_eq, id_eql, id_match, id_inspect,34,744
static ID id_peq, id_eq, id_eql, id_match, id_inspect, id_init_copy,34,744
static ID id_peq, id_eq, id_eql, id_match, id_inspect, id_init_copy, id_patern_match;34,744
rb_pmatch(45,1118
rb_patern_match(51,1213
rb_equal(61,1412
rb_eql(71,1611
rb_obj_equal(106,2931
rb_obj_not(120,3111
rb_obj_not_equal(133,3317
rb_class_real(140,3465
rb_obj_class(165,4074
init_copy(171,4156
rb_obj_clone(241,6637
rb_obj_dup(276,7912
rb_obj_init_copy(291,8173
rb_any_to_s(312,8775
rb_inspect(324,8968
inspect_i(330,9070
inspect_obj(356,9669
rb_obj_inspect(385,10311
rb_obj_is_instance_of(422,11141
rb_obj_is_kind_of(465,12153
rb_obj_tap(504,13091
rb_obj_dummy(645,15833
rb_obj_tainted(658,16003
rb_obj_taint(675,16355
rb_obj_untaint(696,16631
rb_obj_untrusted(716,16948
rb_obj_untrust(731,17137
rb_obj_trust(752,17426
rb_obj_infect(765,17619
static st_table *immediate_frozen_tbl immediate_frozen_tbl770,17690
rb_obj_freeze(792,18211
rb_obj_frozen_p(821,18831
nil_to_i(849,19277
nil_to_f(864,19450
nil_to_s(877,19602
nil_to_a(894,19825
nil_inspect(907,19980
true_to_s(930,20542
true_and(945,20814
true_or(967,21244
true_xor(983,21507
false_to_s(1007,21990
false_and(1023,22327
false_or(1039,22631
false_xor(1058,22983
rb_true(1071,23210
rb_false(1086,23442
rb_obj_match(1102,23710
rb_obj_not_match(1116,23943
rb_mod_to_s(1161,25313
rb_mod_freeze(1191,25855
rb_mod_eqq(1208,26267
rb_class_inherited_p(1226,26687
rb_mod_lt(1264,27554
rb_mod_ge(1284,28022
rb_mod_gt(1309,28573
rb_mod_cmp(1327,29074
rb_module_s_alloc(1349,29430
rb_class_s_alloc(1358,29561
rb_mod_initialize(1387,30213
rb_class_initialize(1408,30719
rb_obj_alloc(1453,31718
rb_class_allocate_instance(1471,32210
rb_class_new_instance(1491,32699
rb_class_superclass(1521,33360
rb_mod_attr_reader(1549,34003
rb_mod_attr(1560,34191
rb_mod_attr_writer(1579,34687
rb_mod_attr_accessor(1605,35371
rb_mod_const_get(1628,35886
rb_mod_const_set(1660,36698
rb_mod_const_defined(1684,37323
rb_obj_methods(1723,38324
rb_obj_protected_methods(1754,38962
rb_obj_private_methods(1775,39531
rb_obj_public_methods(1796,40092
rb_obj_ivar_get(1828,41032
rb_obj_ivar_set(1859,41957
rb_obj_ivar_defined(1888,42705
rb_mod_cvar_get(1913,43337
rb_mod_cvar_set(1941,43942
rb_mod_cvar_defined(1967,44544
static struct conv_method_tbl 1977,44775
} conv_method_names[conv_method_names1980,44842
convert_type(1994,45067
rb_convert_type(2024,45742
rb_check_convert_type(2039,46144
rb_to_integer(2057,46642
rb_check_to_integer(2072,47030
rb_to_int(2085,47275
rb_Integer(2091,47348
rb_f_integer(2142,48601
rb_cstr_to_dbl(2148,48676
#define OutOfRange(2155,48812
rb_str_to_dbl(2219,50127
rb_Float(2243,50594
rb_f_float(2280,51391
rb_to_float(2286,51461
rb_num2dbl(2300,51814
rb_str2cstr(2322,52190
rb_String(2333,52457
rb_f_string(2352,52836
rb_Array(2358,52908
rb_f_array(2382,53395
boot_defclass(2388,53472
boot_defmetametaclass(2401,53783
Init_Object(2486,56881
#undef rb_intern2490,56913
#define rb_intern(2491,56930

pack.c,4104
#define SIZE16 18,379
#define SIZE32 19,396
# define NATINT_PACK22,456
# define OFF16B(26,504
# define OFF32B(27,574
# define NATINT_LEN(28,643
#   define OFF16(30,725
#   define OFF32(31,755
# define NATINT_HTOVS(33,793
# define NATINT_HTOVL(34,846
# define NATINT_HTONS(35,899
# define NATINT_HTONL(36,952
# define NATINT_LEN(38,1011
# define NATINT_HTOVS(39,1054
# define NATINT_HTOVL(40,1088
# define NATINT_HTONS(41,1122
# define NATINT_HTONL(42,1156
# define OFF16(46,1212
# define OFF32(47,1241
# define OFF16B(50,1292
# define OFF32B(51,1322
#define define_swapx(54,1360
#define swap16(77,1846
#define swaps(80,1929
#define swaps(83,1984
#define swap32(93,2158
#define swapl(99,2303
#define swapl(102,2357
define_swapx(swapl88,2106
#define swapf(117,2795
#define FLOAT_SWAPPER	118,2821
#define swapf(121,2925
#define FLOAT_SWAPPER	122,2951
#define swapd(133,3315
#define DOUBLE_SWAPPER	134,3341
swapd(155,3856
define_swapx(170,4227
#undef define_swapx178,4446
#undef ntohs182,4502
#undef ntohl183,4515
#undef htons184,4528
#undef htonl185,4541
#define ntohs(200,4765
#define ntohl(201,4806
#define ntohf(202,4847
#define ntohd(203,4888
#define htons(204,4929
#define htonl(205,4970
#define htonf(206,5011
#define htond(207,5052
#define htovs(208,5093
#define htovl(209,5134
#define htovf(210,5175
#define htovd(211,5216
#define vtohs(212,5257
#define vtohl(213,5298
#define vtohf(214,5339
#define vtohd(215,5380
#define htov16(217,5441
#define htov32(218,5484
#define hton16(219,5527
#define hton32(220,5570
#define ntohs(225,5664
#define ntohl(226,5685
#define htons(227,5706
#define htonl(228,5727
#define ntohf(230,5755
#define ntohd(231,5776
#define htonf(232,5797
#define htond(233,5818
#define htovs(234,5839
#define htovl(235,5865
#define htovf(236,5891
#define htovd(237,5917
#define vtohs(238,5943
#define vtohl(239,5969
#define vtohf(240,5995
#define vtohd(241,6021
#define htov16(243,6067
#define htov32(244,6095
#define hton16(245,6123
#define hton32(246,6145
#undef ntohs250,6214
#undef ntohl251,6227
#undef htons252,6240
#undef htonl253,6253
#define ntohs(255,6273
#define ntohl(256,6299
#define htons(257,6325
#define htonl(258,6351
#define ntohf(259,6377
#define ntohd(260,6403
#define htonf(261,6429
#define htond(262,6455
#define htovs(263,6481
#define htovl(264,6502
#define htovf(265,6523
#define htovd(266,6544
#define vtohs(267,6565
#define vtohl(268,6586
#define vtohf(269,6607
#define vtohd(270,6628
#define htov16(272,6669
#define htov32(273,6691
#define hton16(274,6713
#define hton32(275,6741
#define FLOAT_CONVWITH(281,6813
#define HTONF(282,6856
#define HTOVF(286,6984
#define NTOHF(290,7112
#define VTOHF(294,7240
#define FLOAT_CONVWITH(299,7374
#define HTONF(300,7400
#define HTOVF(301,7428
#define NTOHF(302,7456
#define VTOHF(303,7484
#define DOUBLE_CONVWITH(307,7542
#define HTOND(308,7587
#define HTOVD(312,7718
#define NTOHD(316,7849
#define VTOHD(320,7980
#define DOUBLE_CONVWITH(325,8117
#define HTOND(326,8144
#define HTOVD(327,8172
#define NTOHD(328,8200
#define VTOHD(329,8228
num2i32(335,8328
# define EXTEND32(348,8654
# define EXTEND32(351,8713
# define EXTEND16(354,8835
# define EXTEND16(356,8862
# define QUAD_SIZE 360,8985
# define QUAD_SIZE 362,9028
static const char toofew[toofew364,9056
pack_pack(438,12293
#define TOO_FEW 460,12844
#define THISFROM 461,12896
#define NEXTFROM 462,12958
static const char uu_table[uu_table1039,24920
static const char b64_table[b64_table1041,25021
encodes(1045,25134
static const char hex_table[hex_table1090,26386
qpencode(1093,26451
hex2num(1146,27540
#define PACK_LENGTH_ADJUST_SIZE(1163,27935
#define PACK_LENGTH_ADJUST(1174,28172
#define PACK_LENGTH_ADJUST(1179,28316
#define PACK_ITEM_ADJUST(1183,28406
infected_str_new(1186,28484
pack_unpack(1335,36675
#define UNPACK_PUSH(1348,36973
#define BYTEWIDTH 2068,52331
rb_uv_to_utf8(2071,52356
static const unsigned long utf8_limits[utf8_limits2115,53344
utf8_to_uv(2126,53572
Init_pack(2176,54675

parse.h,6935
# define YYTOKENTYPE38,1653
   enum yytokentype 41,1777
     keyword_class 42,1799
     keyword_module 43,1825
     keyword_def 44,1852
     keyword_undef 45,1876
     keyword_begin 46,1902
     keyword_rescue 47,1928
     keyword_ensure 48,1955
     keyword_end 49,1982
     keyword_if 50,2006
     keyword_unless 51,2029
     keyword_then 52,2056
     keyword_elsif 53,2081
     keyword_else 54,2107
     keyword_case 55,2132
     keyword_patern 56,2157
     keyword_when 57,2184
     keyword_while 58,2209
     keyword_until 59,2235
     keyword_for 60,2261
     keyword_break 61,2285
     keyword_next 62,2311
     keyword_redo 63,2336
     keyword_retry 64,2361
     keyword_in 65,2387
     keyword_do 66,2410
     keyword_do_cond 67,2433
     keyword_do_block 68,2461
     keyword_do_LAMBDA 69,2490
     keyword_return 70,2520
     keyword_yield 71,2547
     keyword_super 72,2573
     keyword_self 73,2599
     keyword_nil 74,2624
     keyword_true 75,2648
     keyword_false 76,2673
     keyword_and 77,2699
     keyword_or 78,2723
     keyword_not 79,2746
     modifier_if 80,2770
     modifier_unless 81,2794
     modifier_while 82,2822
     modifier_until 83,2849
     modifier_rescue 84,2876
     keyword_alias 85,2904
     keyword_defined 86,2930
     keyword_BEGIN 87,2958
     keyword_END 88,2984
     keyword__LINE__ 89,3008
     keyword__FILE__ 90,3036
     keyword__ENCODING__ 91,3064
     tIDENTIFIER 92,3096
     tFID 93,3120
     tGVAR 94,3137
     tIVAR 95,3155
     tCONSTANT 96,3173
     tCVAR 97,3195
     tLABEL 98,3213
     tINTEGER 99,3232
     tFLOAT 100,3253
     tSTRING_CONTENT 101,3272
     tCHAR 102,3300
     tNTH_REF 103,3318
     tBACK_REF 104,3339
     tREGEXP_END 105,3361
     tUPLUS 106,3385
     tUMINUS 107,3404
     tPOW 108,3424
     tCMP 109,3441
     tEQ 110,3458
     tEQQ 111,3474
     tNEQ 112,3491
     tGEQ 113,3508
     tLEQ 114,3525
     tANDOP 115,3542
     tOROP 116,3561
     tMATCH 117,3579
     tNMATCH 118,3598
     tDOT2 119,3618
     tDOT3 120,3636
     tAREF 121,3654
     tASET 122,3672
     tLSHFT 123,3690
     tRSHFT 124,3709
     tCOLON2 125,3728
     tCOLON3 126,3748
     tOP_ASGN 127,3768
     tASSOC 128,3789
     tLPAREN 129,3808
     tLPAREN_ARG 130,3828
     tRPAREN 131,3852
     tLBRACK 132,3872
     tLBRACE 133,3892
     tLBRACE_ARG 134,3912
     tSTAR 135,3936
     tAMPER 136,3954
     tLAMBDA 137,3973
     tSYMBEG 138,3993
     tSTRING_BEG 139,4013
     tXSTRING_BEG 140,4037
     tREGEXP_BEG 141,4062
     tWORDS_BEG 142,4086
     tQWORDS_BEG 143,4109
     tSTRING_DBEG 144,4133
     tSTRING_DVAR 145,4158
     tSTRING_END 146,4183
     tLAMBEG 147,4207
     tLOWEST 148,4227
     tUMINUS_NUM 149,4247
     idNULL 150,4271
     idRespond_to 151,4290
     idIFUNC 152,4315
     idCFUNC 153,4335
     idThrowState 154,4355
     id_core_set_method_alias 155,4380
     id_core_set_variable_alias 156,4417
     id_core_undef_method 157,4456
     id_core_define_method 158,4489
     id_core_define_singleton_method 159,4523
     id_core_set_postexe 160,4567
     tINFIX_OP 161,4599
     tLAST_TOKEN 162,4621
#define keyword_class 166,4672
#define keyword_module 167,4698
#define keyword_def 168,4725
#define keyword_undef 169,4749
#define keyword_begin 170,4775
#define keyword_rescue 171,4801
#define keyword_ensure 172,4828
#define keyword_end 173,4855
#define keyword_if 174,4879
#define keyword_unless 175,4902
#define keyword_then 176,4929
#define keyword_elsif 177,4954
#define keyword_else 178,4980
#define keyword_case 179,5005
#define keyword_patern 180,5030
#define keyword_when 181,5057
#define keyword_while 182,5082
#define keyword_until 183,5108
#define keyword_for 184,5134
#define keyword_break 185,5158
#define keyword_next 186,5184
#define keyword_redo 187,5209
#define keyword_retry 188,5234
#define keyword_in 189,5260
#define keyword_do 190,5283
#define keyword_do_cond 191,5306
#define keyword_do_block 192,5334
#define keyword_do_LAMBDA 193,5363
#define keyword_return 194,5393
#define keyword_yield 195,5420
#define keyword_super 196,5446
#define keyword_self 197,5472
#define keyword_nil 198,5497
#define keyword_true 199,5521
#define keyword_false 200,5546
#define keyword_and 201,5572
#define keyword_or 202,5596
#define keyword_not 203,5619
#define modifier_if 204,5643
#define modifier_unless 205,5667
#define modifier_while 206,5695
#define modifier_until 207,5722
#define modifier_rescue 208,5749
#define keyword_alias 209,5777
#define keyword_defined 210,5803
#define keyword_BEGIN 211,5831
#define keyword_END 212,5857
#define keyword__LINE__ 213,5881
#define keyword__FILE__ 214,5909
#define keyword__ENCODING__ 215,5937
#define tIDENTIFIER 216,5969
#define tFID 217,5993
#define tGVAR 218,6010
#define tIVAR 219,6028
#define tCONSTANT 220,6046
#define tCVAR 221,6068
#define tLABEL 222,6086
#define tINTEGER 223,6105
#define tFLOAT 224,6126
#define tSTRING_CONTENT 225,6145
#define tCHAR 226,6173
#define tNTH_REF 227,6191
#define tBACK_REF 228,6212
#define tREGEXP_END 229,6234
#define tUPLUS 230,6258
#define tUMINUS 231,6277
#define tPOW 232,6297
#define tCMP 233,6314
#define tEQ 234,6331
#define tEQQ 235,6347
#define tNEQ 236,6364
#define tGEQ 237,6381
#define tLEQ 238,6398
#define tANDOP 239,6415
#define tOROP 240,6434
#define tMATCH 241,6452
#define tNMATCH 242,6471
#define tDOT2 243,6491
#define tDOT3 244,6509
#define tAREF 245,6527
#define tASET 246,6545
#define tLSHFT 247,6563
#define tRSHFT 248,6582
#define tCOLON2 249,6601
#define tCOLON3 250,6621
#define tOP_ASGN 251,6641
#define tASSOC 252,6662
#define tLPAREN 253,6681
#define tLPAREN_ARG 254,6701
#define tRPAREN 255,6725
#define tLBRACK 256,6745
#define tLBRACE 257,6765
#define tLBRACE_ARG 258,6785
#define tSTAR 259,6809
#define tAMPER 260,6827
#define tLAMBDA 261,6846
#define tSYMBEG 262,6866
#define tSTRING_BEG 263,6886
#define tXSTRING_BEG 264,6910
#define tREGEXP_BEG 265,6935
#define tWORDS_BEG 266,6959
#define tQWORDS_BEG 267,6982
#define tSTRING_DBEG 268,7006
#define tSTRING_DVAR 269,7031
#define tSTRING_END 270,7056
#define tLAMBEG 271,7080
#define tLOWEST 272,7100
#define tUMINUS_NUM 273,7120
#define idNULL 274,7144
#define idRespond_to 275,7163
#define idIFUNC 276,7188
#define idCFUNC 277,7208
#define idThrowState 278,7228
#define id_core_set_method_alias 279,7253
#define id_core_set_variable_alias 280,7290
#define id_core_undef_method 281,7329
#define id_core_define_method 282,7362
#define id_core_define_singleton_method 283,7396
#define id_core_set_postexe 284,7440
#define tINFIX_OP 285,7472
#define tLAST_TOKEN 286,7494
typedef union YYSTYPE292,7577
	YYSTYPE;300,7686
# define yystype 301,7696
# define YYSTYPE_IS_DECLARED 302,7758
# define YYSTYPE_IS_TRIVIAL 303,7789

prelude.c,347
static const char prelude_name0[prelude_name04,45
static const char prelude_code0[prelude_code05,103
static const char prelude_name1[prelude_name142,899
static const char prelude_code1[prelude_code143,957
static const char prelude_name2[prelude_name251,1127
static const char prelude_code2[prelude_code252,1189
Init_prelude(412,12631

proc.c,1982
struct METHOD 15,319
VALUE rb_cUnboundMethod;23,487
VALUE rb_cMethod;24,512
VALUE rb_cBinding;25,530
VALUE rb_cProc;26,549
proc_free(35,698
proc_mark(45,833
rb_proc_alloc(63,1264
rb_obj_is_proc(73,1461
proc_dup(85,1645
proc_clone(102,2001
proc_lambda_p(212,4950
binding_free(223,5109
binding_mark(235,5290
binding_alloc(247,5489
binding_dup(256,5672
binding_clone(267,5899
rb_binding_new(275,6026
rb_f_binding(308,6903
bind_eval(330,7425
proc_new(340,7678
rb_proc_s_new(411,9281
rb_block_proc(427,9548
rb_block_lambda(433,9618
rb_f_lambda(439,9689
proc_lambda(454,10019
proc_call(504,11650
check_argc(528,12219
#define check_argc(537,12394
rb_proc_call(541,12440
rb_proc_call_with_block(550,12664
proc_arity(588,13867
rb_proc_arity(615,14428
get_proc_iseq(621,14516
iseq_location(634,14726
rb_proc_location(658,15200
proc_eq(672,15493
proc_hash(703,16177
proc_to_s(723,16569
proc_to_proc(766,17487
bm_mark(772,17546
rb_method_body(781,17710
mnew(798,18027
method_eq(876,19948
method_hash(904,20547
method_unbind(928,21080
method_receiver(955,21641
method_name(971,21875
method_owner(987,22142
rb_obj_method(1024,23012
rb_obj_public_method(1030,23131
rb_mod_instance_method(1068,24095
rb_mod_public_instance_method(1074,24230
rb_mod_define_method(1117,25429
rb_obj_define_method(1181,27017
method_clone(1194,27221
rb_method_call(1221,27792
umethod_bind(1348,31213
rb_node_arity(1373,31865
method_arity_m(1438,33630
method_arity(1445,33732
rb_mod_method_arity(1454,33882
rb_obj_method_arity(1461,34003
get_method_iseq(1467,34116
rb_method_location(1494,34695
method_inspect(1510,34998
mproc(1557,36146
mlambda(1563,36235
bmcall(1569,36328
rb_proc_new(1588,36666
method_proc(1604,36977
rb_obj_is_method(1624,37343
localjump_xvalue(1639,37632
localjump_reason(1653,37883
proc_binding(1674,38342
make_curry_proc(1694,38798
curry(1711,39199
proc_curry(1777,41624
Init_Proc(1820,42705
Init_Binding(1941,48092

process.c,6318
#define EXIT_SUCCESS 36,757
#define EXIT_FAILURE 39,808
# define MAXPATHLEN 54,1068
#undef HAVE_GETPGRP59,1137
static VALUE rb_cProcessTms;73,1329
#define WIFEXITED(77,1384
#define WIFSIGNALED(80,1455
#define WIFSTOPPED(83,1549
#define WEXITSTATUS(86,1623
#define WTERMSIG(89,1691
#define WSTOPSIG 92,1752
#define __MacOS_X__ 96,1892
#define HAVE_44BSD_SETUID 100,2015
#define HAVE_44BSD_SETGID 101,2043
#undef HAVE_SETRUID105,2097
#undef HAVE_SETRGID106,2117
#define setreuid 110,2168
#define setregid 113,2229
#define OBSOLETE_SETREUID 118,2379
#define OBSOLETE_SETREGID 121,2470
# define RLIM2NUM(126,2545
# define NUM2RLIM(127,2578
# define RLIM2NUM(129,2646
# define NUM2RLIM(130,2680
# define RLIM2NUM(132,2754
# define NUM2RLIM(133,2786
#define preserving_errno(136,2826
get_pid(151,3114
get_ppid(175,3546
static VALUE rb_cProcessStatus;212,4910
rb_last_status_get(215,4949
rb_last_status_set(221,5022
rb_last_status_clear(230,5288
pst_to_i(249,5706
#define PST2INT(254,5766
pst_pid(268,6040
pst_message(274,6121
pst_to_s(316,7045
pst_inspect(339,7366
pst_equal(368,7930
pst_bitand(388,8315
pst_rshift(409,8698
pst_wifstopped(427,9053
pst_wstopsig(447,9363
pst_wifsignaled(466,9657
pst_wtermsig(487,10004
pst_wifexited(507,10349
pst_wexitstatus(538,10975
pst_success_p(557,11320
pst_wcoredump(576,11673
#define NO_WAITPID591,11900
static st_table *pid_tbl;pid_tbl592,11919
struct wait_data 594,11946
wait_each(600,12014
waitall_each(610,12205
struct waitpid_arg 617,12397
rb_waitpid_blocking(625,12488
rb_waitpid(644,12861
proc_wait(771,16808
proc_wait2(817,17915
proc_waitall(846,18675
id_pid(888,19383
detach_process_pid(896,19468
detach_process_watcher(902,19570
rb_detach_process(914,19798
proc_detach(969,21591
static int forked_child 983,21862
#define before_exec(985,21892
#define after_exec(987,22001
#define before_fork(989,22133
#define after_fork(990,22169
security(995,22270
proc_exec_v(1005,22443
#define COMMAND 1019,22700
rb_proc_exec_n(1053,23467
rb_proc_exec(1070,23755
#define HAVE_SPAWNV 1135,25156
#define proc_spawn_v(1140,25254
proc_spawn_v(1143,25345
proc_spawn_n(1164,25749
#define proc_spawn(1180,26076
proc_spawn(1183,26153
hide_obj(1214,26925
    EXEC_OPTION_PGROUP,1221,27001
    EXEC_OPTION_RLIMIT,1222,27025
    EXEC_OPTION_UNSETENV_OTHERS,1223,27049
    EXEC_OPTION_ENV,1224,27082
    EXEC_OPTION_CHDIR,1225,27103
    EXEC_OPTION_UMASK,1226,27126
    EXEC_OPTION_DUP2,1227,27149
    EXEC_OPTION_CLOSE,1228,27171
    EXEC_OPTION_OPEN,1229,27194
    EXEC_OPTION_CLOSE_OTHERS1230,27216
check_exec_redirect_fd(1234,27262
check_exec_redirect(1258,27834
rb_exec_arg_addopt(1347,30393
check_exec_options_i(1471,34582
check_exec_fds(1480,34833
rb_check_exec_options(1514,35876
check_exec_env_i(1522,36072
rb_check_exec_env(1542,36527
rb_check_argv(1553,36709
rb_exec_getargs(1586,37427
rb_exec_fillarg(1618,38244
rb_exec_arg_init(1639,38759
rb_exec_arg_fixup(1649,39052
rb_f_exec(1686,40438
ttyprintf(1706,40899
redirect_dup(1723,41167
redirect_dup2(1732,41304
redirect_close(1741,41462
redirect_open(1750,41585
#define redirect_dup(1759,41802
#define redirect_dup2(1760,41841
#define redirect_close(1761,41896
#define redirect_open(1762,41933
save_redirect_fd(1766,42025
save_env_i(1792,42803
save_env(1799,42944
intcmp(1814,43430
run_exec_dup2(1820,43515
    struct fd_pair 1825,43604
run_exec_close(1937,46738
run_exec_open(1952,47027
run_exec_pgroup(1990,48153
run_exec_rlimit(2013,48824
rb_run_exec_options(2044,49839
rb_exec(2151,52603
rb_exec_atfork(2178,53093
#define proc_syswait 2188,53257
proc_syswait(2191,53326
move_fds_to_avoid_crash(2200,53423
pipe_nocrash(2222,53960
rb_fork(2264,55240
#define prefork(2272,55392
rb_f_fork(2377,57888
rb_f_exit_bang(2423,58633
rb_exit(2451,59110
rb_f_exit(2504,60386
rb_f_abort(2547,61173
# define signal(2572,61683
rb_syswait(2576,61735
rb_spawn_internal(2618,62459
rb_spawn(2668,63750
rb_f_system(2697,64517
# define SIGCHLD 2702,64612
rb_f_spawn(2873,70813
rb_f_sleep(2904,71668
proc_getpgrp(2937,72247
proc_setpgrp(2969,72832
proc_getpgid(2998,73553
proc_setpgid(3022,74008
proc_setsid(3051,74560
proc_getpriority(3105,76016
proc_setpriority(3137,76752
rlimit_resource_name2int(3157,77133
rlimit_type_by_hname(3235,78806
rlimit_type_by_lname(3241,78907
rlimit_resource_type(3247,79008
rlimit_resource_value(3281,79654
proc_getrlimit(3340,81214
proc_setrlimit(3403,83389
static int under_uid_switch 3427,83958
check_uid_switch(3429,84003
static int under_gid_switch 3437,84191
check_gid_switch(3439,84236
p_sys_setuid(3469,85037
p_sys_setruid(3492,85415
p_sys_seteuid(3514,85801
p_sys_setreuid(3538,86312
p_sys_setresuid(3562,86874
proc_getuid(3586,87362
proc_setuid(3602,87610
static rb_uid_t SAVED_USER_ID 3641,88478
setreuid(3645,88542
p_uid_change_privilege(3672,89227
p_sys_setgid(3821,93532
p_sys_setrgid(3843,93910
p_sys_setegid(3866,94298
p_sys_setregid(3890,94824
p_sys_setresgid(3913,95406
p_sys_issetugid(3938,96048
proc_getgid(3966,96508
proc_setgid(3981,96709
static size_t maxgroups 4010,97270
proc_getgroups(4025,97535
proc_setgroups(4065,98306
proc_initgroups(4133,99911
proc_getmaxgroups(4158,100376
proc_setmaxgroups(4173,100612
proc_daemon(4199,101298
static int SAVED_GROUP_ID 4264,102623
setregid(4268,102683
p_gid_change_privilege(4295,103370
proc_geteuid(4446,107834
proc_seteuid(4462,108074
rb_seteuid_core(4489,108637
p_uid_grant_privilege(4538,109933
proc_getegid(4558,110309
proc_setegid(4575,110563
rb_setegid_core(4602,111126
p_gid_grant_privilege(4651,112445
p_uid_exchangeable(4668,112754
p_uid_exchange(4693,113308
p_gid_exchangeable(4725,113973
p_gid_exchange(4750,114529
p_uid_have_saved_id(4783,115229
p_uid_sw_ensure(4795,115488
p_uid_switch(4817,116034
p_uid_sw_ensure(4849,116691
p_uid_switch(4856,116794
p_gid_have_saved_id(4892,117410
p_gid_sw_ensure(4903,117668
p_gid_switch(4925,118217
p_gid_sw_ensure(4957,118872
p_gid_switch(4964,118975
rb_proc_times(5001,119637
#   define HZ 5010,119826
#   define HZ 5012,119855
VALUE rb_mProcess;5031,120256
VALUE rb_mProcUID;5032,120275
VALUE rb_mProcGID;5033,120294
VALUE rb_mProcID_Syscall;5034,120313
Init_process(5043,120451

random.c,1052
#define N 63,2577
#define M 64,2591
#define MATRIX_A 65,2605
#define UMASK 66,2661
#define LMASK 67,2720
#define MIXBITS(68,2778
#define TWIST(69,2833
struct MT 71,2904
#define genrand_initialized(77,3025
#define uninit_genrand(78,3075
init_genrand(82,3171
init_by_array(103,3952
next_state(129,4881
genrand_int32(152,5421
genrand_real(170,5761
#undef N177,5979
#undef M178,5988
#define DEFAULT_SEED_CNT 194,6247
struct RandSeed 196,6275
struct Random 201,6359
static struct Random default_mt;206,6423
rb_genrand_int32(209,6471
rb_genrand_real(215,6548
rand_init(221,6629
#define DEFAULT_SEED_LEN 275,7998
fill_random_seed(278,8070
make_seed_value(314,8803
random_seed(333,9308
rb_f_srand(355,10043
make_mask(373,10373
limited_rand(387,10589
limited_big_rand(407,10997
# define BIG_GET32(417,11307
# define BIG_SET32(422,11465
# define BIG_GET32(429,11683
# define BIG_SET32(430,11734
rb_f_rand(476,13209
Init_RandomSeed(533,14752
Init_RandomSeed2(540,14916
rb_reset_random_seed(547,15077
Init_Random(554,15190

range.c,1194
VALUE rb_cRange;15,319
static ID id_cmp,16,336
static ID id_cmp, id_succ,16,336
static ID id_cmp, id_succ, id_beg,16,336
static ID id_cmp, id_succ, id_beg, id_end,16,336
static ID id_cmp, id_succ, id_beg, id_end, id_excl;16,336
#define RANGE_BEG(20,445
#define RANGE_END(21,490
#define RANGE_EXCL(22,535
#define EXCL(24,582
#define SET_EXCL(25,619
range_failed(28,702
range_check(35,820
range_init(41,914
rb_range_new(62,1316
range_initialize(80,1793
#define range_initialize_copy 93,2194
range_exclude_end_p(103,2411
range_eq(124,2926
r_lt(143,3295
r_le(155,3478
range_eql(186,4130
range_hash(214,4714
range_each_func(229,4967
step_i(253,5415
range_step(301,6513
each_i(381,8328
range_each(406,8846
range_begin(450,9695
range_end(468,9946
first_i(475,10017
range_first(497,10374
range_last(521,10847
range_min(543,11344
range_max(572,11937
rb_range_beg_len(598,12466
range_to_s(657,13640
inspect_range(672,13947
range_inspect(700,14537
range_eqq(726,15130
range_include(746,15642
range_cover(806,17171
range_dumper(826,17469
range_loader(841,17770
range_alloc(854,18156
Init_Range(914,20308
#undef rb_intern916,20327
#define rb_intern(917,20344

rational.c,4632
#define NDEBUG16,255
#define ZERO 19,291
#define ONE 20,315
#define TWO 21,338
VALUE rb_cRational;23,362
static ID id_abs,25,383
static ID id_abs, id_cmp,25,383
static ID id_abs, id_cmp, id_convert,25,383
static ID id_abs, id_cmp, id_convert, id_equal_p,25,383
static ID id_abs, id_cmp, id_convert, id_equal_p, id_expt,25,383
static ID id_abs, id_cmp, id_convert, id_equal_p, id_expt, id_floor,25,383
    id_hash,26,452
    id_hash, id_idiv,26,452
    id_hash, id_idiv, id_inspect,26,452
    id_hash, id_idiv, id_inspect, id_integer_p,26,452
    id_hash, id_idiv, id_inspect, id_integer_p, id_negate,26,452
    id_hash, id_idiv, id_inspect, id_integer_p, id_negate, id_to_f,26,452
    id_to_i,27,520
    id_to_i, id_to_s,27,520
    id_to_i, id_to_s, id_truncate;27,520
#define f_boolcast(29,556
#define binop(31,602
#define fun1(38,712
#define fun2(45,812
f_add(53,944
f_cmp(63,1139
f_div(77,1383
f_gt_p(85,1521
f_lt_p(93,1691
binop(100,1841
f_sub(127,2301
binop(134,2419
fun2(155,2742
#define f_positive_p(166,2910
f_zero_p(169,2974
#define f_nonzero_p(176,3103
f_one_p(179,3162
f_kind_of_p(187,3309
k_numeric_p(193,3400
k_integer_p(199,3486
k_float_p(205,3572
k_rational_p(211,3654
#define k_exact_p(216,3722
#define k_inexact_p(217,3759
#define f_gcd 220,3811
i_gcd(224,3863
f_gcd(245,4087
#undef f_gcd277,4597
f_gcd(280,4631
f_lcm(292,4829
#define get_dat1(299,4959
#define get_dat2(303,5046
nurat_s_new_internal(309,5203
nurat_s_alloc(321,5415
#define rb_raise_zerodiv(326,5498
nurat_s_new_bang(330,5591
f_rational_new_bang1(363,6179
f_rational_new_bang2(369,6295
#define CANON377,6489
static int canonicalization 381,6524
nurat_canonicalization(384,6563
nurat_int_check(391,6650
nurat_int_value(404,6890
nurat_s_canonicalize_internal(413,7031
nurat_s_canonicalize_internal_no_reduce(439,7504
nurat_s_new(459,7880
f_rational_new1(478,8242
f_rational_new2(485,8392
f_rational_new_no_reduce1(493,8579
f_rational_new_no_reduce2(500,8749
nurat_f_rational(508,8949
nurat_numerator(514,9082
nurat_denominator(521,9169
#define f_imul 528,9260
f_imul(532,9315
#undef f_imul552,9648
f_imul(555,9683
f_addsub(564,9844
nurat_add(613,10823
nurat_sub(641,11323
f_muldiv(669,11830
nurat_mul(708,12663
nurat_div(736,13163
nurat_fdiv(768,13770
nurat_expt(774,13863
nurat_cmp(819,14757
nurat_equal_p(856,15640
nurat_coerce(893,16372
nurat_idiv(915,17024
nurat_mod(921,17118
nurat_divmod(928,17259
nurat_quot(936,17428
nurat_rem(943,17532
nurat_quotrem(951,17682
nurat_abs(959,17856
nurat_true(968,17971
nurat_floor(975,18037
nurat_ceil(982,18138
nurat_truncate(989,18258
nurat_round(998,18450
#define f_size(1017,18821
#define f_rshift(1018,18875
i_ilog2(1021,18954
static long ml;1043,19225
nurat_to_f(1046,19255
nurat_to_r(1103,20197
nurat_hash(1109,20255
nurat_format(1116,20370
nurat_to_s(1129,20577
nurat_inspect(1135,20657
nurat_marshal_dump(1147,20842
nurat_marshal_load(1158,21016
rb_gcd(1174,21267
rb_lcm(1181,21377
rb_gcdlcm(1188,21487
rb_rational_raw(1195,21634
rb_rational_new(1201,21732
rb_Rational(1209,21906
#define id_numerator 1217,22033
#define f_numerator(1218,22077
#define id_denominator 1220,22132
#define f_denominator(1221,22180
#define id_to_r 1223,22239
#define f_to_r(1224,22273
numeric_numerator(1227,22331
numeric_denominator(1233,22417
integer_numerator(1239,22507
integer_denominator(1245,22572
float_numerator(1251,22645
float_denominator(1260,22802
nilclass_to_r(1269,22967
integer_to_r(1275,23052
float_decode_internal(1281,23129
float_decode(1295,23376
float_to_r(1305,23515
static VALUE rat_pat,1313,23653
static VALUE rat_pat, an_e_pat,1313,23653
static VALUE rat_pat, an_e_pat, a_dot_pat,1313,23653
static VALUE rat_pat, an_e_pat, a_dot_pat, underscores_pat,1313,23653
static VALUE rat_pat, an_e_pat, a_dot_pat, underscores_pat, an_underscore;1313,23653
#define WS 1315,23729
#define DIGITS 1316,23747
#define NUMERATOR 1317,23785
#define DENOMINATOR 1318,23859
#define PATTERN 1319,23886
make_patterns(1322,23977
#define id_match 1348,24832
#define f_match(1349,24868
#define id_aref 1351,24920
#define f_aref(1352,24952
#define id_post_match 1354,25002
#define f_post_match(1355,25048
#define id_split 1357,25105
#define f_split(1358,25141
string_to_r_internal(1363,25226
string_to_r_strict(1434,26591
#define id_gsub 1445,26885
#define f_gsub(1446,26919
string_to_r(1449,26987
#define id_to_r 1466,27322
#define f_to_r(1467,27356
nurat_s_convert(1470,27414
Init_Rational(1542,28758
#undef rb_intern1544,28780
#define rb_intern(1545,28797

re.c,3850
VALUE rb_eRegexpError;19,399
typedef char onig_errmsg_buffer[onig_errmsg_buffer21,423
#define errcpy(22,484
#define BEG(24,560
#define END(25,590
static const char casetable[casetable28,654
rb_memcicmp(79,3979
#undef rb_memcmp91,4219
rb_memcmp(94,4241
rb_memsearch_ss(100,4349
#  define VALUE_MAX 106,4568
#  define VALUE_MAX 108,4635
rb_memsearch_qs(136,5139
rb_memsearch_qs_utf8_hash(156,5639
rb_memsearch_qs_utf8(188,6128
rb_memsearch(210,6675
#define REG_LITERAL 240,7310
#define REG_ENCODING_NONE 241,7339
#define KCODE_FIXED 243,7375
#define ARG_REG_OPTION_MASK 245,7405
#define ARG_ENCODING_FIXED 247,7505
#define ARG_ENCODING_NONE 248,7538
char_to_option(251,7583
option_to_str(273,7870
rb_char_to_option_kcode(284,8130
rb_reg_check(310,8636
rb_reg_expr_str(318,8805
rb_reg_desc(381,10114
rb_reg_source(418,10848
rb_reg_inspect(441,11362
rb_reg_to_s(471,12437
rb_reg_raise(560,14520
rb_enc_reg_error_desc(568,14711
rb_enc_reg_raise(583,15120
rb_reg_error_desc(589,15296
rb_reg_raise_str(596,15478
rb_reg_casefold_p(614,15856
rb_reg_options_m(646,16852
reg_names_iter(653,16962
rb_reg_names(678,17526
reg_named_captures_iter(687,17702
rb_reg_named_captures(725,18672
make_regexp(734,18874
VALUE rb_cMatch;777,20031
match_alloc(780,20062
} pair_t;797,20397
pair_byte_cmp(800,20419
update_char_offset(806,20556
match_check(878,22479
match_init_copy(887,22625
match_regexp(930,23679
match_names(951,24170
match_size(970,24527
match_backref_number(977,24641
match_offset(1031,25888
match_begin(1067,26831
match_end(1102,27716
#define MATCH_BUSY 1118,28099
rb_match_busy(1121,28133
rb_reg_fixed_encoding_p(1156,29400
reg_enc_error(1170,29680
rb_reg_prepare_enc(1179,29923
rb_reg_prepare_re(1214,30881
rb_reg_adjust_startpos(1253,31831
rb_reg_search(1284,32493
rb_reg_nth_defined(1371,34393
rb_reg_nth_match(1389,34753
rb_reg_last_match(1415,35296
rb_reg_match_pre(1433,35642
rb_reg_match_post(1460,36257
rb_reg_match_last(1478,36652
last_match_getter(1495,36998
prematch_getter(1501,37088
postmatch_getter(1507,37175
last_paren_match_getter(1513,37264
match_array(1519,37360
match_to_a(1569,38686
match_captures(1588,39054
name_to_backref_number(1594,39132
match_aref(1637,40587
match_entry(1678,41510
match_values_at(1698,41966
match_to_s(1717,42359
match_string(1740,42838
struct backref_name_tag 1746,42944
match_inspect_name_iter(1752,43022
match_inspect(1786,43891
VALUE rb_cRegexp;1831,45096
read_escaped_byte(1834,45126
unescape_escaped_nonascii(1942,47773
check_unicode_range(1994,49109
append_utf8(2005,49364
unescape_unicode_list(2032,50056
unescape_unicode_bmp(2069,50843
unescape_nonascii(2092,51361
rb_reg_preprocess(2197,54664
rb_reg_check_preprocess(2227,55272
rb_reg_preprocess_dregexp(2250,55723
rb_reg_initialize(2299,56962
rb_reg_initialize_str(2358,58699
rb_reg_s_alloc(2379,59369
rb_reg_new_str(2392,59553
rb_reg_new_ary(2405,59795
rb_enc_reg_new(2411,59905
rb_reg_new(2424,60197
rb_reg_compile(2430,60326
static VALUE reg_cache;2444,60664
rb_reg_regcomp(2447,60695
rb_reg_hash(2466,61170
rb_reg_equal(2500,61932
reg_operand(2516,62528
reg_match_pos(2532,62817
rb_reg_match(2603,64694
rb_reg_eqq(2630,65245
rb_reg_match2(2659,65741
rb_reg_match_m(2707,66922
rb_reg_initialize_m(2762,68603
rb_reg_quote(2818,69950
rb_reg_s_quote(2930,72824
rb_reg_options(2936,72918
rb_check_regexp_type(2948,73226
rb_reg_s_try_convert(2971,73834
rb_reg_s_union(2977,73933
rb_reg_s_union_m(3108,78670
rb_reg_init_copy(3120,78940
rb_reg_regsub(3142,79498
#define ASCGET(3150,79770
kcode_getter(3261,82460
kcode_setter(3268,82568
ignorecase_getter(3274,82681
ignorecase_setter(3281,82792
match_getter(3287,82906
match_setter(3297,83058
rb_reg_s_last_match(3329,84069
re_warn(3344,84419
Init_Regexp(3360,84755

regcomp.c,6572
OnigCaseFoldType OnigDefaultCaseFoldFlag 32,1611
onig_get_default_case_fold_flag(35,1702
onig_set_default_case_fold_flag(41,1790
static unsigned char PadBuf[PadBuf49,1956
str_dup(53,2028
swap_node(68,2268
distance_add(93,2714
distance_multiply(104,3001
bitset_is_empty(115,3181
bitset_on_num(126,3344
onig_bbuf_init(139,3507
unset_addr_list_init(159,3793
unset_addr_list_end(172,4043
unset_addr_list_add(179,4156
add_opcode(201,4643
add_state_check_num(209,4773
add_rel_addr(219,4944
add_abs_addr(228,5085
add_length(237,5226
add_mem_num(246,5358
add_pointer(255,5491
add_option(264,5635
add_opcode_rel_addr(271,5750
add_bytes(282,5925
add_bitset(289,6029
add_opcode_option(296,6130
#define IS_NEED_STR_LEN_OP_EXACT(310,6416
select_str_opcode(315,6594
compile_tree_empty_check(360,7482
compile_call(392,8341
compile_tree_n_times(407,8659
add_compile_string_length(419,8840
add_compile_string(436,9238
compile_length_string_node(458,9702
compile_length_string_raw_node(497,10453
compile_string_node(506,10646
compile_string_raw_node(545,11354
add_multi_byte_cclass(554,11533
compile_length_cclass_node(577,12193
compile_cclass_node(607,12782
entry_repeat_range(650,13672
#define REPEAT_RANGE_ALLOC 652,13737
compile_range_repeat_node(681,14508
is_anychar_star_quantifier(717,15456
#define QUANTIFIER_EXPAND_LIMIT_SIZE 726,15626
#define CKN_ON 727,15668
compile_length_quantifier_node(732,15747
compile_quantifier_node(812,17589
compile_length_quantifier_node(966,21607
compile_quantifier_node(1031,23509
compile_length_option_node(1159,27606
compile_option_node(1179,28054
compile_length_enclose_node(1205,28672
compile_enclose_node(1271,30271
compile_length_anchor_node(1372,33161
compile_anchor_node(1405,33845
compile_length_tree(1489,36327
compile_tree(1582,38135
noname_disable_map(1751,41611
renumber_node_backref(1805,42753
renumber_by_map(1833,43282
numbered_ref_check(1863,43808
disable_noname_group_capture(1894,44372
unset_addr_list_fix(1936,45427
quantifiers_memory_node_info(1956,45890
get_min_match_length(2024,47103
get_max_match_length(2147,49593
#define GET_CHAR_LEN_VARLEN 2263,51986
#define GET_CHAR_LEN_TOP_ALT_VARLEN 2264,52027
get_char_length_tree1(2268,52115
get_char_length_tree(2391,54392
is_not_included(2398,54553
get_head_value_node(2573,57559
check_type_tree(2660,59053
#define RECURSION_EXIST 2710,60072
#define RECURSION_INFINITE 2711,60104
subexp_inf_recursive_check(2714,60148
subexp_inf_recursive_check_trav(2798,61961
subexp_recursive_check(2853,63081
subexp_recursive_check_trav(2909,64182
#define FOUND_CALLED_NODE 2911,64238
setup_subexp_call(2978,65613
divide_look_behind_alternatives(3091,68218
setup_look_behind(3121,68892
next_setup(3142,69430
update_string_node_case_fold(3190,70643
expand_case_fold_make_rem_string(3232,71508
expand_case_fold_string_alt(3254,71920
expand_case_fold_string(3366,74289
#define THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION 3368,74341
#define CEC_THRES_NUM_BIG_REPEAT 3504,77197
#define CEC_INFINITE_NUM 3505,77242
#define CEC_IN_INFINITE_REPEAT 3507,77288
#define CEC_IN_FINITE_REPEAT 3508,77329
#define CEC_CONT_BIG_REPEAT 3509,77370
setup_comb_exp_check(3512,77423
#define IN_ALT 3642,80245
#define IN_NOT 3643,80274
#define IN_REPEAT 3644,80303
#define IN_VAR_REPEAT 3645,80332
setup_tree(3656,80698
#define EXPAND_STRING_MAX_LENGTH 3764,83121
#define ALLOWED_TYPE_IN_LB 3855,85456
#define ALLOWED_ENCLOSE_IN_LB 3859,85643
#define ALLOWED_ENCLOSE_IN_LB_NOT 3860,85698
#define ALLOWED_ANCHOR_IN_LB 3862,85737
#define ALLOWED_ANCHOR_IN_LB_NOT 3864,85872
set_bm_skip(3903,86884
#define OPT_EXACT_MAXLEN 3928,87515
} MinMaxLen;3933,87649
} OptEnv;3941,87820
} OptAncInfo;3946,87887
} OptExactInfo;3956,88058
} OptMapInfo;3964,88224
} NodeOptInfo;3975,88456
map_position_value(3979,88484
distance_value(4003,89359
comp_distance_value(4032,90384
is_equal_mml(4049,90713
set_mml(4056,90829
clear_mml(4063,90942
copy_mml(4069,91012
add_mml(4076,91116
add_len_mml(4084,91271
alt_merge_mml(4092,91420
copy_opt_env(4099,91579
clear_opt_anc_info(4105,91650
copy_opt_anc_info(4112,91753
concat_opt_anc_info(4118,91837
is_left_anchor(4135,92230
is_set_opt_anc_info(4146,92452
add_opt_anc_info(4154,92611
remove_opt_anc_info(4163,92761
alt_merge_opt_anc_info(4172,92916
is_full_opt_exact_info(4179,93069
clear_opt_exact_info(4185,93175
copy_opt_exact_info(4196,93381
concat_opt_exact_info(4202,93471
concat_opt_exact_info_str(4232,94171
alt_merge_opt_exact_info(4249,94551
select_opt_exact_info(4285,95343
clear_opt_map_info(4316,96013
copy_opt_map_info(4344,97060
add_char_opt_map_info(4350,97144
add_char_amb_opt_map_info(4359,97323
select_opt_map_info(4381,97955
comp_opt_exact_or_map_info(4400,98345
#define COMP_EM_BASE 4402,98406
alt_merge_opt_map_info(4413,98647
set_bound_node_opt_info(4440,99216
clear_node_opt_info(4448,99396
copy_node_opt_info(4459,99647
concat_left_node_opt_info(4465,99734
alt_merge_node_opt_info(4524,101283
#define MAX_NODE_OPT_INFO_REF_COUNT 4536,101674
optimize_node_left(4539,101727
set_optimize_exact_info(4883,109756
set_optimize_map_info(4930,110915
set_sub_anchor(4947,111261
set_optimize_info_from_tree(4958,111523
clear_optimize_info(5013,112982
static void print_enc_string(5030,113343
print_distance_range(5063,113910
print_anchor(5079,114188
print_optimize_info(5128,115142
onig_free_body(5182,116552
onig_free(5197,117039
#define REGEX_TRANSFER(5205,117139
onig_transfer(5213,117316
#define REGEX_CHAIN_HEAD(5220,117435
onig_chain_link_add(5227,117567
onig_chain_reduce(5236,117718
onig_clone(5255,118056
onig_compile(5339,120236
#define COMPILE_INIT_SIZE 5342,120342
onig_recompile(5526,124839
static int onig_inited 5545,125297
onig_alloc_init(5548,125337
onig_new(5593,126649
onig_init(5614,127139
onig_end(5637,127448
onig_is_in_code_range(5661,127789
onig_is_code_in_cc_len(5682,128189
onig_is_code_in_cc(5705,128616
#define ARG_SPECIAL 5722,128907
#define ARG_NON 5723,128934
#define ARG_RELADDR 5724,128961
#define ARG_ABSADDR 5725,128988
#define ARG_LENGTH 5726,129015
#define ARG_MEMNUM 5727,129042
#define ARG_OPTION 5728,129069
#define ARG_STATE_CHECK 5729,129096
OnigOpInfoType OnigOpInfo[OnigOpInfo5731,129124
op2name(5825,134820
op2arg_type(5837,135004
Indent(5849,135206
p_string(5856,135305
p_len_string(5863,135416
onig_print_compiled_byte_code(5872,135583
print_compiled_byte_code_list(6116,141076
print_indent_tree(6140,141494
print_tree(6307,145911

regenc.c,2403
OnigEncoding OnigEncDefaultCharEncoding 32,1608
onigenc_init(35,1690
onigenc_get_default_encoding(41,1746
onigenc_set_default_encoding(47,1834
onigenc_mbclen_approximate(54,1945
onigenc_get_right_adjust_char_head(65,2301
onigenc_get_right_adjust_char_head_with_prev(75,2554
onigenc_get_prev_char_head(91,2951
onigenc_step_back(100,3178
onigenc_step(112,3474
onigenc_strlen(122,3686
onigenc_strlen_null(135,3898
onigenc_str_bytelen_null(161,4373
const UChar OnigEncAsciiToLowerCaseTable[OnigEncAsciiToLowerCaseTable185,4879
const UChar OnigEncAsciiToUpperCaseTable[OnigEncAsciiToUpperCaseTable221,7070
const unsigned short OnigEncAsciiCtypeTable[OnigEncAsciiCtypeTable257,9243
const UChar OnigEncISO_8859_1_ToLowerCaseTable[OnigEncISO_8859_1_ToLowerCaseTable292,11411
const UChar OnigEncISO_8859_1_ToUpperCaseTable[OnigEncISO_8859_1_ToUpperCaseTable328,13610
onigenc_set_default_caseconv_table(365,15801
onigenc_get_left_adjust_char_head(372,15921
const OnigPairCaseFoldCodes OnigAsciiLowerMap[OnigAsciiLowerMap377,16092
onigenc_ascii_apply_all_case_fold(407,16626
onigenc_ascii_get_case_fold_codes_by_str(430,17183
ss_apply_all_case_fold(451,17737
onigenc_apply_all_case_fold_with_map(460,17947
onigenc_get_case_fold_codes_by_str_with_map(488,18571
onigenc_not_support_get_ctype_code_range(570,20626
onigenc_is_mbc_newline_0x0a(578,20837
onigenc_ascii_mbc_case_fold(588,21039
onigenc_ascii_is_mbc_ambiguous(599,21332
onigenc_single_byte_mbc_enc_len(610,21560
onigenc_single_byte_mbc_to_code(617,21717
onigenc_single_byte_code_to_mbclen(624,21874
onigenc_single_byte_code_to_mbc(630,21997
onigenc_single_byte_left_adjust_char_head(639,22234
onigenc_always_true_is_allowed_reverse_match(647,22456
onigenc_always_false_is_allowed_reverse_match(654,22627
onigenc_ascii_is_code_ctype(661,22801
onigenc_mbn_mbc_to_code(671,23048
onigenc_mbn_mbc_case_fold(689,23370
onigenc_mbn_is_mbc_ambiguous(715,23916
onigenc_mb2_code_to_mbclen(731,24264
onigenc_mb4_code_to_mbclen(738,24411
onigenc_mb2_code_to_mbc(747,24655
onigenc_mb4_code_to_mbc(764,24989
onigenc_minimum_property_name_to_ctype(787,25504
onigenc_mb2_is_code_ctype(821,26714
onigenc_mb4_is_code_ctype(836,27039
onigenc_with_ascii_strncmp(851,27364
resize_property_list(871,27779
onigenc_property_list_add_property(893,28220
#define PROP_INIT_SIZE 897,28385
onigenc_property_list_init(921,28949

regenc.h,2293
#define ONIGURUMA_REGENC_H2,27
#undef ONIG_ESCAPE_UCHAR_COLLISION37,1770
} OnigPairCaseFoldCodes;45,1907
#define NULL 49,1947
#define TRUE 53,1995
#define FALSE 57,2035
#  define ARG_UNUSED 62,2102
#  define ARG_UNUSED64,2155
#define ONIG_IS_NULL(68,2191
#define ONIG_IS_NOT_NULL(69,2261
#define ONIG_CHECK_NULL_RETURN(70,2331
#define ONIG_CHECK_NULL_RETURN_VAL(71,2407
#define enclen(73,2485
#define BIT_CTYPE_NEWLINE 76,2632
#define BIT_CTYPE_ALPHA 77,2687
#define BIT_CTYPE_BLANK 78,2740
#define BIT_CTYPE_CNTRL 79,2793
#define BIT_CTYPE_DIGIT 80,2846
#define BIT_CTYPE_GRAPH 81,2899
#define BIT_CTYPE_LOWER 82,2952
#define BIT_CTYPE_PRINT 83,3005
#define BIT_CTYPE_PUNCT 84,3058
#define BIT_CTYPE_SPACE 85,3111
#define BIT_CTYPE_UPPER 86,3164
#define BIT_CTYPE_XDIGIT 87,3217
#define BIT_CTYPE_WORD 88,3271
#define BIT_CTYPE_ALNUM 89,3323
#define BIT_CTYPE_ASCII 90,3376
#define CTYPE_TO_BIT(92,3430
#define CTYPE_IS_WORD_GRAPH_PRINT(93,3472
} PosixBracketEntryType;102,3694
#define USE_UNICODE_PROPERTIES106,3763
#define ONIG_ENCODING_INIT_DEFAULT 111,3923
#define ONIGENC_ISO_8859_1_TO_LOWER_CASE(155,8023
#define ONIGENC_ISO_8859_1_TO_UPPER_CASE(157,8109
ONIG_EXTERN const UChar OnigEncISO_8859_1_ToLowerCaseTable[OnigEncISO_8859_1_ToLowerCaseTable160,8196
ONIG_EXTERN const UChar OnigEncISO_8859_1_ToUpperCaseTable[OnigEncISO_8859_1_ToUpperCaseTable161,8258
ONIG_EXTERN OnigEncoding  OnigEncDefaultCharEncoding;171,8687
ONIG_EXTERN const UChar  OnigEncAsciiToLowerCaseTable[OnigEncAsciiToLowerCaseTable172,8741
ONIG_EXTERN const UChar  OnigEncAsciiToUpperCaseTable[OnigEncAsciiToUpperCaseTable173,8798
ONIG_EXTERN const unsigned short OnigEncAsciiCtypeTable[OnigEncAsciiCtypeTable174,8855
#define ONIGENC_IS_ASCII_CODE(176,8915
#define ONIGENC_ASCII_CODE_TO_LOWER_CASE(177,8968
#define ONIGENC_ASCII_CODE_TO_UPPER_CASE(178,9044
#define ONIGENC_IS_ASCII_CODE_CTYPE(179,9120
#define ONIGENC_IS_ASCII_CODE_CASE_AMBIG(181,9232
#define OnigEncodingName(187,9492
#define OnigEncodingDeclare(188,9533
#define OnigEncodingDefine(189,9608
#define OnigEncodingName(197,9854
#define OnigEncodingDeclare(198,9898
#define OnigEncodingDefine(199,9966
#define ENC_REPLICATE(203,10089
#define ENC_ALIAS(204,10123
#define ENC_DUMMY(205,10153

regerror.c,307
#define va_init_list(35,1701
#define va_init_list(38,1768
onig_error_code_to_format(42,1828
static void sprint_byte(185,7521
static void sprint_byte_with_x(190,7609
static int to_ascii(195,7707
#define MAX_ERROR_PAR_LEN 245,8943
onig_error_code_to_str(249,9016
onig_snprintf_with_pattern(317,10396

regexec.c,5760
#define ONIGENC_IS_MBC_CRNL(35,1709
history_tree_clear(44,1955
history_tree_free(65,2424
history_root_free(72,2529
history_node_new(81,2725
history_tree_add_child(98,3110
#define HISTORY_TREE_INIT_ALLOC_SIZE 100,3192
history_tree_clone(129,3977
onig_get_capture_tree(152,4474
onig_region_clear(159,4597
onig_region_resize(172,4829
onig_region_resize_clear(220,5821
onig_region_set(231,6007
onig_region_init(246,6309
onig_region_new(256,6547
onig_region_free(267,6699
onig_region_copy(283,6991
#define RREGC_SIZE 285,7044
#define INVALID_STACK_INDEX 308,7502
#define STK_ALT 312,7578
#define STK_LOOK_BEHIND_NOT 313,7620
#define STK_POS_NOT 314,7662
#define STK_MEM_START 316,7732
#define STK_MEM_END 317,7774
#define STK_REPEAT_INC 318,7816
#define STK_STATE_CHECK_MARK 319,7858
#define STK_NULL_CHECK_START 321,7928
#define STK_NULL_CHECK_END 322,7970
#define STK_MEM_END_MARK 323,8038
#define STK_POS 324,8080
#define STK_STOP_BT 325,8147
#define STK_REPEAT 326,8215
#define STK_CALL_FRAME 327,8257
#define STK_RETURN 328,8299
#define STK_VOID 329,8341
#define STK_MASK_POP_USED 332,8436
#define STK_MASK_TO_VOID_TARGET 333,8478
#define STK_MASK_MEM_END_OR_MARK 334,8520
#define MATCH_ARG_INIT(337,8638
#define MATCH_ARG_INIT(345,8891
#define STATE_CHECK_BUFF_MALLOC_THRESHOLD_SIZE 355,9151
#define STATE_CHECK_BUFF_INIT(357,9203
#define MATCH_ARG_FREE(383,10177
#define MATCH_ARG_FREE(390,10422
#define STACK_INIT(395,10501
#define STACK_SAVE 413,11113
static unsigned int MatchStackLimitSize 420,11257
onig_get_match_stack_limit_size(423,11352
onig_set_match_stack_limit_size(429,11436
stack_double(436,11545
#define STACK_ENSURE(477,12649
#define STACK_AT(484,12840
#define GET_STACK_INDEX(485,12892
#define STACK_PUSH_TYPE(487,12943
#define IS_TO_VOID_TARGET(493,13060
#define STATE_CHECK_POS(496,13178
#define STATE_CHECK_VAL(498,13264
#define ELSE_IF_STATE_CHECK_MARK(507,13457
#define STACK_PUSH(513,13675
#define STACK_PUSH_ENSURED(523,13937
#define STACK_PUSH_ALT_WITH_STATE_CHECK(530,14105
#define STACK_PUSH_STATE_CHECK(540,14417
#define ELSE_IF_STATE_CHECK_MARK(552,14706
#define STACK_PUSH(554,14745
#define STACK_PUSH_ENSURED(563,14974
#define STACK_PUSH_ALT(570,15154
#define STACK_PUSH_POS(571,15226
#define STACK_PUSH_POS_NOT(572,15306
#define STACK_PUSH_STOP_BT 573,15382
#define STACK_PUSH_LOOK_BEHIND_NOT(574,15451
#define STACK_PUSH_REPEAT(577,15554
#define STACK_PUSH_REPEAT_INC(586,15762
#define STACK_PUSH_MEM_START(593,15920
#define STACK_PUSH_MEM_END(605,16286
#define STACK_PUSH_MEM_END_MARK(616,16592
#define STACK_GET_MEM_START(623,16743
#define STACK_GET_MEM_RANGE(639,17101
#define STACK_PUSH_NULL_CHECK_START(657,17527
#define STACK_PUSH_NULL_CHECK_END(665,17730
#define STACK_PUSH_CALL_FRAME(672,17893
#define STACK_PUSH_RETURN 679,18050
#define STACK_BASE_CHECK(687,18174
#define STACK_BASE_CHECK(693,18303
#define STACK_POP_ONE 696,18343
#define STACK_POP 701,18437
#define STACK_POP_TIL_POS_NOT 745,19777
#define STACK_POP_TIL_LOOK_BEHIND_NOT 765,20423
#define STACK_POS_END(785,21093
#define STACK_STOP_BT_END 800,21373
#define STACK_NULL_CHECK(815,21677
#define STACK_NULL_CHECK_REC(829,22006
#define STACK_NULL_CHECK_MEMST(850,22496
#define STACK_NULL_CHECK_MEMST_REC(889,23629
#define STACK_GET_REPEAT(937,25030
#define STACK_RETURN(955,25431
#define STRING_CMP(974,25809
#define STRING_CMP_IC(980,25921
static int string_cmp_ic(985,26090
#define STRING_CMP_VALUE(1012,26746
#define STRING_CMP_VALUE_IC(1021,26913
#define IS_EMPTY_STR 1029,27127
#define ON_STR_BEGIN(1030,27171
#define ON_STR_END(1031,27214
#define DATA_ENSURE_CHECK1 1033,27314
#define DATA_ENSURE_CHECK(1034,27363
#define DATA_ENSURE(1035,27419
#define DATA_ENSURE_CHECK1 1037,27493
#define DATA_ENSURE_CHECK(1038,27534
#define DATA_ENSURE(1039,27582
make_capture_history_tree(1045,27745
static int mem_is_in_memp(1086,28862
static int backref_match_at_nested_level(1098,29059
#define USE_TIMEOFDAY1158,30369
static struct timeval ts,1167,30513
static struct timeval ts, te;1167,30513
#define GETTIME(1168,30543
#define TIMEDIFF(1169,30610
static struct tms ts,1175,30797
static struct tms ts, te;1175,30797
#define GETTIME(1176,30823
#define TIMEDIFF(1177,30862
static int OpCounter[OpCounter1180,30930
static int OpPrevCounter[OpPrevCounter1181,30957
static unsigned long OpTime[OpTime1182,30988
static int OpCurr 1183,31022
static int OpPrevTarget 1184,31053
static int MaxStackDepth 1185,31088
#define MOP_IN(1187,31119
#define MOP_OUT 1194,31276
onig_statistics_init(1200,31377
onig_print_statistics(1210,31541
#define STACK_INC 1221,31853
#define STACK_INC 1228,31982
#define MOP_IN(1230,32011
#define MOP_OUT1231,32034
typedef int regoff_t;1236,32094
} posix_regmatch_t;1241,32172
match_at(1246,32303
slow_search(2749,67722
str_lower_case_match(2789,68538
slow_search_ic(2809,68987
slow_search_backward(2834,69512
slow_search_backward_ic(2866,70223
bm_search_notrev(2892,70894
bm_search(2950,72147
set_bm_backward_skip(2988,72985
bm_search_backward(3010,73411
map_search(3039,74107
map_search_backward(3053,74392
onig_match(3068,74750
forward_search_range(3133,76230
#define BM_BACKWARD_SEARCH_LENGTH_THRESHOLD 3261,79594
backward_search_range(3264,79656
onig_search(3369,82323
#define MATCH_AND_RETURN_CHECK(3425,83845
#define MATCH_AND_RETURN_CHECK(3436,84131
#define MATCH_AND_RETURN_CHECK(3447,84454
#define MATCH_AND_RETURN_CHECK(3458,84717
onig_get_encoding(3771,92825
onig_get_options(3777,92903
onig_get_case_fold_flag(3783,92987
onig_get_syntax(3789,93089
onig_number_of_captures(3795,93157
onig_number_of_capture_histories(3801,93234
onig_copy_encoding(3818,93510

regint.h,13051
#define ONIGURUMA_REGINT_H2,27
#define ONIG_DEBUG46,2088
#define PLATFORM_UNALIGNED_WORD_ACCESS54,2334
#define USE_NAMED_GROUP59,2413
#define USE_SUBEXP_CALL60,2437
#define USE_BACKREF_WITH_LEVEL 61,2461
#define USE_MONOMANIAC_CHECK_CAPTURES_IN_ENDLESS_REPEAT 62,2528
#define USE_NEWLINE_AT_END_OF_STRING_HAS_EMPTY_LINE 63,2606
#define USE_WARNING_REDUNDANT_NESTED_REPEAT_OPERATOR64,2682
#define USE_PARSE_TREE_NODE_RECYCLE69,2861
#define USE_OP_PUSH_OR_JUMP_EXACT70,2897
#define USE_QTFR_PEEK_NEXT71,2931
#define USE_ST_LIBRARY72,2958
#define USE_SHARED_CCLASS_TABLE73,2981
#define INIT_MATCH_STACK_SIZE 75,3014
#define DEFAULT_MATCH_STACK_LIMIT_SIZE 76,3068
#  define ARG_UNUSED 79,3161
#  define ARG_UNUSED81,3214
#undef xmalloc88,3338
#undef xrealloc89,3353
#undef xcalloc90,3369
#undef xfree91,3384
#undef ONIG_ESCAPE_UCHAR_COLLISION94,3439
#undef USE_MATCH_RANGE_IS_COMPLETE_RANGE96,3481
#undef USE_CAPTURE_HISTORY97,3522
#define USE_VARIABLE_META_CHARS98,3549
#define USE_WORD_BEGIN_END 99,3581
#define USE_POSIX_REGION_OPTION 100,3656
#define USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE101,3727
#define THREAD_SYSTEM_INIT 104,3872
#define THREAD_SYSTEM_END 105,3934
#define THREAD_ATOMIC_START 106,3996
#define THREAD_ATOMIC_END 107,4058
#define THREAD_PASS 108,4120
#define xmalloc 110,4198
#define xrealloc 111,4225
#define xcalloc 112,4253
#define xfree 113,4280
#define CHECK_INTERRUPT_IN_MATCH_AT 118,4326
#define onig_st_init_table 119,4385
#define onig_st_init_table_with_size 120,4443
#define onig_st_init_numtable 121,4511
#define onig_st_init_numtable_with_size 122,4572
#define onig_st_init_strtable 123,4643
#define onig_st_init_strtable_with_size 124,4704
#define onig_st_delete 125,4775
#define onig_st_delete_safe 126,4829
#define onig_st_insert 127,4888
#define onig_st_lookup 128,4942
#define onig_st_foreach 129,4996
#define onig_st_add_direct 130,5051
#define onig_st_free_table 131,5109
#define onig_st_cleanup_safe 132,5167
#define onig_st_copy 133,5227
#define onig_st_nothing_key_clone 134,5279
#define onig_st_nothing_key_free 135,5344
#define onig_st_is_member 136,5408
#define USE_UPPER_CASE_TABLE138,5466
#define st_init_table 141,5502
#define st_init_table_with_size 142,5560
#define st_init_numtable 143,5628
#define st_init_numtable_with_size 144,5689
#define st_init_strtable 145,5760
#define st_init_strtable_with_size 146,5821
#define st_delete 147,5892
#define st_delete_safe 148,5946
#define st_insert 149,6005
#define st_lookup 150,6059
#define st_foreach 151,6113
#define st_add_direct 152,6168
#define st_free_table 153,6226
#define st_cleanup_safe 154,6284
#define st_copy 155,6344
#define st_nothing_key_clone 156,6396
#define st_nothing_key_free 157,6461
#define onig_st_is_member 159,6531
#define CHECK_INTERRUPT_IN_MATCH_AT161,6584
#define STATE_CHECK_STRING_THRESHOLD_LEN 165,6629
#define STATE_CHECK_BUFF_MAX_SIZE 166,6684
#define THREAD_PASS_LIMIT_COUNT 168,6740
#define xmemset 169,6778
#define xmemcpy 170,6805
#define xmemmove 171,6832
#define xalloca 174,6903
#define xvsnprintf 175,6931
#define xalloca 177,6968
#define xvsnprintf 178,6995
#define ONIG_STATE_INC(183,7101
#define ONIG_STATE_DEC(184,7144
#define ONIG_STATE_INC_THREAD(186,7188
#define ONIG_STATE_DEC_THREAD(191,7305
#define ONIG_STATE_INC(197,7428
#define ONIG_STATE_DEC(198,7478
#define ONIG_STATE_INC_THREAD(199,7528
#define ONIG_STATE_DEC_THREAD(200,7578
#undef MIN229,8062
#undef MAX232,8091
#define MIN(234,8109
#define MAX(235,8146
#define IS_NULL(237,8184
#define IS_NOT_NULL(238,8249
#define CHECK_NULL_RETURN(239,8314
#define CHECK_NULL_RETURN_MEMERR(240,8380
#define NULL_UCHARP 241,8456
#define PLATFORM_GET_INC(245,8547
#define PLATFORM_GET_INC(252,8654
#define WORD_ALIGNMENT_SIZE 258,8797
#define GET_ALIGNMENT_PAD_SIZE(260,8842
#define ALIGNMENT_RIGHT(266,9064
#define STACK_POP_LEVEL_FREE 274,9277
#define STACK_POP_LEVEL_MEM_START 275,9315
#define STACK_POP_LEVEL_ALL 276,9353
#define ONIG_OPTIMIZE_NONE 279,9413
#define ONIG_OPTIMIZE_EXACT 280,9455
#define ONIG_OPTIMIZE_EXACT_BM 281,9517
#define ONIG_OPTIMIZE_EXACT_BM_NOT_REV 282,9586
#define ONIG_OPTIMIZE_EXACT_IC 283,9664
#define ONIG_OPTIMIZE_MAP 284,9740
typedef unsigned int  BitStatusType;287,9817
#define BIT_STATUS_BITS_NUM 289,9855
#define BIT_STATUS_CLEAR(290,9920
#define BIT_STATUS_ON_ALL(291,9969
#define BIT_STATUS_AT(292,10037
#define BIT_STATUS_ON_AT(295,10148
#define BIT_STATUS_ON_AT_SIMPLE(302,10299
#define INT_MAX_LIMIT 308,10430
#define DIGITVAL(310,10499
#define ODIGITVAL(311,10540
#define XDIGITVAL(312,10581
#define IS_SINGLELINE(316,10746
#define IS_MULTILINE(317,10816
#define IS_IGNORECASE(318,10885
#define IS_EXTEND(319,10955
#define IS_FIND_LONGEST(320,11021
#define IS_FIND_NOT_EMPTY(321,11093
#define IS_FIND_CONDITION(322,11167
#define IS_NOTBOL(324,11282
#define IS_NOTEOL(325,11348
#define IS_POSIX_REGION(326,11414
#define IS_DYNAMIC_OPTION(333,11715
#define DISABLE_CASE_FOLD_MULTI_CHAR(335,11753
#define REPEAT_INFINITE 338,11871
#define IS_REPEAT_INFINITE(339,11906
#define BITS_PER_BYTE 342,11977
#define SINGLE_BYTE_SIZE 343,12006
#define BITS_IN_ROOM 344,12054
#define BITSET_SIZE 345,12112
typedef unsigned int   Bits;348,12212
typedef unsigned char  Bits;350,12247
typedef Bits           BitSet[BitSet352,12283
typedef Bits*          BitSetRef;353,12327
#define SIZE_BITSET 355,12362
#define BITSET_CLEAR(357,12405
#define BS_ROOM(362,12520
#define BS_BIT(363,12580
#define BITSET_AT(365,12644
#define BITSET_SET_BIT(366,12711
#define BITSET_CLEAR_BIT(367,12778
#define BITSET_INVERT_BIT(368,12848
typedef struct _BBuf 371,12935
} BBuf;375,13013
#define BBUF_INIT(377,13022
#define BBUF_SIZE_INC(379,13092
#define BBUF_EXPAND(385,13274
#define BBUF_ENSURE_SIZE(391,13500
#define BBUF_WRITE(401,13840
#define BBUF_WRITE1(408,14095
#define BBUF_ADD(415,14331
#define BBUF_ADD1(416,14409
#define BBUF_GET_ADD_ADDRESS(417,14483
#define BBUF_GET_OFFSET_POS(418,14544
#define BBUF_MOVE_RIGHT(421,14611
#define BBUF_MOVE_LEFT(428,14893
#define BBUF_MOVE_LEFT_REDUCE(433,15020
#define BBUF_INSERT(438,15184
#define BBUF_GET_BYTE(448,15438
#define ANCHOR_BEGIN_BUF 451,15488
#define ANCHOR_BEGIN_LINE 452,15527
#define ANCHOR_BEGIN_POSITION 453,15566
#define ANCHOR_END_BUF 454,15605
#define ANCHOR_SEMI_END_BUF 455,15644
#define ANCHOR_END_LINE 456,15683
#define ANCHOR_WORD_BOUND 458,15723
#define ANCHOR_NOT_WORD_BOUND 459,15762
#define ANCHOR_WORD_BEGIN 460,15801
#define ANCHOR_WORD_END 461,15840
#define ANCHOR_PREC_READ 462,15879
#define ANCHOR_PREC_READ_NOT 463,15919
#define ANCHOR_LOOK_BEHIND 464,15959
#define ANCHOR_LOOK_BEHIND_NOT 465,15999
#define ANCHOR_ANYCHAR_STAR 467,16040
#define ANCHOR_ANYCHAR_STAR_ML 468,16107
enum OpCode 471,16209
  OP_FINISH 472,16223
  OP_END 473,16303
  OP_EXACT1 475,16372
  OP_EXACT2,476,16421
  OP_EXACT3,477,16470
  OP_EXACT4,478,16519
  OP_EXACT5,479,16568
  OP_EXACTN,480,16617
  OP_EXACTMB2N1,481,16659
  OP_EXACTMB2N2,482,16709
  OP_EXACTMB2N3,483,16759
  OP_EXACTMB2N,484,16809
  OP_EXACTMB3N,485,16853
  OP_EXACTMBN,486,16897
  OP_EXACT1_IC,488,16941
  OP_EXACTN_IC,489,17003
  OP_CCLASS,491,17066
  OP_CCLASS_MB,492,17079
  OP_CCLASS_MIX,493,17095
  OP_CCLASS_NOT,494,17112
  OP_CCLASS_MB_NOT,495,17129
  OP_CCLASS_MIX_NOT,496,17149
  OP_CCLASS_NODE,497,17170
  OP_ANYCHAR,499,17228
  OP_ANYCHAR_ML,500,17269
  OP_ANYCHAR_STAR,501,17321
  OP_ANYCHAR_ML_STAR,502,17362
  OP_ANYCHAR_STAR_PEEK_NEXT,503,17414
  OP_ANYCHAR_ML_STAR_PEEK_NEXT,504,17443
  OP_WORD,506,17476
  OP_NOT_WORD,507,17487
  OP_WORD_BOUND,508,17502
  OP_NOT_WORD_BOUND,509,17519
  OP_WORD_BEGIN,510,17540
  OP_WORD_END,511,17557
  OP_BEGIN_BUF,513,17573
  OP_END_BUF,514,17589
  OP_BEGIN_LINE,515,17603
  OP_END_LINE,516,17620
  OP_SEMI_END_BUF,517,17635
  OP_BEGIN_POSITION,518,17654
  OP_BACKREF1,520,17676
  OP_BACKREF2,521,17691
  OP_BACKREFN,522,17706
  OP_BACKREFN_IC,523,17721
  OP_BACKREF_MULTI,524,17739
  OP_BACKREF_MULTI_IC,525,17759
  OP_BACKREF_WITH_LEVEL,526,17782
  OP_MEMORY_START,528,17838
  OP_MEMORY_START_PUSH,529,17857
  OP_MEMORY_END_PUSH,530,17916
  OP_MEMORY_END_PUSH_REC,531,17975
  OP_MEMORY_END,532,18034
  OP_MEMORY_END_REC,533,18051
  OP_FAIL,535,18105
  OP_JUMP,536,18155
  OP_PUSH,537,18166
  OP_POP,538,18177
  OP_PUSH_OR_JUMP_EXACT1,539,18187
  OP_PUSH_IF_PEEK_NEXT,540,18257
  OP_REPEAT,541,18327
  OP_REPEAT_NG,542,18366
  OP_REPEAT_INC,543,18419
  OP_REPEAT_INC_NG,544,18436
  OP_REPEAT_INC_SG,545,18480
  OP_REPEAT_INC_NG_SG,546,18537
  OP_NULL_CHECK_START,547,18607
  OP_NULL_CHECK_END,548,18664
  OP_NULL_CHECK_END_MEMST,549,18721
  OP_NULL_CHECK_END_MEMST_PUSH,550,18798
  OP_PUSH_POS,552,18876
  OP_POP_POS,553,18924
  OP_PUSH_POS_NOT,554,18972
  OP_FAIL_POS,555,19020
  OP_PUSH_STOP_BT,556,19068
  OP_POP_STOP_BT,557,19116
  OP_LOOK_BEHIND,558,19164
  OP_PUSH_LOOK_BEHIND_NOT,559,19234
  OP_FAIL_LOOK_BEHIND_NOT,560,19282
  OP_CALL,562,19331
  OP_RETURN,563,19373
  OP_STATE_CHECK_PUSH,565,19387
  OP_STATE_CHECK_PUSH_OR_JUMP,566,19461
  OP_STATE_CHECK,567,19527
  OP_STATE_CHECK_ANYCHAR_STAR,568,19575
  OP_STATE_CHECK_ANYCHAR_ML_STAR,569,19606
  OP_SET_OPTION_PUSH,572,19683
  OP_SET_OPTION 573,19749
typedef int RelAddrType;576,19795
typedef int AbsAddrType;577,19820
typedef int LengthType;578,19845
typedef int RepeatNumType;579,19869
typedef short int MemNumType;580,19896
typedef short int StateCheckNumType;581,19926
typedef void* PointerType;582,19963
#define SIZE_OPCODE 584,19991
#define SIZE_RELADDR 585,20023
#define SIZE_ABSADDR 586,20073
#define SIZE_LENGTH 587,20123
#define SIZE_MEMNUM 588,20172
#define SIZE_STATE_CHECK_NUM 589,20221
#define SIZE_REPEATNUM 590,20277
#define SIZE_OPTION 591,20329
#define SIZE_CODE_POINT 592,20382
#define SIZE_POINTER 593,20434
#define GET_RELADDR_INC(596,20486
#define GET_ABSADDR_INC(597,20562
#define GET_LENGTH_INC(598,20638
#define GET_MEMNUM_INC(599,20713
#define GET_REPEATNUM_INC(600,20788
#define GET_OPTION_INC(601,20866
#define GET_POINTER_INC(602,20945
#define GET_STATE_CHECK_NUM_INC(603,21021
#define GET_CODE_POINT(606,21158
#define GET_BYTE_INC(607,21222
#define SIZE_OP_ANYCHAR_STAR 614,21320
#define SIZE_OP_ANYCHAR_STAR_PEEK_NEXT 615,21372
#define SIZE_OP_JUMP 616,21429
#define SIZE_OP_PUSH 617,21497
#define SIZE_OP_POP 618,21565
#define SIZE_OP_PUSH_OR_JUMP_EXACT1 619,21617
#define SIZE_OP_PUSH_IF_PEEK_NEXT 620,21689
#define SIZE_OP_REPEAT_INC 621,21761
#define SIZE_OP_REPEAT_INC_NG 622,21828
#define SIZE_OP_PUSH_POS 623,21895
#define SIZE_OP_PUSH_POS_NOT 624,21947
#define SIZE_OP_POP_POS 625,22015
#define SIZE_OP_FAIL_POS 626,22067
#define SIZE_OP_SET_OPTION 627,22119
#define SIZE_OP_SET_OPTION_PUSH 628,22186
#define SIZE_OP_FAIL 629,22253
#define SIZE_OP_MEMORY_START 630,22305
#define SIZE_OP_MEMORY_START_PUSH 631,22372
#define SIZE_OP_MEMORY_END_PUSH 632,22439
#define SIZE_OP_MEMORY_END_PUSH_REC 633,22506
#define SIZE_OP_MEMORY_END 634,22573
#define SIZE_OP_MEMORY_END_REC 635,22640
#define SIZE_OP_PUSH_STOP_BT 636,22707
#define SIZE_OP_POP_STOP_BT 637,22759
#define SIZE_OP_NULL_CHECK_START 638,22811
#define SIZE_OP_NULL_CHECK_END 639,22878
#define SIZE_OP_LOOK_BEHIND 640,22945
#define SIZE_OP_PUSH_LOOK_BEHIND_NOT 641,23012
#define SIZE_OP_FAIL_LOOK_BEHIND_NOT 642,23094
#define SIZE_OP_CALL 643,23146
#define SIZE_OP_RETURN 644,23214
#define SIZE_OP_STATE_CHECK 647,23306
#define SIZE_OP_STATE_CHECK_PUSH 648,23382
#define SIZE_OP_STATE_CHECK_PUSH_OR_JUMP 649,23473
#define SIZE_OP_STATE_CHECK_ANYCHAR_STAR 650,23566
#define MC_ESC(653,23652
#define MC_ANYCHAR(654,23713
#define MC_ANYTIME(655,23778
#define MC_ZERO_OR_ONE_TIME(656,23843
#define MC_ONE_OR_MORE_TIME(657,23917
#define MC_ANYCHAR_ANYTIME(658,23991
#define IS_MC_ESC_CODE(660,24065
#define SYN_POSIX_COMMON_OP 665,24192
#define SYN_GNU_REGEX_OP 672,24445
#define SYN_GNU_REGEX_BV 685,25065
#define NCCLASS_FLAGS(691,25324
#define NCCLASS_FLAG_SET(692,25374
#define NCCLASS_FLAG_CLEAR(693,25441
#define IS_NCCLASS_FLAG_ON(694,25509
#define FLAG_NCCLASS_NOT 697,25600
#define FLAG_NCCLASS_SHARE 698,25642
#define NCCLASS_SET_NOT(700,25685
#define NCCLASS_SET_SHARE(701,25756
#define NCCLASS_CLEAR_NOT(702,25829
#define IS_NCCLASS_NOT(703,25902
#define IS_NCCLASS_SHARE(704,25975
} NodeBase;710,26136
} CClassNode;717,26265
typedef long OnigStackIndex;719,26280
typedef struct _OnigStackType 721,26310
} OnigStackType;759,27599
} OnigMatchArg;775,28026
#define IS_CODE_SB_WORD(778,28044
} OnigOpInfoType;787,28243
typedef void hash_table_type;811,29433
typedef st_data_t hash_data_type;814,29496
typedef unsigned long hash_data_type;816,29536
#define PROPERTY_LIST_ADD_PROP(824,29953
#define PROPERTY_LIST_INIT_CHECK 830,30170
typedef int (*ONIGENC_INIT_PROPERTY_LIST_FUNC_TYPE)ONIGENC_INIT_PROPERTY_LIST_FUNC_TYPE838,30499

regparse.c,7132
#define WARN_BUFSIZE 32,1612
#define CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS34,1641
const OnigSyntaxType OnigSyntaxRuby 37,1695
const OnigSyntaxType*  OnigDefaultSyntax 73,3294
extern void onig_null_warn(75,3356
static OnigWarnFunc onig_warn 80,3519
static OnigWarnFunc onig_verb_warn 84,3609
static OnigWarnFunc onig_verb_warn 86,3695
extern void onig_set_warn_func(89,3756
extern void onig_set_verb_warn_func(94,3825
bbuf_free(100,3916
bbuf_clone(109,4048
#define BACKREF_REL_TO_ABS(123,4321
#define ONOFF(126,4398
#define MBCODE_START_POS(128,4472
#define SET_ALL_MULTI_BYTE_RANGE(131,4564
#define ADD_ALL_MULTI_BYTE_RANGE(134,4686
#define BITSET_IS_EMPTY(142,4865
bitset_set_range(153,5061
bitset_set_all(163,5230
bitset_invert(171,5353
bitset_invert_to(178,5471
bitset_and(185,5610
bitset_or(192,5741
bitset_copy(199,5871
onig_strncmp(206,6001
onig_strcpy(218,6162
strdup_with_null(229,6365
#define PEND_VALUE 249,6720
#define PFETCH_READY 251,6744
#define PEND 252,6785
#define PUNFETCH 253,6825
#define PINC 254,6862
#define PFETCH(258,6951
#define PPEEK 264,7116
#define PPEEK_IS(265,7195
strcat_capa(268,7260
strcat_capa_from_static(285,7604
} st_str_end_key;305,7974
str_end_cmp(308,8004
str_end_hash(329,8287
onig_st_init_strend_table_with_size(343,8477
onig_st_lookup_strend(355,8715
onig_st_insert_strend(367,8995
#define INIT_NAME_BACKREFS_ALLOC_NUM 388,9444
} NameEntry;397,9664
typedef st_table  NameTable;401,9701
typedef st_data_t HashDataType;402,9730
#define NAMEBUF_SIZE 404,9810
#define NAMEBUF_SIZE_1 405,9837
i_print_name_entry(409,9894
onig_print_names(430,10322
i_free_name_entry(444,10608
names_clear(454,10808
onig_names_free(465,10984
name_find(480,11234
} INamesArg;498,11656
i_names(501,11681
onig_foreach_name(516,12039
i_renumber_name(534,12473
onig_renumber_name_table(551,12805
onig_number_of_names(563,13030
#define INIT_NAMES_ALLOC_NUM 575,13217
} NameTable;581,13323
onig_print_names(585,13366
names_clear(617,14001
onig_names_free(646,14532
name_find(661,14761
onig_foreach_name(679,15137
onig_number_of_names(699,15604
name_add(712,15799
onig_name_to_group_numbers(822,18572
onig_name_to_backref_number(844,18984
onig_name_to_group_numbers(870,19525
onig_name_to_backref_number(877,19675
onig_foreach_name(884,19835
onig_number_of_names(891,19994
onig_noname_group_capture_is_active(898,20091
#define INIT_SCANENV_MEMNODES_ALLOC_SIZE 915,20472
scan_env_clear(918,20531
scan_env_add_mem_entry(948,21249
scan_env_set_mem_node(981,21998
typedef struct _FreeNode 992,22213
} FreeNode;994,22266
static FreeNode* FreeNodeList 996,22279
onig_node_free(1000,22349
onig_free_node_list(1083,23847
node_new(1099,24099
initialize_cclass(1121,24480
node_new_cclass(1130,24621
node_new_cclass_by_codepoint_range(1141,24797
node_new_ctype(1191,25813
node_new_anychar(1203,26023
node_new_list(1213,26162
onig_node_new_list(1225,26361
onig_node_list_add(1231,26460
onig_node_new_alt(1249,26728
onig_node_new_anchor(1261,26930
node_new_backref(1274,27179
node_new_call(1326,28375
node_new_quantifier(1342,28758
node_new_enclose(1368,29415
onig_node_new_enclose(1385,29803
node_new_enclose_memory(1391,29886
node_new_option(1405,30190
onig_node_str_cat(1414,30371
onig_node_str_set(1450,31214
node_str_cat_char(1457,31365
onig_node_conv_to_str_node(1466,31492
onig_node_str_clear(1476,31712
node_new_str(1490,32020
onig_node_new_str(1508,32394
node_new_str_raw(1514,32495
node_new_empty(1522,32629
node_new_str_raw_char(1528,32703
str_node_split_last_char(1537,32816
str_node_can_be_split(1555,33215
node_str_head_pad(1565,33431
onig_scan_unsigned_number(1582,33732
scan_unsigned_hexadecimal_number(1609,34213
scan_unsigned_octal_number(1637,34750
#define BBUF_WRITE_CODE_POINT(1665,35249
new_code_range(1673,35474
#define INIT_MULTI_BYTE_RANGE_SIZE 1675,35504
add_code_range_to_buf(1691,35832
add_code_range(1766,37492
not_code_range_buf(1779,37802
#define SWAP_BBUF_NOT(1813,38553
or_code_range_buf(1821,38756
and_code_range1(1878,39959
and_code_range_buf(1918,40714
and_cclass(1975,42047
or_cclass(2033,43159
conv_backslash_value(2092,44278
is_invalid_quantifier_target(2117,44804
#define is_invalid_quantifier_target(2148,45403
popular_quantifier_num(2153,45505
enum ReduceType 2177,46010
  RQ_ASIS 2178,46028
  RQ_DEL 2179,46055
  RQ_A,2180,46090
  RQ_AQ,2181,46121
  RQ_QQ,2182,46152
  RQ_P_QQ,2183,46183
  RQ_PQ_Q 2184,46214
static enum ReduceType const ReduceTypeTable[ReduceTypeTable2187,46249
onig_reduce_nested_quantifier(2197,46728
enum TokenSyms 2247,47870
  TK_EOT 2248,47887
  TK_RAW_BYTE 2249,47927
  TK_CHAR,2250,47946
  TK_STRING,2251,47957
  TK_CODE_POINT,2252,47970
  TK_ANYCHAR,2253,47987
  TK_CHAR_TYPE,2254,48001
  TK_BACKREF,2255,48017
  TK_CALL,2256,48031
  TK_ANCHOR,2257,48042
  TK_OP_REPEAT,2258,48055
  TK_INTERVAL,2259,48071
  TK_ANYCHAR_ANYTIME,2260,48086
  TK_ALT,2261,48129
  TK_SUBEXP_OPEN,2262,48139
  TK_SUBEXP_CLOSE,2263,48157
  TK_CC_OPEN,2264,48176
  TK_QUOTE_OPEN,2265,48190
  TK_CHAR_PROPERTY,2266,48207
  TK_CC_CLOSE,2268,48267
  TK_CC_RANGE,2269,48282
  TK_POSIX_BRACKET_OPEN,2270,48297
  TK_CC_AND,2271,48322
  TK_CC_CC_OPEN 2272,48356
} OnigToken;2312,49063
fetch_range_quantifier(2316,49089
fetch_escaped_value(2407,51262
get_name_end_code_point(2482,52933
fetch_name_with_level(2502,53301
fetch_name(2616,55721
fetch_name(2735,57948
CC_ESC_WARN(2813,59506
CLOSE_BRACKET_WITHOUT_ESC_WARN(2828,59970
find_str_position(2842,60384
str_exist_check_with_esc(2871,60936
fetch_token_in_cc(2909,61723
fetch_token(3127,66996
add_ctype_to_cc_by_range(3757,82788
add_ctype_to_cc(3831,84579
parse_posix_bracket(3916,86679
#define POSIX_BRACKET_CHECK_LIMIT_LENGTH 3918,86756
#define POSIX_BRACKET_NAME_MIN_LEN 3919,86801
fetch_char_property_to_ctype(3991,88787
parse_char_property(4023,89398
enum CCSTATE 4043,89827
  CCS_VALUE,4044,89842
  CCS_RANGE,4045,89855
  CCS_COMPLETE,4046,89868
  CCS_START4047,89884
enum CCVALTYPE 4050,89900
  CCV_SB,4051,89917
  CCV_CODE_POINT,4052,89927
  CCV_CLASS4053,89945
next_state_class(4057,89972
next_state_val(4080,90498
code_exist_check(4155,92172
parse_char_class(4179,92615
#define NEWLINE_CODE 4485,99471
parse_enclose(4509,100015
static const char* const PopularQStr[PopularQStr4752,105997
static const char* const ReduceQStr[ReduceQStr4756,106078
set_quantifier(4761,106185
#define THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS 4853,108680
} type_cclass_key;4861,108825
static int type_cclass_cmp(4863,108845
static int type_cclass_hash(4871,109037
static const struct st_hash_type type_type_cclass_hash 4892,109411
static st_table* OnigTypeCClassTable;4897,109517
i_free_shared_class(4901,109568
onig_free_shared_cclass_table(4914,109849
clear_not_flag_cclass(4932,110238
} IApplyCaseFoldArg;4960,110757
i_apply_case_fold(4963,110790
parse_exp(5043,112705
parse_branch(5425,121953
parse_subexp(5462,122753
parse_regexp(5506,123660
onig_parse_make_tree(5519,123919
onig_scan_env_set_error_string(5546,124537

regparse.h,3670
#define ONIGURUMA_REGPARSE_H2,29
#define NT_STR 35,1684
#define NT_CCLASS 36,1709
#define NT_CTYPE 37,1734
#define NT_CANY 38,1759
#define NT_BREF 39,1784
#define NT_QTFR 40,1809
#define NT_ENCLOSE 41,1834
#define NT_ANCHOR 42,1859
#define NT_LIST 43,1884
#define NT_ALT 44,1909
#define NT_CALL 45,1934
#define NTYPE2BIT(48,1980
#define BIT_NT_STR 50,2022
#define BIT_NT_CCLASS 51,2066
#define BIT_NT_CTYPE 52,2113
#define BIT_NT_CANY 53,2159
#define BIT_NT_BREF 54,2204
#define BIT_NT_QTFR 55,2249
#define BIT_NT_ENCLOSE 56,2294
#define BIT_NT_ANCHOR 57,2342
#define BIT_NT_LIST 58,2389
#define BIT_NT_ALT 59,2434
#define BIT_NT_CALL 60,2478
#define IS_NODE_TYPE_SIMPLE(62,2524
#define NTYPE(66,2686
#define SET_NTYPE(67,2740
#define NSTR(69,2804
#define NCCLASS(70,2850
#define NCTYPE(71,2899
#define NBREF(72,2947
#define NQTFR(73,2994
#define NENCLOSE(74,3041
#define NANCHOR(75,3091
#define NCONS(76,3140
#define NCALL(77,3187
#define NCAR(79,3235
#define NCDR(80,3281
#define ANCHOR_ANYCHAR_STAR_MASK 84,3330
#define ANCHOR_END_BUF_MASK 85,3410
#define ENCLOSE_MEMORY 87,3483
#define ENCLOSE_OPTION 88,3523
#define ENCLOSE_STOP_BACKTRACK 89,3563
#define NODE_STR_MARGIN 91,3604
#define NODE_STR_BUF_SIZE 92,3639
#define NODE_BACKREFS_SIZE 93,3716
#define NSTR_RAW 95,3752
#define NSTR_AMBIG 96,3819
#define NSTR_DONT_GET_OPT_INFO 97,3858
#define NSTRING_LEN(99,3898
#define NSTRING_SET_RAW(100,3974
#define NSTRING_CLEAR_RAW(101,4044
#define NSTRING_SET_AMBIG(102,4115
#define NSTRING_SET_DONT_GET_OPT_INFO(103,4187
#define NSTRING_IS_RAW(105,4280
#define NSTRING_IS_AMBIG(106,4359
#define NSTRING_IS_DONT_GET_OPT_INFO(107,4438
#define BACKREFS_P(110,4539
#define NQ_TARGET_ISNOT_EMPTY 113,4643
#define NQ_TARGET_IS_EMPTY 114,4679
#define NQ_TARGET_IS_EMPTY_MEM 115,4715
#define NQ_TARGET_IS_EMPTY_REC 116,4751
#define NST_MIN_FIXED 119,4806
#define NST_MAX_FIXED 120,4847
#define NST_CLEN_FIXED 121,4888
#define NST_MARK1 122,4929
#define NST_MARK2 123,4970
#define NST_MEM_BACKREFED 124,5011
#define NST_STOP_BT_SIMPLE_REPEAT 125,5052
#define NST_RECURSION 126,5093
#define NST_CALLED 127,5134
#define NST_ADDR_FIXED 128,5175
#define NST_NAMED_GROUP 129,5216
#define NST_NAME_REF 130,5258
#define NST_IN_REPEAT 131,5300
#define NST_NEST_LEVEL 132,5379
#define NST_BY_NUMBER 133,5421
#define SET_ENCLOSE_STATUS(135,5476
#define CLEAR_ENCLOSE_STATUS(136,5548
#define IS_ENCLOSE_CALLED(138,5621
#define IS_ENCLOSE_ADDR_FIXED(139,5701
#define IS_ENCLOSE_RECURSION(140,5781
#define IS_ENCLOSE_MARK1(141,5861
#define IS_ENCLOSE_MARK2(142,5941
#define IS_ENCLOSE_MIN_FIXED(143,6021
#define IS_ENCLOSE_MAX_FIXED(144,6101
#define IS_ENCLOSE_CLEN_FIXED(145,6181
#define IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT(146,6261
#define IS_ENCLOSE_NAMED_GROUP(148,6361
#define SET_CALL_RECURSION(150,6442
#define IS_CALL_RECURSION(151,6519
#define IS_CALL_NAME_REF(152,6596
#define IS_BACKREF_NAME_REF(153,6673
#define IS_BACKREF_NEST_LEVEL(154,6750
#define IS_QUANTIFIER_IN_REPEAT(155,6827
#define IS_QUANTIFIER_BY_NUMBER(156,6904
#define CALLNODE_REFNUM_UNDEF 158,6982
} StrNode;167,7192
} QtfrNode;183,7588
} EncloseNode;198,8004
} UnsetAddr;205,8109
} UnsetAddrList;211,8195
} CallNode;221,8416
} BRefNode;232,8582
} AnchorNode;239,8681
} ConsAltNode;245,8772
} CtypeNode;251,8846
typedef struct _Node 253,8860
} Node;268,9167
#define NULL_NODE 271,9177
#define SCANENV_MEMNODES_SIZE 273,9209
#define SCANENV_MEM_NODES(274,9255
} ScanEnv;309,10290
#define IS_SYNTAX_OP(312,10303
#define IS_SYNTAX_OP2(313,10365
#define IS_SYNTAX_BV(314,10427
} GroupNumRemap;319,10550

regsyntax.c,797
const OnigSyntaxType OnigSyntaxASIS 32,1611
const OnigSyntaxType OnigSyntaxPosixBasic 48,2154
const OnigSyntaxType OnigSyntaxPosixExtended 65,2796
const OnigSyntaxType OnigSyntaxEmacs 86,3722
const OnigSyntaxType OnigSyntaxGrep 107,4634
const OnigSyntaxType OnigSyntaxGnuRegex 129,5659
const OnigSyntaxType OnigSyntaxJava 145,6204
const OnigSyntaxType OnigSyntaxPerl 168,7316
const OnigSyntaxType OnigSyntaxPerl_NG 192,8321
onig_set_default_syntax(223,9548
onig_copy_syntax(233,9716
onig_set_syntax_op(239,9813
onig_set_syntax_op2(245,9909
onig_set_syntax_behavior(251,10009
onig_set_syntax_options(257,10129
onig_get_syntax_op(263,10255
onig_get_syntax_op2(269,10344
onig_get_syntax_behavior(275,10435
onig_get_syntax_options(281,10538
extern int onig_set_meta_char(287,10648

revision.h,27
#define RUBY_REVISION 1,0

ruby.c,2882
# define MAXPATHLEN 42,903
#define DISABLE_BIT(57,1170
enum disable_flag_bits 58,1217
    disable_gems,59,1242
    disable_rubyopt60,1260
#define DUMP_BIT(63,1284
enum dump_flag_bits 64,1325
    dump_insns65,1347
struct cmdline_options 68,1366
#define src_encoding_index 96,1903
cmdline_options_init(99,1992
struct cmdline_arguments 107,2154
#define forbid_setid(115,2391
} origarg;123,2562
usage(126,2586
#define CharNext(167,4552
translate_char(172,4678
rubylib_mangled_path(184,4873
rubylib_mangled_path2(224,5865
#define rubylib_mangled_path 229,5959
#define rubylib_mangled_path2 230,5999
push_include(234,6065
push_include_cygwin(253,6465
#define push_include 285,7070
ruby_push_include(289,7124
identical_path(297,7262
locale_path(302,7323
ruby_incpush(309,7424
expand_include_path(315,7515
ruby_incpush_expand(326,7709
#define LOAD_RELATIVE 332,7843
static HMODULE libruby;336,7916
DllMain(339,7953
ruby_init_loadpath(350,8142
ruby_init_loadpath_safe(356,8209
#define RUBY_RELATIVE(395,9048
#define RUBY_RELATIVE(397,9118
#define incpush(399,9160
add_modules(437,10121
require_libraries(452,10436
process_sflag(475,11079
moreswitches(543,12510
#define NAME_MATCH_P(589,13519
#define UNSET_WHEN(592,13622
#define SET_WHEN(598,13762
enable_option(605,13911
#define UNSET_WHEN_DISABLE(607,13964
disable_option(618,14267
#define SET_WHEN_DISABLE(620,14321
dump_option(631,14618
#define SET_WHEN_DUMP(633,14669
set_option_encoding_once(639,14842
#define set_internal_encoding_once(654,15205
#define set_external_encoding_once(656,15336
#define set_source_encoding_once(658,15464
proc_options(662,15593
#	define is_option_end(934,20478
#	define check_envopt(936,20578
#	define need_argument(939,20740
#	define is_option_with_arg(943,20912
#	define set_encoding_part(965,21705
#	undef set_encoding_part979,22166
#	undef is_option_end1044,23808
#	undef check_envopt1045,23830
#	undef need_argument1046,23851
#	undef is_option_with_arg1047,23873
ruby_init_gems(1058,23990
opt_enc_index(1065,24094
#define rb_progname 1079,24439
VALUE rb_argv0;1080,24480
false_value(1083,24510
true_value(1089,24565
#define rb_define_readonly_boolean(1094,24605
uscore_get(1098,24743
rb_f_sub(1121,25288
rb_f_gsub(1142,25768
rb_f_chop(1162,26200
rb_f_chomp(1182,26595
process_options(1192,26784
#define PREPARE_PARSE_MAIN(1325,30303
struct load_file_arg 1420,32507
load_file_internal(1428,32637
restore_lineno(1588,36721
load_file(1594,36805
rb_load_file(1605,37119
#define USE_ENVSPACE_FOR_ARG01614,37398
get_arglen(1622,37507
set_arg0(1656,38157
ruby_script(1704,39123
init_ids(1712,39263
#undef forbid_setid1726,39588
forbid_setid(1728,39620
verbose_setter(1739,40002
opt_W_getter(1746,40135
ruby_prog_init(1761,40386
ruby_set_argv(1777,41007
ruby_process_options(1798,41372
ruby_sysinit(1824,42086

safe.c,274
#define SAFE_LEVEL_MAX 20,548
rb_safe_level(28,645
rb_set_safe_level_force(34,712
rb_set_safe_level(40,793
safe_getter(53,1005
safe_setter(59,1077
rb_secure(79,1518
rb_secure_update(94,1851
rb_check_safe_obj(101,1931
rb_check_safe_str(116,2240
Init_safe(126,2434

signal.c,1915
typedef LONG rb_atomic_t;21,524
# define ATOMIC_TEST(23,551
# define ATOMIC_SET(24,608
# define ATOMIC_INC(25,673
# define ATOMIC_DEC(26,727
typedef int rb_atomic_t;29,788
# define ATOMIC_TEST(31,814
# define ATOMIC_SET(32,869
# define ATOMIC_INC(33,915
# define ATOMIC_DEC(34,950
#undef SIGBUS38,1009
#define USE_TRAP_MASK 42,1087
#define USE_TRAP_MASK 44,1117
# define NSIG 48,1162
static const struct signals 51,1217
} siglist 54,1286
signm2signo(191,3309
signo2signm(202,3514
ruby_signal_name(213,3694
esignal_init(227,3949
esignal_signo(284,5168
interrupt_init(290,5249
ruby_default_signal(300,5441
rb_f_kill(331,6217
#define killpg(334,6271
} signal_buff;405,7618
#define sighandler_t 408,7654
typedef RETSIGTYPE (*sighandler_t)sighandler_t411,7688
typedef void ruby_sigaction_t(413,7747
#define SIGINFO_ARG 414,7802
typedef RETSIGTYPE ruby_sigaction_t(416,7857
#define SIGINFO_ARG417,7899
#define USE_SIGALTSTACK422,7997
#define ALT_STACK_SIZE 427,8068
#define ALT_STACK_SIZE 429,8110
register_sigaltstack(433,8195
ruby_signal(452,8611
posix_signal(486,9367
#define ruby_signal(492,9486
ruby_nativethread_signal(495,9643
sighandler(507,9859
rb_signal_buff_size(517,10052
static sigset_t trap_last_mask;524,10151
static int trap_last_mask;526,10190
rb_disable_interrupt(535,10286
rb_enable_interrupt(547,10498
rb_get_next_signal(557,10645
sigbus(578,10981
static int segv_received 585,11049
sigsegv(587,11097
sigpipe(612,11700
signal_exec(619,11762
rb_trap_exit(626,11899
rb_signal_exec(638,12106
struct trap_arg 679,12748
default_handler(693,12939
trap_handler(745,13738
trap_signm(809,15185
trap(841,15810
trap_ensure(876,16610
rb_trap_restore_mask(890,16846
sig_trap(933,18260
sig_list(980,19647
install_sighandler(992,19875
init_sigchld(1004,20107
ruby_sig_finalize(1046,20839
int ruby_enable_coredump 1058,21028
Init_signal(1099,22172

sprintf.c,1331
#define BIT_DIGITS(24,567
#define BITSPERDIG 25,638
#define EXTENDSIGN(26,683
remove_sign_bits(31,835
sign_bits(58,1172
#define FNONE 75,1396
#define FSHARP 76,1413
#define FMINUS 77,1430
#define FPLUS 78,1447
#define FZERO 79,1464
#define FSPACE 80,1481
#define FWIDTH 81,1499
#define FPREC 82,1517
#define FPREC0 83,1535
#define CHECK(85,1555
#define PUSH(93,1709
#define FILL(99,1812
#define GETARG(105,1915
#define GETPOSARG(112,2220
#define GETNTHARG(119,2541
#define GETNAMEARG(122,2650
#define GETNUM(128,2897
#define GETASTER(140,3218
get_hash(155,3453
rb_f_sprintf(419,15707
rb_str_format(425,15820
#define CHECK_FOR_WIDTH(442,16161
#define CHECK_FOR_FLAGS(449,16378
fmt_setup(1045,28392
#undef FILE1069,28927
#define FILE 1070,28939
#define __sbuf 1071,28969
#define __sFILE 1072,28999
#undef feof1073,29031
#undef ferror1074,29043
#undef clearerr1075,29057
#undef fileno1076,29073
#  define _HAVE_SANE_QUAD_1079,29157
#  define _HAVE_LLP64_1080,29184
#  define quad_t 1081,29207
#  define u_quad_t 1082,29234
#undef snprintf1085,29287
#define FLOATING_POINT 1086,29303
#define BSD__dtoa 1087,29328
ruby__sfvwrite(1091,29399
rb_enc_vsprintf(1117,30031
rb_enc_sprintf(1139,30603
rb_vsprintf(1152,30816
rb_sprintf(1158,30911
rb_str_vcatf(1171,31093
rb_str_catf(1194,31644

st.c,1679
typedef struct st_table_entry st_table_entry;18,338
struct st_table_entry 20,385
#define ST_DEFAULT_MAX_DENSITY 28,536
#define ST_DEFAULT_INIT_TABLE_SIZE 29,569
static const struct st_hash_type type_numhash 41,888
static const struct st_hash_type type_strhash 48,1060
static const struct st_hash_type type_strcasehash 54,1177
#define malloc 62,1316
#define calloc 63,1339
#define free(64,1362
#define alloc(67,1395
#define Calloc(68,1451
#define EQUAL(70,1495
#define do_hash(72,1573
#define do_hash_bin(73,1644
#define MINSIZE 79,1772
static const long primes[primes84,1837
new_size(117,2250
static int collision 144,2731
static int init_st 145,2757
stat_col(148,2794
#define MAX_PACKED_NUMHASH 156,2916
st_init_table_with_size(159,2956
st_init_table(185,3515
st_init_numtable(191,3622
st_init_numtable_with_size(197,3701
st_init_strtable(203,3810
st_init_strtable_with_size(209,3889
st_init_strcasetable(215,3998
st_init_strcasetable_with_size(221,4085
st_clear(227,4197
st_free_table(252,4616
#define PTR_NOT_EQUAL(259,4713
#define COLLISION 263,4861
#define COLLISION265,4897
#define FIND_ENTRY(268,4923
st_lookup(281,5252
st_get_key(310,5889
#define ADD_DIRECT(338,6523
unpack_entries(366,7228
st_insert(382,7751
st_add_direct(420,8770
rehash(443,9433
st_copy(466,10040
#define REMOVE_ENTRY(515,11162
st_delete(532,11660
st_delete_safe(571,12729
st_cleanup_safe(594,13281
st_foreach(615,13637
st_reverse_foreach(695,15818
#define FNV1_32A_INIT 844,20332
#define FNV_32_PRIME 849,20402
strhash(852,20446
st_strcasecmp(870,20803
st_strncasecmp(894,21394
strcasehash(919,22019
st_numcmp(938,22418
st_numhash(944,22482

strftime.c,1345
#define SYSV_EXT	69,1829
#define SUNOS_EXT	70,1889
#define POSIX2_DATE	71,1947
#define VMS_EXT	72,2010
#define MAILHEADER_EXT	73,2066
#define ISO_DATE_EXT	74,2120
#define POSIX_SEMANTICS	76,2193
#define POSIX2_DATE	81,2313
#define SYSV_EXT	87,2399
#define SUNOS_EXT	90,2450
#define adddecl(95,2510
#define adddecl(97,2545
#undef strchr	100,2576
#define const	103,2658
#define range(121,3046
#define DLL_IMPORT 124,3140
#define DLL_IMPORT127,3207
#undef min	142,3535
min(148,3646
#undef max	158,3745
max(164,3862
rb_strftime(181,4097
	enum {LEFT,LEFT207,4781
	enum {LEFT, CHCASE,207,4781
	enum {LEFT, CHCASE, LOWER,207,4781
	enum {LEFT, CHCASE, LOWER, UPPER,207,4781
	enum {LEFT, CHCASE, LOWER, UPPER, LOCALE_O,207,4781
	enum {LEFT, CHCASE, LOWER, UPPER, LOCALE_O, LOCALE_E}LOCALE_E207,4781
#define BIT_OF(208,4837
#define FLAG_FOUND(268,6232
#define NEEDS(272,6365
#define FILL_PADDING(273,6430
#define FMT(283,6660
#define STRFTIME(294,7015
isleap(812,18605
iso8601wknum(828,18855
weeknumber(946,21819
Date:         Wed,972,22254
Hi Arnold,976,22388
in a process of fixing of strftime(977,22399
How nicer it depends on a compiler,988,22817
How nicer it depends on a compiler, of course,988,22817
   Cheers,990,22888
#define		MAXTIME	1030,23452
static char *array[array1036,23509
main(1080,26040

string.c,8719
#define BEG(18,479
#define END(19,509
#undef rb_str_new_cstr28,627
#undef rb_tainted_str_new_cstr29,650
#undef rb_usascii_str_new_cstr30,681
#undef rb_external_str_new_cstr31,712
#undef rb_locale_str_new_cstr32,744
#undef rb_str_new233,774
#undef rb_str_new334,793
#undef rb_str_new435,812
#undef rb_str_new536,831
#undef rb_tainted_str_new237,850
#undef rb_usascii_str_new238,877
#undef rb_str_dup_frozen39,904
#undef rb_str_buf_new_cstr40,929
#undef rb_str_buf_new241,956
#undef rb_str_buf_cat242,979
#undef rb_str_cat243,1002
VALUE rb_cString;45,1022
VALUE rb_cSymbol;46,1040
#define RUBY_MAX_CHAR_LEN 48,1059
#define STR_TMPLOCK 49,1088
#define STR_NOEMBED 50,1117
#define STR_SHARED 51,1146
#define STR_ASSOC 52,1195
#define STR_SHARED_P(53,1224
#define STR_ASSOC_P(54,1283
#define STR_NOCAPA 55,1340
#define STR_NOCAPA_P(56,1396
#define STR_UNSET_NOCAPA(57,1480
#define STR_SET_NOEMBED(62,1606
#define STR_SET_EMBED(66,1716
#define STR_EMBED_P(67,1770
#define STR_SET_EMBED_LEN(68,1824
#define STR_SET_LEN(74,2016
#define STR_DEC_LEN(83,2184
#define RESIZE_CAPA(94,2379
#define is_ascii_string(112,2949
#define is_broken_string(113,3028
#define STR_ENC_GET(115,3111
single_byte_optimizable(118,3192
VALUE rb_fs;135,3565
search_nonascii(138,3606
# define NONASCII_MASK 141,3676
# define NONASCII_MASK 143,3744
coderange_scan(175,4462
rb_str_coderange_scan_restartable(224,5734
str_enc_copy(276,7102
rb_enc_cr_str_copy_for_substr(282,7204
rb_enc_cr_str_exact_copy(311,8040
rb_enc_str_coderange(318,8175
rb_enc_str_asciionly_p(331,8454
str_mod_check(343,8714
str_frozen_check(351,8895
rb_str_capacity(359,9010
str_alloc(373,9259
str_new(386,9477
rb_str_new(412,10041
rb_usascii_str_new(418,10132
rb_enc_str_new(426,10319
rb_str_new_cstr(434,10476
#define rb_str_new2 443,10698
RUBY_ALIAS_FUNCTION(rb_str_new2442,10624
#define rb_usascii_str_new2 454,11003
RUBY_ALIAS_FUNCTION(rb_usascii_str_new2453,10913
rb_tainted_str_new_cstr(466,11194
#define rb_tainted_str_new2 475,11401
RUBY_ALIAS_FUNCTION(rb_tainted_str_new2474,11311
rb_str_conv_enc(530,12753
rb_external_str_new_with_enc(536,12884
rb_external_str_new(551,13291
rb_external_str_new_cstr(557,13432
rb_locale_str_new(563,13576
rb_locale_str_new_cstr(569,13705
rb_str_export(575,13837
rb_str_export_locale(581,13956
rb_str_export_to_enc(587,14072
str_replace_shared(593,14196
str_new_shared(613,14717
str_new3(619,14828
rb_str_new_shared(625,14911
#define rb_str_new3 634,15111
RUBY_ALIAS_FUNCTION(rb_str_new3633,15041
rb_str_new_frozen(659,15687
#define rb_str_new4 697,16764
RUBY_ALIAS_FUNCTION(rb_str_new4696,16692
#define rb_str_new5 707,17038
#define STR_BUF_MIN_SIZE 709,17081
RUBY_ALIAS_FUNCTION(STR_BUF_MIN_SIZE705,16923
rb_str_buf_new_cstr(728,17447
#define rb_str_buf_new2 740,17698
RUBY_ALIAS_FUNCTION(rb_str_buf_new2739,17616
rb_str_free(749,17815
rb_str_to_str(757,17941
rb_str_shared_replace(763,18039
static ID id_to_s;801,19182
rb_obj_as_string(804,19208
str_duplicate(819,19476
rb_str_dup(827,19605
rb_str_init(841,19827
rb_enc_strlen(851,20008
rb_enc_strlen_cr(882,20710
#define is_utf8_lead_byte(935,21791
count_utf8_lead_bytes_with_word(937,21861
str_strlen(953,22113
rb_str_length(1004,23243
rb_str_bytesize(1020,23476
rb_str_empty(1036,23764
rb_str_plus(1054,24106
rb_str_times(1085,24939
rb_str_format_m(1130,26263
str_modifiable(1141,26508
str_independent(1152,26840
str_make_independent(1161,26997
rb_str_modify(1179,27378
str_modify_keep_cr(1188,27561
rb_str_associate(1198,27766
rb_str_associated(1229,28529
rb_string_value(1239,28731
rb_string_value_ptr(1255,28948
rb_string_value_cstr(1262,29068
rb_check_string_type(1274,29313
rb_str_s_try_convert(1292,29770
rb_enc_nth(1298,29864
str_nth(1339,30851
str_offset(1353,31128
rb_str_offset(1361,31326
str_utf8_nth(1369,31521
str_utf8_offset(1397,32119
rb_str_sublen(1407,32316
rb_str_subseq(1418,32537
rb_str_substr(1438,32961
rb_str_freeze(1530,35081
#define rb_str_dup_frozen 1540,35317
RUBY_ALIAS_FUNCTION(rb_str_dup_frozen1539,35241
rb_str_unlocktmp(1553,35565
rb_str_set_len(1563,35770
rb_str_resize(1570,35878
str_buf_cat(1615,37012
rb_str_buf_cat(1659,38063
rb_str_buf_cat2(1669,38288
rb_str_cat(1675,38393
rb_str_cat2(1694,38970
rb_enc_cr_str_buf_cat(1700,39074
rb_enc_str_buf_cat(1787,41842
rb_str_buf_cat_ascii(1794,42044
rb_str_buf_append(1818,42782
rb_str_append(1834,43088
rb_str_concat(1876,44330
#define UNALIGNED_WORD_ACCESS 1894,44801
#define UNALIGNED_WORD_ACCESS 1897,44870
hash(1902,44995
rb_memhash(2022,46924
rb_str_hash(2036,47176
rb_str_hash_cmp(2046,47376
rb_str_hash_m(2066,47756
#define lesser(2072,47845
rb_str_comparable(2075,47890
rb_str_cmp(2100,48535
rb_str_equal(2134,49316
rb_str_eql(2161,49906
rb_str_cmp_m(2198,51271
rb_str_casecmp(2238,52137
rb_str_index(2296,53789
rb_str_index_m(2357,55458
rb_str_rindex(2412,56551
rb_str_rindex_m(2469,58041
rb_str_match(2540,59730
rb_str_match_m(2587,60870
enum neighbor_char 2601,61245
    NEIGHBOR_NOT_CHAR,2602,61266
    NEIGHBOR_FOUND,2603,61289
    NEIGHBOR_WRAPPED2604,61309
enc_succ_char(2608,61360
enc_pred_char(2640,62283
enc_succ_alnum_char(2681,63541
rb_str_succ(2763,65993
rb_str_succ_bang(2846,68361
rb_str_upto(2876,69156
rb_str_subpat(2923,70387
rb_str_aref(2932,70566
rb_str_aref_m(3025,73619
rb_str_drop_bytes(3040,74003
rb_str_splice_0(3068,74698
rb_str_splice(3101,75584
rb_str_update(3144,76746
rb_str_subpat_set(3150,76858
rb_str_aset(3186,77705
rb_str_aset_m(3249,79636
rb_str_insert(3284,80670
rb_str_slice_bang(3319,81554
get_pat(3341,82023
rb_str_sub_bang(3379,82685
rb_str_sub(3507,87181
str_gsub(3515,87325
rb_str_gsub_bang(3637,90503
rb_str_gsub(3677,92306
rb_str_replace(3695,92668
rb_str_clear(3736,93514
rb_str_chr(3763,94122
rb_str_getbyte(3775,94321
rb_str_setbyte(3794,94700
rb_str_reverse(3821,95278
rb_str_reverse_bang(3875,96307
rb_str_include(3911,96983
rb_str_to_i(3945,97932
rb_str_to_f(3978,98737
rb_str_to_s(3993,98934
str_cat_char(4002,99079
prefix_escape(4012,99292
rb_str_inspect(4031,99669
#define IS_EVSTR(4113,101617
rb_str_dump(4124,101909
rb_str_check_dummy_enc(4257,104509
rb_str_upcase_bang(4275,104926
rb_str_upcase(4339,106347
rb_str_downcase_bang(4357,106687
rb_str_downcase(4421,108114
rb_str_capitalize_bang(4444,108645
rb_str_capitalize(4491,109779
rb_str_swapcase_bang(4509,110183
rb_str_swapcase(4553,111304
typedef unsigned char *USTR;USTR4560,111410
struct tr 4562,111440
trnext(4569,111537
tr_trans(4604,112263
#define CHECK_IF_ASCII(4618,112626
rb_str_tr_bang(4855,117690
rb_str_tr(4879,118481
tr_setup_table(4887,118618
tr_find(4943,119721
rb_str_delete_bang(4969,120257
rb_str_delete(5048,122081
rb_str_squeeze_bang(5065,122421
rb_str_squeeze(5156,124658
rb_str_tr_s_bang(5173,125033
rb_str_tr_s(5193,125529
rb_str_count(5218,126208
rb_str_split_m(5312,129324
    enum {awk,awk5317,129430
    enum {awk, string,5317,129430
    enum {awk, string, regexp}regexp5317,129430
rb_str_split(5498,133873
rb_str_each_line(5554,135313
rb_str_each_byte(5679,138081
rb_str_each_char(5718,138899
rb_str_each_codepoint(5767,140198
chopped_length(5791,140705
rb_str_chop_bang(5818,141414
rb_str_chop(5850,142265
rb_str_chomp_bang(5868,142700
rb_str_chomp(5987,145655
rb_str_lstrip_bang(6007,146127
rb_str_lstrip(6047,147031
rb_str_rstrip_bang(6068,147472
rb_str_rstrip(6117,148570
rb_str_strip_bang(6134,148868
rb_str_strip(6155,149286
scan_once(6163,149399
rb_str_scan(6232,151338
rb_str_hex(6278,152404
rb_str_oct(6304,153019
rb_str_crypt(6326,153592
rb_str_intern(6378,154974
rb_str_ord(6413,155621
rb_str_sum(6432,156164
rb_str_justify(6482,157157
rb_str_ljust(6581,159592
rb_str_rjust(6601,160189
rb_str_center(6621,160770
rb_str_partition(6642,161420
rb_str_rpartition(6692,162781
rb_str_start_with(6732,163701
rb_str_end_with(6755,164213
rb_str_setter(6778,164758
rb_str_force_encoding(6795,165090
rb_str_valid_encoding_p(6815,165590
rb_str_is_ascii_only_p(6833,165995
sym_equal(6883,167376
patern_equal(6889,167482
sym_printable(6902,167698
sym_inspect(6923,168124
rb_sym_to_s(6956,168869
sym_to_sym(6975,169239
sym_call(6981,169295
sym_to_proc(7002,169697
sym_succ(7009,169793
sym_cmp(7015,169888
sym_casecmp(7024,170049
sym_match(7033,170216
sym_aref(7039,170318
sym_length(7045,170435
sym_empty(7051,170525
sym_upcase(7057,170613
sym_downcase(7063,170718
sym_capitalize(7069,170827
sym_swapcase(7075,170940
sym_encoding(7081,171049
rb_to_id(7087,171133
Init_String(7125,172144
#undef rb_intern7127,172164
#define rb_intern(7128,172181

struct.c,1479
VALUE rb_cStruct;14,293
rb_struct_iv_get(19,353
rb_struct_s_members(34,600
rb_struct_members(48,895
rb_struct_s_members_m(60,1188
rb_struct_members_m(89,1836
rb_struct_getmember(95,1931
rb_struct_ref(112,2313
static VALUE rb_struct_ref0(117,2402
static VALUE rb_struct_ref1(118,2471
static VALUE rb_struct_ref2(119,2540
static VALUE rb_struct_ref3(120,2609
static VALUE rb_struct_ref4(121,2678
static VALUE rb_struct_ref5(122,2747
static VALUE rb_struct_ref6(123,2816
static VALUE rb_struct_ref7(124,2885
static VALUE rb_struct_ref8(125,2954
static VALUE rb_struct_ref9(126,3023
#define N_REF_FUNC 128,3093
rb_struct_modify(144,3414
rb_struct_set(152,3628
make_struct(171,4115
rb_struct_alloc_noinit(219,5512
rb_struct_define_without_accessor(225,5591
rb_struct_define(262,6397
rb_struct_s_def(317,8465
num_members(342,8980
rb_struct_initialize_m(356,9222
rb_struct_initialize(374,9612
struct_alloc(380,9758
rb_struct_alloc(403,10235
rb_struct_new(409,10370
rb_struct_each(445,11127
rb_struct_each_pair(475,11829
inspect_struct(489,12101
rb_struct_inspect(539,13088
rb_struct_to_a(557,13510
rb_struct_init_copy(564,13615
rb_struct_aref_id(580,14040
rb_struct_aref(616,15038
rb_struct_aset_id(636,15552
rb_struct_aset(679,16755
struct_entry(702,17332
rb_struct_values_at(724,17860
rb_struct_select(744,18453
rb_struct_equal(780,19517
rb_struct_hash(805,20071
rb_struct_eql(828,20519
rb_struct_size(858,21258
Init_Struct(879,22012

thread.c,7458
#define USE_NATIVE_THREAD_PRIORITY 51,1446
#define RUBY_THREAD_PRIORITY_MAX 52,1483
#define RUBY_THREAD_PRIORITY_MIN 53,1518
#define THREAD_DEBUG 57,1583
VALUE rb_cMutex;60,1614
VALUE rb_cBarrier;61,1631
static const VALUE eKillSignal 77,2161
static const VALUE eTerminateSignal 78,2206
static volatile int system_working 79,2256
st_delete_wrap(82,2316
#define THREAD_SYSTEM_DEPENDENT_IMPLEMENTATION89,2483
struct rb_blocking_region_buffer 91,2531
#define GVL_UNLOCK_BEGIN(104,3117
#define GVL_UNLOCK_END(109,3295
#define BLOCKING_REGION_CORE(114,3429
#define BLOCKING_REGION(121,3556
#define thread_debug(133,3965
#define POSITION_FORMAT 134,4052
#define POSITION_ARGS 135,4085
#define thread_debug 138,4169
#define POSITION_FORMAT139,4206
#define POSITION_ARGS140,4230
static int rb_thread_debug_enabled;144,4282
rb_thread_s_debug(147,4332
rb_thread_s_debug_set(153,4419
# define rb_thread_debug_enabled 159,4533
#define thread_debug 162,4593
#define thread_start_func_2(166,4649
#define DEBUG_OUT(175,4931
#define DEBUG_OUT(184,5191
static int debug_mutex_initialized 195,5465
static rb_thread_lock_t debug_mutex;196,5505
rb_thread_debug(199,5548
set_unblock_function(225,5982
reset_unblock_function(244,6466
rb_thread_interrupt(252,6676
terminate_i(267,6952
typedef struct rb_mutex_struct285,7381
} mutex_t;292,7596
rb_thread_terminate_all(297,7680
thread_cleanup_func_before_exec(328,8427
thread_cleanup_func(339,8705
ruby_thread_init_stack(357,9149
thread_start_func_2(363,9239
thread_create_core(477,12240
thread_s_new(503,12967
thread_start(527,13687
thread_initialize(533,13807
rb_thread_create(559,14602
#define DELAY_INFTY 566,14765
struct join_arg 568,14791
remove_from_join_list(575,14896
thread_join_sleep(596,15298
thread_join(622,15924
thread_join_m(705,18151
thread_value(733,18682
double2timeval(746,18868
sleep_forever(760,19106
getclockofday(780,19562
sleep_timeval(796,19871
rb_thread_sleep_forever(828,20726
rb_thread_sleep_deadly(835,20852
timeofday(842,20978
sleep_wait_for_interrupt(859,21362
sleep_for_polling(865,21487
rb_thread_wait_for(874,21652
rb_thread_polling(881,21767
rb_thread_check_ints(898,22129
rb_thread_check_trap_pending(908,22275
rb_thread_interrupted(915,22416
rb_thread_sleep(925,22587
rb_thread_schedule(931,22677
blocking_region_begin(955,23176
blocking_region_end(968,23647
rb_thread_blocking_region_begin(982,24108
rb_thread_blocking_region_end(991,24354
rb_thread_blocking_region(1035,26064
rb_thread_call_without_gvl(1057,26465
rb_thread_call_with_gvl(1097,27904
ruby_thread_has_gvl_p(1139,29063
thread_s_pass(1172,29714
rb_thread_execute_interrupts(1183,29805
rb_gc_mark_threads(1249,31173
rb_thread_ready(1257,31295
rb_thread_raise(1263,31375
rb_thread_signal_raise(1284,31727
rb_thread_signal_exit(1295,31936
#define USE_SIGALTSTACK1306,32216
ruby_thread_stack_overflow(1310,32253
rb_thread_set_raised(1323,32492
rb_thread_reset_raised(1333,32657
rb_thread_fd_close(1343,32829
thread_raise_m(1368,33339
rb_thread_kill(1390,33883
rb_thread_s_kill(1431,34781
rb_thread_exit(1448,35185
rb_thread_wakeup(1470,35588
rb_thread_run(1506,36196
rb_thread_stop(1533,36655
thread_list_i(1544,36864
rb_thread_list(1585,37789
rb_thread_current(1593,37937
thread_s_current(1608,38169
rb_thread_main(1614,38242
rb_thread_s_main(1620,38329
rb_thread_s_abort_exc(1639,38932
rb_thread_s_abort_exc_set(1670,39641
rb_thread_abort_exc(1688,40065
rb_thread_abort_exc_set(1706,40496
rb_thread_group(1728,40927
thread_status_name(1742,41133
rb_thread_dead(1760,41471
rb_thread_status(1789,42403
rb_thread_alive_p(1818,43008
rb_thread_stop_p(1841,43418
rb_thread_safe_level(1866,44016
rb_thread_inspect(1882,44265
rb_thread_local_aref(1898,44608
rb_thread_aref(1938,45678
rb_thread_local_aset(1944,45783
rb_thread_aset(1975,46535
rb_thread_key_p(1994,46950
thread_keys_i(2011,47222
vm_living_thread_num(2018,47343
rb_thread_alone(2024,47430
rb_thread_keys(2049,47982
rb_thread_priority(2074,48539
rb_thread_priority_set(2105,49166
rb_fd_init(2162,50841
rb_fd_term(2170,50965
rb_fd_zero(2178,51082
rb_fd_resize(2187,51238
rb_fd_set(2203,51647
rb_fd_clr(2210,51744
rb_fd_isset(2217,51847
rb_fd_copy(2224,52012
rb_fd_select(2235,52289
#undef FD_ZERO2253,52783
#undef FD_SET2254,52798
#undef FD_CLR2255,52812
#undef FD_ISSET2256,52826
#define FD_ZERO(2258,52843
#define FD_SET(2259,52876
#define FD_CLR(2260,52913
#define FD_ISSET(2261,52950
rb_fd_init(2266,53020
rb_fd_term(2274,53152
rb_fd_set(2282,53255
#undef FD_ZERO2299,53745
#undef FD_SET2300,53760
#undef FD_CLR2301,53774
#undef FD_ISSET2302,53788
#define FD_ZERO(2304,53805
#define FD_SET(2305,53838
#define FD_CLR(2306,53875
#define FD_ISSET(2307,53912
cmp_tv(2313,54017
subtract_tv(2320,54181
do_select(2336,54506
rb_thread_wait_fd_rw(2440,56988
rb_thread_wait_fd(2472,57624
rb_thread_fd_writable(2478,57692
rb_thread_select(2485,57782
rb_gc_set_stack_end(2508,58171
rb_gc_save_machine_context(2516,58281
timer_thread_function(2533,58566
rb_thread_reset_timer_thread(2576,59534
rb_thread_start_timer_thread(2582,59604
clear_coverage_i(2589,59716
clear_coverage(2603,59995
rb_thread_atfork_internal(2613,60206
terminate_atfork_i(2628,60617
rb_thread_atfork(2641,60871
terminate_atfork_before_exec_i(2648,60989
rb_thread_atfork_before_exec(2661,61267
struct thgroup 2666,61370
thgroup_s_alloc(2685,61882
struct thgroup_list_params 2697,62094
thgroup_list_i(2703,62170
thgroup_list(2728,62762
thgroup_enclose(2759,63593
thgroup_enclosed_p(2779,63923
thgroup_add(2817,64874
#define GetMutexPtr(2876,66102
mutex_free(2882,66262
mutex_alloc(2898,66590
mutex_initialize(2916,66924
rb_mutex_new(2922,66981
rb_mutex_locked_p(2934,67172
mutex_locked(2942,67308
rb_mutex_trylock(2961,67685
lock_func(2980,68016
lock_interrupt(3016,68725
rb_mutex_lock(3036,69214
mutex_unlock(3090,70492
rb_mutex_unlock(3145,71610
rb_mutex_unlock_all(3158,71841
rb_mutex_sleep_forever(3174,72202
rb_mutex_wait_for(3181,72302
rb_mutex_sleep(3189,72442
mutex_sleep(3218,73123
rb_mutex_synchronize(3235,73489
barrier_alloc(3245,73695
rb_barrier_new(3251,73808
rb_barrier_wait(3259,73953
rb_barrier_release(3274,74265
rb_barrier_destroy(3280,74358
static ID recursive_key;3288,74535
recursive_check(3291,74574
recursive_push(3321,75219
recursive_pop(3357,76143
exec_recursive(3394,77352
rb_exec_recursive(3420,77938
rb_exec_recursive_paired(3426,78070
alloc_event_hook(3434,78280
thread_reset_event_flags(3444,78517
rb_thread_add_event_hook(3456,78741
set_threads_event_flags_i(3466,79028
set_threads_event_flags(3482,79327
exec_event_hooks(3488,79472
rb_threadptr_exec_event_hooks(3498,79710
rb_add_event_hook(3514,80191
remove_event_hook(3526,80478
rb_thread_remove_event_hook(3550,80869
rb_remove_event_hook(3558,81057
clear_trace_func_i(3572,81355
rb_clear_trace_func(3581,81549
set_trace_func(3633,83379
get_event_name(3650,83711
struct call_trace_func_args 3676,84265
call_trace_proc(3685,84399
call_trace_func(3726,85482
ruby_suppress_tracing(3739,85791
Init_Thread(3782,86668
#undef rb_intern3784,86688
#define rb_intern(3785,86705
ruby_native_thread_p(3879,91022
check_deadlock_i(3887,91147
debug_i(3912,91737
rb_check_deadlock(3934,92237
update_coverage(3956,92889
rb_get_coverages(3973,93341
rb_set_coverages(3979,93406
rb_reset_coverages(3986,93554

thread_pthread.c,2368
native_mutex_lock(33,965
native_mutex_unlock(42,1125
native_mutex_trylock(51,1312
native_mutex_initialize(66,1566
native_mutex_destroy(75,1754
native_cond_initialize(84,1936
native_cond_destroy(93,2120
native_cond_signal(102,2298
native_cond_broadcast(108,2387
native_cond_wait(114,2482
native_cond_timedwait(120,2597
#define native_cleanup_push 126,2744
#define native_cleanup_pop 127,2793
#define native_thread_yield(129,2865
#define native_thread_yield(131,2921
static rb_thread_lock_t signal_thread_list_lock;139,3105
static pthread_key_t ruby_native_thread_key;141,3155
null_func(144,3213
ruby_thread_from_native(150,3271
ruby_thread_set_native(156,3373
Init_native_thread(162,3495
native_thread_destroy(175,3856
#define USE_THREAD_CACHE 181,4010
#define STACK_GROW_DIR_DETECTION184,4063
#define STACK_DIR_UPPER(185,4096
#define STACK_GROW_DIR_DETECTION 187,4152
#define STACK_DIR_UPPER(188,4216
#define STACKADDR_AVAILABLE 192,4370
#define STACKADDR_AVAILABLE 194,4485
#define STACKADDR_AVAILABLE 196,4585
get_stack(201,4661
#define CHECK_ERR(203,4700
#undef CHECK_ERR248,6250
} native_main_thread;259,6420
#undef ruby_init_stack265,6508
ruby_init_stack(267,6536
#define CHECK_ERR(304,7494
native_thread_init_stack(308,7603
thread_start_func_1(341,8708
struct cached_thread_entry 370,9265
static pthread_mutex_t thread_cache_lock 378,9420
struct cached_thread_entry *cached_thread_root;cached_thread_root379,9490
register_cached_thread_and_wait(382,9560
use_cached_thread(433,10679
native_thread_create(459,11161
native_thread_join(513,12647
native_thread_apply_priority(525,12855
ubf_pthread_cond_signal(553,13502
ubf_select_each(562,13740
ubf_select(571,13918
#define ubf_select 578,14049
#define PER_NANO 581,14078
native_sleep(584,14119
struct signal_thread_list 640,15689
static struct signal_thread_list signal_thread_list_anchor 647,15835
#define FGLOCK(652,15922
print_signal_list(662,16092
add_signal_thread_list(677,16404
remove_signal_thread_list(704,17031
static pthread_t timer_thread_id;726,17521
static pthread_cond_t timer_thread_cond 727,17555
static pthread_mutex_t timer_thread_lock 728,17623
get_ts(731,17719
thread_timer(745,18004
#define WAIT_FOR_10MS(751,18147
rb_thread_create_timer_thread(779,18866
native_stop_timer_thread(805,19574
ruby_stack_overflowed_p(819,19866

thread_pthread.h,255
#define RUBY_THREAD_PTHREAD_H12,258
typedef pthread_t rb_thread_id_t;15,310
typedef pthread_mutex_t rb_thread_lock_t;16,344
typedef pthread_cond_t rb_thread_cond_t;17,386
typedef struct native_thread_data_struct 19,428
} native_thread_data_t;22,532

thread_win32.c,1729
#define WIN32_WAIT_TIMEOUT 16,310
#undef Sleep17,352
#define native_thread_yield(19,366
#define remove_signal_thread_list(20,405
static volatile DWORD ruby_native_thread_key 22,444
ruby_thread_from_native(36,1058
ruby_thread_set_native(42,1152
Init_native_thread(48,1261
w32_error(67,1785
w32_set_event(81,2105
w32_reset_event(89,2204
w32_wait_events(97,2306
#define ubf_select 137,3440
rb_w32_wait_events_blocking(140,3475
rb_w32_wait_events(146,3616
w32_close_handle(156,3832
w32_resume_thread(164,3937
#define HAVE__BEGINTHREADEX 172,4049
#undef HAVE__BEGINTHREADEX174,4085
#define start_thread 178,4147
typedef unsigned long 179,4191
#define start_thread 181,4261
typedef LPTHREAD_START_ROUTINE w32_thread_start_func;182,4295
w32_create_thread(186,4371
rb_w32_sleep(192,4527
rb_w32_Sleep(198,4630
native_sleep(208,4789
native_mutex_lock(246,5557
native_mutex_unlock(282,6383
native_mutex_trylock(294,6602
native_mutex_initialize(314,7049
native_mutex_destroy(328,7330
struct cond_event_entry 337,7474
struct rb_thread_cond_struct 342,7557
native_cond_signal(348,7674
native_cond_broadcast(363,7946
native_cond_wait(376,8167
native_cond_initialize(407,8804
native_cond_destroy(414,8908
ruby_init_stack(420,8972
#define CHECK_ERR(424,9006
native_thread_init_stack(428,9114
native_thread_destroy(446,9570
thread_start_func_1(456,9903
native_thread_create(476,10456
native_thread_join(498,11037
native_thread_apply_priority(506,11151
ubf_handle(525,11547
    typedef BOOL (WINAPI 527,11571
static HANDLE timer_thread_id 534,11771
static HANDLE timer_thread_lock;535,11806
timer_thread_func(538,11870
rb_thread_create_timer_thread(550,12134
native_stop_timer_thread(563,12453

thread_win32.h,287
#define RUBY_THREAD_WIN32_H13,269
# undef _WIN3218,339
typedef HANDLE rb_thread_id_t;24,457
typedef CRITICAL_SECTION rb_thread_lock_t;25,488
typedef struct rb_thread_cond_struct rb_thread_cond_t;26,531
typedef struct native_thread_data_struct 28,587
} native_thread_data_t;30,658

time.c,2559
VALUE rb_cTime;24,446
static ID id_divmod,27,504
static ID id_divmod, id_mul,27,504
static ID id_divmod, id_mul, id_submicro;27,504
struct time_object 29,547
#define GetTimeval(36,643
time_free(40,739
time_s_alloc(46,806
time_modify(60,1058
time_init(92,1926
#define NDIV(119,2472
#define NMOD(120,2510
time_overflow_p(123,2564
time_new_internal(153,3285
rb_time_new(167,3555
rb_time_nano_new(173,3659
time_timespec(179,3778
time_timeval(248,5529
rb_time_interval(261,5753
rb_time_timeval(267,5838
rb_time_timespec(282,6169
time_s_at(317,7322
static const char months[months340,7875
obj2long(346,8017
obj2nsec(356,8160
obj2long1000(372,8441
time_arg(383,8663
#define IF_HAVE_GMTIME_R(487,11015
#define ASCTIME(488,11045
#define GMTIME(489,11089
#define LOCALTIME(490,11138
#define IF_HAVE_GMTIME_R(492,11209
#define ASCTIME(493,11252
#define GMTIME(494,11289
#define LOCALTIME(495,11327
leap_year_p(499,11390
#define DIV(504,11478
timegm_noleapsecond(507,11544
tmcmp(562,13249
typedef unsigned long unsigned_time_t;581,13817
typedef unsigned int unsigned_time_t;583,13890
typedef unsigned LONG_LONG unsigned_time_t;585,13968
search_time_t(591,14103
#define GUESS(598,14299
make_time_t(846,20830
time_utc_or_local(895,21911
time_s_mkutc(940,23822
time_s_mktime(971,25015
time_to_i(990,25429
time_to_f(1014,25936
time_usec(1035,26405
time_nsec(1061,27043
time_cmp(1090,27792
time_eql(1129,28752
time_utc_p(1163,29792
time_hash(1180,30039
time_init_copy(1192,30241
time_dup(1209,30640
time_localtime(1230,31224
time_gmtime(1274,32202
time_getlocaltime(1314,33174
time_getgmtime(1335,33742
time_get_tm(1341,33827
time_asctime(1358,34164
time_to_s(1399,35271
time_add(1421,35751
time_plus(1473,37025
time_minus(1500,37774
time_succ(1532,38615
rb_time_succ(1546,38875
time_sec(1565,39366
time_min(1587,39769
time_hour(1609,40169
time_mday(1633,40628
time_mon(1657,41091
time_year(1679,41501
time_wday(1709,42166
#define wday_p(1720,42356
time_sunday(1740,42833
time_monday(1756,43140
time_tuesday(1772,43449
time_wednesday(1788,43763
time_thursday(1804,44077
time_friday(1820,44386
time_saturday(1836,44697
time_yday(1852,44965
time_isdst(1889,45989
time_zone(1914,46538
time_utc_offset(1957,47653
time_to_a(2014,49143
#define SMALLBUF 2035,49661
rb_strftime_alloc(2037,49693
time_strftime(2117,52681
time_mdump(2173,54024
time_dump(2245,55749
time_mload(2260,55937
time_load(2353,58051
Init_Time(2380,59060
#undef rb_intern2382,59078
#define rb_intern(2383,59095

transcode.c,5832
VALUE rb_eUndefinedConversionError;18,428
VALUE rb_eInvalidByteSequenceError;19,464
VALUE rb_eConverterNotFoundError;20,500
VALUE rb_cEncodingConverter;22,535
static VALUE sym_invalid,24,565
static VALUE sym_invalid, sym_undef,24,565
static VALUE sym_invalid, sym_undef, sym_replace;24,565
static VALUE sym_xml,25,615
static VALUE sym_xml, sym_text,25,615
static VALUE sym_xml, sym_text, sym_attr;25,615
static VALUE sym_universal_newline;26,657
static VALUE sym_crlf_newline;27,693
static VALUE sym_cr_newline;28,724
static VALUE sym_partial_input;29,753
static VALUE sym_invalid_byte_sequence;31,786
static VALUE sym_undefined_conversion;32,826
static VALUE sym_destination_buffer_full;33,865
static VALUE sym_source_buffer_empty;34,907
static VALUE sym_finished;35,945
static VALUE sym_after_output;36,972
static VALUE sym_incomplete_input;37,1003
typedef struct rb_transcoding 47,1390
    union rb_transcoding_state_t 72,2082
} rb_transcoding;76,2225
#define TRANSCODING_READBUF(77,2243
#define TRANSCODING_WRITEBUF(81,2394
#define TRANSCODING_WRITEBUF_SIZE(85,2550
#define TRANSCODING_STATE_EMBED_MAX 89,2729
#define TRANSCODING_STATE(90,2802
} rb_econv_elem_t;102,3165
struct rb_econv_t 104,3185
#define DECORATOR_P(147,4245
} transcoder_entry_t;154,4469
static st_table *transcoder_table;transcoder_table156,4492
make_transcoder_entry(159,4556
get_transcoder_entry(182,5272
rb_register_transcoder(198,5623
declare_transcoder(215,6028
#define MAX_TRANSCODER_LIBNAME_LEN 223,6210
static const char transcoder_lib_prefix[transcoder_lib_prefix224,6248
rb_declare_transcoder(227,6312
#define encoding_equal(236,6578
typedef struct search_path_queue_tag 238,6644
} search_path_queue_t;241,6744
} search_path_bfs_t;248,6908
transcode_search_path_i(251,6941
transcode_search_path(272,7491
load_transcoder_entry(357,9562
get_replacement_character(384,10261
transcode_char_start(403,10666
transcode_restartable0(423,11356
#define SUSPEND(442,11865
#define SUSPEND_OBUF(458,12440
#define SUSPEND_AFTER_OUTPUT(463,12584
#define next_table 468,12732
#define next_info 469,12768
#define next_byte 470,12802
#define writebuf_len 471,12836
#define writebuf_off 472,12876
#define BYTE_ADDR(524,14446
#define WORD_ADDR(525,14498
#define BL_BASE 526,14564
#define BL_INFO 527,14631
#define BL_MIN_BYTE 528,14698
#define BL_MAX_BYTE 529,14735
#define BL_OFFSET(530,14772
#define BL_ACTION(531,14828
#undef SUSPEND700,21315
#undef next_table701,21330
#undef next_info702,21348
#undef next_byte703,21365
#undef writebuf_len704,21382
#undef writebuf_off705,21402
transcode_restartable(709,21450
rb_transcoding_open_by_transcoder(735,22672
rb_transcoding_convert(762,23470
rb_transcoding_close(774,23811
rb_econv_alloc(790,24304
rb_econv_add_transcoder_at(828,25354
rb_econv_open_by_transcoder_entries(867,26462
struct trans_open_t 893,27044
trans_open_i(899,27140
rb_econv_open0(910,27461
#define MAX_ECFLAGS_DECORATORS 963,28657
decorator_names(966,28703
rb_econv_open(1002,29922
trans_sweep(1029,30577
rb_trans_conv(1110,33063
rb_econv_convert0(1201,35840
output_hex_charref(1325,40570
rb_econv_convert(1381,41977
rb_econv_encoding_to_insert_output(1438,43487
allocate_converted_string(1454,43815
rb_econv_insert_output(1522,45552
rb_econv_close(1637,49142
rb_econv_putbackable(1655,49529
rb_econv_putback(1663,49665
struct asciicompat_encoding_t 1673,49948
asciicompat_encoding_i(1679,50067
rb_econv_asciicompat_encoding(1696,50605
rb_econv_substr_append(1723,51348
rb_econv_str_append(1767,52725
rb_econv_substr_convert(1773,52882
rb_econv_str_convert(1779,53060
rb_econv_add_converter(1785,53213
rb_econv_decorate_at(1803,53594
rb_econv_decorate_at_first(1809,53737
rb_econv_decorate_at_last(1826,54205
rb_econv_binmode(1843,54713
econv_description(1890,56020
rb_econv_open_exc(1950,57979
make_econv_exception(1961,58298
more_output_buffer(2038,61736
make_replacement(2054,62238
rb_econv_set_replacement(2089,63041
output_replacement_character(2121,63874
transcode_loop(2137,64166
transcode_loop(2182,65573
str_transcoding_resize(2258,67797
econv_opts(2265,67972
rb_econv_prepare_opts(2322,69455
rb_econv_open_opts(2355,70202
enc_arg(2390,71143
str_transcode_enc_args(2414,71565
str_transcode0(2441,72194
str_transcode(2519,74463
str_encode_associate(2536,74882
str_encode_bang(2568,75758
str_encode(2628,78288
rb_str_encode(2644,78634
econv_free(2657,78990
econv_s_allocate(2663,79059
make_dummy_encoding(2669,79175
make_encoding(2679,79366
make_encobj(2689,79538
econv_s_asciicompat_encoding(2713,80442
econv_args(2731,80835
decorate_convpath(2789,82256
search_convpath_i(2828,83367
econv_s_search_convpath(2868,84651
rb_econv_has_convpath_p(2897,85435
struct rb_econv_init_by_convpath_t 2905,85661
void rb_econv_init_by_convpath_i(2911,85750
rb_econv_init_by_convpath(2926,86104
econv_init(3097,92638
econv_inspect(3151,93964
#define IS_ECONV(3169,94452
check_econv(3172,94545
econv_source_encoding(3192,95030
econv_destination_encoding(3207,95351
econv_convpath(3238,96250
econv_result_to_symbol(3258,96788
econv_primitive_convert(3364,101257
econv_convert(3506,105877
econv_finish(3556,107007
econv_primitive_errinfo(3664,110783
econv_insert_output(3722,112997
econv_putback(3767,114419
econv_last_error(3816,115838
econv_get_replacement(3840,116304
econv_set_replacement(3866,116962
rb_econv_make_exception(3890,117513
rb_econv_check_error(3896,117600
ecerr_source_encoding_name(3913,117888
ecerr_source_encoding(3939,118752
ecerr_destination_encoding_name(3951,118996
ecerr_destination_encoding(3963,119260
ecerr_error_char(3984,119782
ecerr_error_bytes(4005,120383
ecerr_readagain_bytes(4017,120641
ecerr_incomplete_input(4047,121451
Init_transcode(4055,121590

transcode_data.h,1291
#define RUBY_TRANSCODE_DATA_H 15,326
#define WORDINDEX_SHIFT_BITS 17,359
#define WORDINDEX2INFO(18,390
#define INFO2WORDINDEX(19,457
#define BYTE_LOOKUP_BASE(20,524
#define BYTE_LOOKUP_INFO(21,563
#define PType 23,603
#define NOMAP	25,633
#define ONEbt	26,689
#define TWObt	27,734
#define THREEbt	28,780
#define FOURbt	29,830
#define INVALID	30,914
#define UNDEF	31,971
#define ZERObt	32,1024
#define FUNii	33,1093
#define FUNsi	34,1153
#define FUNio	35,1214
#define FUNso	36,1276
#define STR1	37,1339
#define GB4bt	38,1424
#define STR1_LENGTH(40,1485
#define STR1_BYTEINDEX(41,1535
#define makeSTR1(42,1572
#define makeSTR1LEN(43,1614
#define o1(45,1650
#define o2(46,1708
#define o3(47,1796
#define o4(48,1931
#define g4(49,2102
#define getBT1(51,2281
#define getBT2(52,2316
#define getBT3(53,2351
#define getBT0(54,2386
#define getGB4bt0(56,2455
#define getGB4bt1(57,2493
#define getGB4bt2(58,2536
#define getGB4bt3(59,2574
#define o2FUNii(61,2618
#define ONETRAIL 64,2780
#define TWOTRAIL 65,2856
#define THREETRAIL 66,2932
  asciicompat_converter,69,3026
  asciicompat_decoder,70,3101
  asciicompat_encoder 71,3178
} rb_transcoder_asciicompat_type_t;73,3331
typedef struct rb_transcoder rb_transcoder;75,3368
struct rb_transcoder 78,3469

util.c,7171
#define _open 24,459
#define _close 25,478
#define _unlink 26,499
#define _access 27,522
ruby_scan_oct(35,629
ruby_scan_hex(49,913
scan_digits(66,1319
ruby_strtoul(113,3077
#   define S_ISDIR(191,4456
static const char suffix1[suffix1266,7004
static const char suffix2[suffix2267,7042
#define ext 269,7081
#define strEQ(271,7107
ruby_add_suffix(274,7155
valid_filename(340,8772
#define A 365,9163
#define B 366,9183
#define C 367,9203
#define D 368,9223
#define mmprepare(370,9244
#define mmarg 379,9475
static void mmswap_(381,9514
#define mmswap(404,10207
static void mmrot3_(406,10251
#define mmrot3(428,11051
typedef struct { char *LL, *RR; } stack_node;439,11506
#define PUSH(440,11586
#define POP(441,11682
#define med3(443,11778
ruby_qsort(448,12010
ruby_strdup(597,17034
ruby_getcwd(609,17190
#  define PATH_MAX 625,17456
#define IEEE_BIG_ENDIAN803,26544
#define IEEE_LITTLE_ENDIAN805,26574
#define VAX809,26624
#undef IEEE_BIG_ENDIAN810,26636
#undef IEEE_LITTLE_ENDIAN811,26659
#define IEEE_BIG_ENDIAN815,26738
#undef IEEE_LITTLE_ENDIAN816,26762
#undef Long819,26796
#undef ULong820,26808
#define Long 823,26842
#define ULong 824,26859
#define Long 826,26909
#define ULong 827,26931
#define Llong 831,26990
#define Bug(836,27054
#define MALLOC 849,27252
#define PRIVATE_MEM 854,27330
#define PRIVATE_mem 856,27362
static double private_mem[private_mem857,27430
static double private_mem[PRIVATE_mem], *pmem_next pmem_next857,27430
#undef IEEE_Arith860,27504
#undef Avoid_Underflow861,27522
#define IEEE_Arith863,27568
#define IEEE_Arith866,27620
#define DBL_DIG 872,27685
#define DBL_MAX_10_EXP 873,27704
#define DBL_MAX_EXP 874,27731
#define FLT_RADIX 875,27756
#define DBL_DIG 879,27810
#define DBL_MAX_10_EXP 880,27829
#define DBL_MAX_EXP 881,27855
#define FLT_RADIX 882,27878
#define DBL_MAX 883,27899
#define DBL_DIG 887,27957
#define DBL_MAX_10_EXP 888,27976
#define DBL_MAX_EXP 889,28002
#define FLT_RADIX 890,28026
#define DBL_MAX 891,28046
#define LONG_MAX 895,28110
Exactly one of IEEE_LITTLE_ENDIAN,911,28401
Exactly one of IEEE_LITTLE_ENDIAN, IEEE_BIG_ENDIAN,911,28401
Exactly one of IEEE_LITTLE_ENDIAN, IEEE_BIG_ENDIAN, VAX,911,28401
typedef union { double d; ULong L[2]; } U;914,28492
typedef double double_u;917,28553
#  define dval(918,28578
#    define word0(920,28626
#    define word1(921,28666
#    define word0(923,28714
#    define word1(924,28754
typedef U double_u;927,28809
#    define word0(929,28857
#    define word1(930,28887
#    define word0(932,28925
#    define word1(933,28955
#  define dval(935,28994
#define Storeinc(943,29288
#define Storeinc(946,29418
#define Exp_shift 957,29806
#define Exp_shift1 958,29828
#define Exp_msk1 959,29850
#define Exp_msk11 960,29879
#define Exp_mask 961,29908
#define P 962,29937
#define Bias 963,29950
#define Emin 964,29968
#define Exp_1 965,29989
#define Exp_11 966,30015
#define Ebits 967,30041
#define Frac_mask 968,30058
#define Frac_mask1 969,30085
#define Ten_pmax 970,30112
#define Bletch 971,30132
#define Bndry_mask 972,30152
#define Bndry_mask1 973,30180
#define LSB 974,30208
#define Sign_bit 975,30222
#define Log2P 976,30250
#define Tiny0 977,30266
#define Tiny1 978,30282
#define Quick_max 979,30298
#define Int_max 980,30319
#define Avoid_Underflow982,30360
#undef Sudden_Underflow984,30427
#define Flt_Rounds 990,30503
#define Flt_Rounds 992,30539
#define Rounding 997,30614
#undef Check_FLT_ROUNDS998,30640
#define Check_FLT_ROUNDS999,30664
#define Rounding 1001,30695
#undef Check_FLT_ROUNDS1005,30761
#undef Honor_FLT_ROUNDS1006,30785
#undef SET_INEXACT1007,30809
#undef  Sudden_Underflow1008,30828
#define Sudden_Underflow1009,30853
#undef Flt_Rounds1011,30889
#define Flt_Rounds 1012,30907
#define Exp_shift 1013,30928
#define Exp_shift1 1014,30950
#define Exp_msk1 1015,30972
#define Exp_msk11 1016,31001
#define Exp_mask 1017,31030
#define P 1018,31059
#define Bias 1019,31072
#define Exp_1 1020,31088
#define Exp_11 1021,31114
#define Ebits 1022,31140
#define Frac_mask 1023,31215
#define Frac_mask1 1024,31243
#define Bletch 1025,31271
#define Ten_pmax 1026,31288
#define Bndry_mask 1027,31308
#define Bndry_mask1 1028,31337
#define LSB 1029,31366
#define Sign_bit 1030,31380
#define Log2P 1031,31408
#define Tiny0 1032,31424
#define Tiny1 1033,31447
#define Quick_max 1034,31463
#define Int_max 1035,31484
#undef Flt_Rounds1037,31519
#define Flt_Rounds 1038,31537
#define Exp_shift 1039,31558
#define Exp_shift1 1040,31580
#define Exp_msk1 1041,31601
#define Exp_msk11 1042,31626
#define Exp_mask 1043,31655
#define P 1044,31680
#define Bias 1045,31693
#define Exp_1 1046,31710
#define Exp_11 1047,31736
#define Ebits 1048,31758
#define Frac_mask 1049,31774
#define Frac_mask1 1050,31802
#define Ten_pmax 1051,31832
#define Bletch 1052,31852
#define Bndry_mask 1053,31869
#define Bndry_mask1 1054,31900
#define LSB 1055,31931
#define Sign_bit 1056,31951
#define Log2P 1057,31975
#define Tiny0 1058,31991
#define Tiny1 1059,32010
#define Quick_max 1060,32026
#define Int_max 1061,32047
#define ROUND_BIASED1066,32132
#define rounded_product(1070,32181
#define rounded_quotient(1071,32229
#define rounded_product(1074,32350
#define rounded_quotient(1075,32386
#define Big0 1078,32431
#define Big1 1079,32489
#define Pack_321082,32530
#define FFFFFFFF 1085,32554
#undef ULLong1088,32605
#undef Pack_321090,32634
#define Llong 1099,32970
#define ULLong 1102,33016
#define MULTIPLE_THREADS 1106,33080
#define ACQUIRE_DTOA_LOCK(1109,33133
#define FREE_DTOA_LOCK(1110,33174
#define ACQUIRE_DTOA_LOCK(1112,33218
#define FREE_DTOA_LOCK(1113,33268
#define Kmax 1116,33323
struct Bigint 1118,33340
typedef struct Bigint Bigint;1124,33431
static Bigint *freelist[freelist1126,33462
Balloc(1129,33512
Bfree(1164,34293
#define Bcopy(1174,34453
multadd(1178,34571
s2b(1229,35525
hi0bits(1263,36128
lo0bits(1292,36584
i2b(1335,37233
mult(1346,37347
static Bigint *p5s;p5s1446,39612
pow5mult(1449,39649
lshift(1501,40714
cmp(1555,41668
diff(1584,42222
ulp(1670,43938
b2d(1708,44615
#define d0 1716,44732
#define d1 1717,44752
#undef d01766,45936
#undef d11767,45946
d2b(1773,46002
#define d0 1790,46302
#define d1 1791,46322
#undef d01906,48631
#undef d11907,48641
ratio(1910,48666
tens[tens1946,49334
bigtens[bigtens1957,49561
static const double tinytens[tinytens1958,49609
#define Scale_Bit 1968,49949
#define n_bigtens 1969,49972
bigtens[bigtens1972,50009
static const double tinytens[tinytens1973,50043
#define n_bigtens 1974,50101
bigtens[bigtens1976,50127
static const double tinytens[tinytens1977,50155
#define n_bigtens 1978,50206
#undef INFNAN_CHECK1983,50260
#define NAN_WORD0 1989,50327
#define NAN_WORD1 1993,50382
match(1997,50421
hexnan(2014,50702
ruby_strtod(2063,51847
quorem(2952,76517
static char *dtoa_result;dtoa_result3063,79301
rv_alloc(3068,79374
#define rv_alloc(3073,79437
nrv_alloc(3077,79490
#define rv_strdup(3088,79664
freedtoa(3098,80007
ruby_dtoa(3139,81805
ruby_each_words(3812,99318

variable.c,3860
st_table *rb_global_tbl;rb_global_tbl22,569
st_table *rb_class_tbl;rb_class_tbl23,594
static ID autoload,24,618
static ID autoload, classpath,24,618
static ID autoload, classpath, tmp_classpath;24,618
Init_var_tables(27,670
struct fc_result 36,908
fc_path(45,1035
fc_i(71,1586
find_class_path(113,2396
classname(140,3022
rb_mod_name(177,3850
rb_class_path(186,3982
rb_set_class_path(215,4542
rb_path2class(232,4863
rb_name_class(268,5603
rb_class_name(274,5697
rb_class2name(280,5790
rb_obj_classname(286,5881
#define global_variable 291,5955
#define gvar_getter_t 293,5999
#define gvar_setter_t 294,6038
#define gvar_marker_t 295,6077
struct trace_var 297,6117
struct global_variable 304,6241
struct global_entry 314,6436
#define undef_getter	319,6506
#define undef_setter	320,6548
#define undef_marker	321,6590
#define val_getter	323,6633
#define val_setter	324,6671
#define val_marker	325,6709
#define var_getter	327,6748
#define var_setter	328,6786
#define var_marker	329,6824
#define readonly_setter 331,6863
rb_global_entry(334,6933
undef_getter(362,7504
undef_setter(370,7665
undef_marker(380,7866
val_getter(385,7902
val_setter(391,7995
val_marker(397,8103
var_getter(404,8204
var_setter(412,8341
var_marker(418,8448
readonly_setter(424,8518
mark_global_entry(430,8679
rb_gc_mark_global_tbl(445,8995
global_id(452,9123
rb_define_hooked_variable(467,9355
rb_define_variable(486,9832
rb_define_readonly_variable(492,9939
rb_define_virtual_variable(498,10069
rb_trace_eval(509,10333
rb_f_trace_var(538,11136
remove_trace(566,11793
rb_f_untrace_var(598,12473
rb_gvar_get(641,13418
struct trace_data 647,13563
trace_ev(653,13644
trace_en(665,13865
rb_gvar_set(673,13999
rb_gv_set(692,14490
rb_gv_get(701,14655
rb_gvar_defined(710,14804
gvar_i(717,14941
rb_f_global_variables(733,15255
rb_alias_variable(748,15533
static int special_generic_ivar 785,16457
static st_table *generic_iv_tbl;generic_iv_tbl786,16494
rb_generic_ivar_table(789,16538
generic_ivar_get(800,16773
generic_ivar_set(819,17128
generic_ivar_defined(842,17667
generic_ivar_remove(858,17984
rb_mark_generic_ivar(876,18395
givar_mark_i(887,18581
givar_i(894,18678
rb_mark_generic_ivar_tbl(903,18827
rb_free_generic_ivar(911,18993
rb_copy_generic_ivar(921,19168
ivar_get(952,19896
rb_ivar_get(988,20782
rb_attr_get(994,20860
rb_ivar_set(1000,20939
rb_ivar_defined(1074,23529
struct obj_ivar_tag 1102,24257
obj_ivar_i(1109,24379
obj_ivar_each(1121,24675
void rb_ivar_foreach(1137,25022
ivar_i(1163,25576
rb_obj_instance_variables(1189,26115
rb_obj_remove_instance_variable(1221,26721
uninitialized_constant(1269,28107
const_missing(1281,28395
rb_mod_const_missing(1316,29514
check_autoload_table(1324,29733
rb_autoload(1336,30068
autoload_delete(1368,30923
autoload_provided(1388,31330
reset_safe(1395,31457
autoload_node(1402,31556
autoload_node_id(1435,32381
rb_autoload_load(1447,32587
rb_autoload_p(1463,32995
rb_const_get_0(1476,33285
rb_const_get_from(1513,34154
rb_const_get(1519,34255
rb_const_get_at(1525,34352
rb_mod_remove_const(1540,34684
sv_i(1573,35576
rb_mod_const_at(1584,35755
rb_mod_const_of(1597,35992
list_i(1610,36238
rb_const_list(1617,36344
rb_mod_constants(1646,37055
rb_const_defined_0(1667,37410
rb_const_defined_from(1692,37962
rb_const_defined(1698,38069
rb_const_defined_at(1704,38172
mod_av_set(1710,38286
rb_const_set(1745,39109
rb_define_const(1755,39318
rb_define_global_const(1769,39606
original_module(1775,39720
#define CVAR_LOOKUP(1782,39819
rb_cvar_set(1810,40402
rb_cvar_get(1837,41028
rb_cvar_defined(1863,41703
rb_cv_set(1871,41832
rb_cv_get(1881,42052
rb_define_class_variable(1891,42262
cv_i(1902,42503
rb_mod_class_variables(1930,43029
rb_mod_remove_cvar(1961,43547
rb_iv_get(1986,44316
rb_iv_set(1994,44429

version.c,447
#define PRINT(16,333
#define MKSTR(17,371
const char ruby_version[ruby_version19,462
const char ruby_release_date[ruby_release_date20,504
const char ruby_platform[ruby_platform21,556
const int ruby_patchlevel 22,600
const char ruby_description[ruby_description23,645
const char ruby_copyright[ruby_copyright24,695
const char ruby_engine[ruby_engine25,741
Init_version(28,782
ruby_show_version(41,1335
ruby_show_copyright(48,1413

version.h,1010
#define RUBY_VERSION 1,0
#define RUBY_RELEASE_DATE 2,29
#define RUBY_PATCHLEVEL 3,68
#define RUBY_VERSION_MAJOR 4,96
#define RUBY_VERSION_MINOR 5,125
#define RUBY_VERSION_TEENY 6,154
#define RUBY_RELEASE_YEAR 7,183
#define RUBY_RELEASE_MONTH 8,214
#define RUBY_RELEASE_DAY 9,243
RUBY_EXTERN const char ruby_version[ruby_version12,291
RUBY_EXTERN const char ruby_release_date[ruby_release_date13,330
RUBY_EXTERN const char ruby_platform[ruby_platform14,374
RUBY_EXTERN const int ruby_patchlevel;15,414
RUBY_EXTERN const char ruby_description[ruby_description16,453
RUBY_EXTERN const char ruby_copyright[ruby_copyright17,496
#define RUBY_AUTHOR 20,545
#define RUBY_BIRTH_YEAR 21,586
#define RUBY_BIRTH_MONTH 22,615
#define RUBY_BIRTH_DAY 23,642
#define RUBY_PATCHLEVEL_STR 25,669
# define RUBY_REVISION 31,803
#  define RUBY_REVISION_STR 36,879
#  define RUBY_REVISION_STR 38,961
# define RUBY_REVISION_STR 41,1040
# define RUBY_DESCRIPTION	44,1078
# define RUBY_COPYRIGHT 50,1267

vm.c,3561
#define BUFSIZE 28,512
#define PROCDEBUG 29,534
VALUE rb_cRubyVM;31,555
VALUE rb_cThread;32,573
VALUE rb_cEnv;33,591
VALUE rb_mRubyVMFrozenCore;34,606
VALUE ruby_vm_global_state_version 36,635
VALUE ruby_vm_const_missing_count 37,675
char ruby_vm_redefined_flag[ruby_vm_redefined_flag39,715
rb_thread_t *ruby_current_thread ruby_current_thread41,756
rb_vm_t *ruby_current_vm ruby_current_vm42,794
rb_vm_change_state(51,998
rb_vm_inc_const_missing_count(57,1061
rb_vm_set_finish_env(65,1186
vm_set_top_stack(75,1410
vm_set_eval_stack(95,1877
vm_set_main_stack(115,2385
rb_vm_get_ruby_level_next_cfp(138,2986
vm_get_ruby_level_caller_cfp(150,3279
#define ENV_IN_HEAP_P(181,3844
#define ENV_VAL(183,3949
env_free(186,4001
env_mark(198,4209
env_alloc(228,4899
check_env(242,5167
check_env_value(263,5798
vm_make_env_each(276,6005
collect_local_variables_in_env(361,7927
vm_collect_local_variables_in_heap(379,8340
rb_vm_make_env_object(393,8595
rb_vm_stack_to_heap(412,8955
vm_make_proc_from_block(424,9217
rb_vm_make_proc(439,9461
invoke_block_from_c(492,10826
check_block(532,11891
vm_yield_with_cref(544,12120
vm_yield(551,12361
rb_vm_invoke_proc(558,12557
vm_normal_frame(603,13535
vm_cfp_svar_get(615,13778
vm_cfp_svar_set(622,13954
vm_svar_get(629,14146
vm_svar_set(636,14268
rb_backref_get(643,14393
rb_backref_set(649,14451
rb_lastline_get(655,14513
rb_lastline_set(661,14572
rb_vm_get_sourceline(669,14650
vm_backtrace_each(692,15166
vm_backtrace(723,15922
rb_sourcefile(750,16471
rb_sourceline(764,16702
rb_vm_cref(778,16929
debug_cref(787,17127
rb_vm_cbase(798,17269
make_localjump_error(809,17484
rb_vm_localjump_error(841,18109
rb_vm_make_jump_tag_but_local_jump(848,18267
rb_vm_jump_tag_but_local_jump(880,19000
vm_iter_break(892,19255
rb_iter_break(903,19515
static st_table *vm_opt_method_table vm_opt_method_table910,19614
rb_vm_check_redefinition_opt_method(913,19669
add_opt_method(923,19861
vm_init_redefined_flag(938,20256
#define OP(945,20362
#define C(946,20453
#undef C962,21124
#undef OP963,21133
vm_exec(1070,23856
rb_iseq_eval(1270,28376
rb_iseq_eval_main(1284,28627
rb_thread_method_id_and_class(1298,28878
rb_frame_method_id_and_class(1328,29517
rb_thread_current_status(1334,29650
rb_vm_call_cfunc(1358,30223
vm_free(1378,30718
vm_mark_each_thread_func(1395,31046
mark_event_hooks(1403,31214
rb_vm_mark(1412,31334
vm_init2(1447,32209
#define USE_THREAD_DATA_RECYCLE 1455,32312
#define RECYCLE_MAX 1458,32375
static VALUE *thread_recycle_stack_slot[thread_recycle_stack_slot1459,32398
static int thread_recycle_stack_count 1460,32452
thread_recycle_stack(1463,32511
#define thread_recycle_stack(1474,32712
rb_thread_recycle_stack_release(1478,32783
thread_recycle_struct(1491,33072
thread_free(1500,33216
rb_thread_mark(1548,34116
thread_alloc(1605,35621
th_init2(1619,35960
th_init(1642,36466
ruby_thread_init(1648,36545
rb_thread_alloc(1663,36791
vm_define_method(1671,36920
#define REWIND_CFP(1712,37958
m_core_define_method(1718,38094
m_core_define_singleton_method(1727,38305
m_core_set_method_alias(1736,38526
m_core_set_variable_alias(1745,38705
m_core_undef_method(1754,38875
m_core_set_postexe(1764,39047
sdr(1795,39738
nsdr(1802,39806
#define MAX_NATIVE_TRACE 1807,39890
Init_VM(1826,40242
Init_BareVM(1945,44049
main_to_s(1972,44609
rb_vm_top_self(1978,44673
Init_top_self(1984,44735
ruby_vm_verbose_ptr(1996,44999
ruby_vm_debug_ptr(2002,45070
rb_ruby_verbose_ptr(2008,45137
rb_ruby_debug_ptr(2014,45218

vm_core.h,4509
#define RUBY_VM_CORE_H13,282
#define RUBY_VM_THREAD_MODEL 15,306
# define NSIG 37,665
#define RUBY_NSIG 40,720
#define va_init_list(44,794
#define va_init_list(47,861
#undef OPT_DIRECT_THREADED_CODE59,1086
#undef OPT_DIRECT_THREADED_CODE67,1246
#undef OPT_TOKEN_THREADED_CODE70,1313
#undef OPT_DIRECT_THREADED_CODE77,1446
#undef OPT_STACK_CACHING80,1541
#define LIKELY(86,1665
#define UNLIKELY(87,1712
#define LIKELY(89,1785
#define UNLIKELY(90,1809
typedef unsigned long rb_num_t;93,1861
typedef struct rb_compile_option_struct 97,1939
} rb_compile_option_t;107,2239
#define GetCoreDataFromValue(110,2269
#define GetCoreDataFromValue(114,2373
#define GetISeqPtr(117,2458
struct rb_iseq_struct 122,2558
enum ruby_special_exceptions 215,5232
    ruby_error_reenter,216,5263
    ruby_error_nomemory,217,5287
    ruby_error_sysstack,218,5312
    ruby_special_error_count219,5337
typedef struct rb_iseq_struct rb_iseq_t;222,5370
#define GetVMPtr(224,5412
typedef struct rb_vm_struct 227,5484
} rb_vm_t;271,6375
} rb_control_frame_t;286,6915
typedef struct rb_block_struct 288,6938
} rb_block_t;294,7209
#define GetThreadPtr(296,7224
enum rb_thread_status 299,7304
    THREAD_TO_KILL,300,7328
    THREAD_RUNNABLE,301,7348
    THREAD_STOPPED,302,7369
    THREAD_STOPPED_FOREVER,303,7389
    THREAD_KILLED304,7417
typedef RUBY_JMP_BUF rb_jmpbuf_t;307,7439
struct rb_vm_tag 309,7474
struct rb_vm_trap_tag 316,7579
#define RUBY_VM_VALUE_CACHE_SIZE 320,7640
#define USE_VALUE_CACHE 321,7680
struct rb_unblock_callback 323,7707
typedef struct rb_thread_struct330,7813
} rb_thread_t;430,9941
RUBY_EXTERN VALUE rb_cISeq;444,10582
RUBY_EXTERN VALUE rb_cRubyVM;445,10610
RUBY_EXTERN VALUE rb_cEnv;446,10640
RUBY_EXTERN VALUE rb_mRubyVMFrozenCore;447,10667
#define RUBY_VM_THREAD_STACK_SIZE 450,10754
struct global_entry 452,10802
#define GetProcPtr(457,10872
} rb_proc_t;468,11112
#define GetEnvPtr(470,11126
} rb_env_t;479,11335
#define GetBindingPtr(481,11348
} rb_binding_t;486,11462
#define VM_CALL_ARGS_SPLAT_BIT 490,11521
#define VM_CALL_ARGS_BLOCKARG_BIT 491,11568
#define VM_CALL_FCALL_BIT 492,11615
#define VM_CALL_VCALL_BIT 493,11662
#define VM_CALL_TAILCALL_BIT 494,11709
#define VM_CALL_TAILRECURSION_BIT 495,11756
#define VM_CALL_SUPER_BIT 496,11803
#define VM_CALL_SEND_BIT 497,11850
#define VM_SPECIAL_OBJECT_VMCORE 499,11898
#define VM_SPECIAL_OBJECT_CBASE 500,11938
#define VM_FRAME_MAGIC_METHOD 502,11979
#define VM_FRAME_MAGIC_BLOCK 503,12014
#define VM_FRAME_MAGIC_CLASS 504,12049
#define VM_FRAME_MAGIC_TOP 505,12084
#define VM_FRAME_MAGIC_FINISH 506,12119
#define VM_FRAME_MAGIC_CFUNC 507,12154
#define VM_FRAME_MAGIC_PROC 508,12189
#define VM_FRAME_MAGIC_IFUNC 509,12224
#define VM_FRAME_MAGIC_EVAL 510,12259
#define VM_FRAME_MAGIC_LAMBDA 511,12294
#define VM_FRAME_MAGIC_MASK_BITS 512,12329
#define VM_FRAME_MAGIC_MASK 513,12366
#define VM_FRAME_TYPE(515,12431
#define VM_FRAME_FLAG_PASSED 518,12518
#define RUBYVM_CFUNC_FRAME_P(521,12556
#define NEW_INLINE_CACHE_ENTRY(526,12675
#define ic_class 527,12732
#define ic_method 528,12759
#define ic_value 529,12785
#define ic_vmstat 530,12812
typedef NODE *IC;IC531,12837
typedef VALUE CDHASH;535,12888
#define FUNC_FASTCALL(538,12933
  (FUNC_FASTCALL(*rb_insn_func_t)rb_insn_func_t542,12997
#define GC_GUARDED_PTR(544,13071
#define GC_GUARDED_PTR_REF(545,13130
#define GC_GUARDED_PTR_P(546,13191
#define RUBY_VM_PREVIOUS_CONTROL_FRAME(548,13242
#define RUBY_VM_NEXT_CONTROL_FRAME(549,13294
#define RUBY_VM_END_CONTROL_FRAME(550,13342
#define RUBY_VM_VALID_CONTROL_FRAME_P(552,13441
#define RUBY_VM_CONTROL_FRAME_STACK_OVERFLOW_P(554,13527
#define RUBY_VM_IFUNC_P(557,13659
#define RUBY_VM_NORMAL_ISEQ_P(558,13725
#define RUBY_VM_CLASS_SPECIAL_P(561,13796
#define RUBY_VM_GET_BLOCK_PTR_IN_CFP(563,13858
#define RUBY_VM_GET_CFP_FROM_BLOCK_PTR(564,13931
#define SDR(573,14227
#define SDR2(574,14300
#define sysstack_error 597,15183
RUBY_EXTERN rb_thread_t *ruby_current_thread;ruby_current_thread602,15305
#define GET_VM(605,15385
#define GET_THREAD(606,15418
#define rb_thread_set_current_raw(607,15459
#define rb_thread_set_current(608,15532
#define RUBY_VM_SET_INTERRUPT(617,15706
#define RUBY_VM_SET_TIMER_INTERRUPT(618,15771
#define RUBY_VM_SET_FINALIZER_INTERRUPT(619,15842
#define RUBY_VM_INTERRUPTED(620,15917
#define RUBY_VM_CHECK_INTS_TH(624,16031
#define RUBY_VM_CHECK_INTS(630,16171
#define EXEC_EVENT_HOOK(637,16362

vm_dump.c,642
#define MAX_POSBUF 15,268
#define VM_CFP_CNT(17,292
control_frame_dump(21,420
rb_vmdebug_stack_dump_raw(146,3437
rb_vmdebug_stack_dump_raw_current(183,4366
rb_vmdebug_env_dump_raw(190,4496
rb_vmdebug_proc_dump_raw(218,5131
rb_vmdebug_stack_dump_th(232,5504
vm_stack_dump_each(240,5653
rb_vmdebug_debug_print_register(328,7694
rb_vmdebug_thread_dump_regs(351,8309
rb_vmdebug_debug_print_pre(359,8451
rb_vmdebug_debug_print_post(378,8899
vm_analysis_insn(424,9875
vm_analysis_operand(470,10949
vm_analysis_register(502,11705
rb_vmdebug_thread_dump_state(552,12701
rb_vm_bugreport(569,13123
#define MAX_NATIVE_TRACE 593,13568

vm_eval.c,1486
vm_call0(25,1104
rb_vm_call(122,3497
vm_call_super(129,3732
rb_call_super(161,4453
stack_check(168,4597
rb_call0(179,4842
rb_call(253,6859
rb_method_missing(295,8223
#define NOEX_MISSING 302,8432
raise_method_missing(305,8473
method_missing(356,9759
rb_raise_method_missing(388,10577
rb_apply(396,10784
rb_funcall(408,11087
rb_funcall2(431,11435
rb_funcall3(437,11578
send_internal(443,11729
rb_f_send(478,12658
rb_f_public_send(495,13070
rb_yield_0(503,13217
rb_yield(509,13316
rb_yield_values(520,13450
rb_yield_values2(542,13753
rb_yield_splat(548,13845
loop_i(560,14103
rb_f_loop(585,14464
rb_iterate(592,14590
struct iter_method_arg 653,15864
iterate_method(661,15964
rb_block_call(671,16180
rb_each(684,16477
eval_string_with_cref(690,16580
eval_string(803,19478
rb_f_eval(828,20293
rb_eval_string(858,20936
rb_eval_string_protect(864,21058
rb_eval_string_wrap(870,21197
rb_eval_cmd(897,21748
yield_under(937,22540
eval_under(959,23111
specific_eval(974,23437
rb_obj_instance_eval(1036,25107
rb_obj_instance_exec(1068,25918
rb_mod_module_eval(1106,26933
rb_mod_module_exec(1132,27511
rb_f_throw(1152,28071
rb_throw(1180,28648
rb_throw_obj(1190,28797
rb_f_catch(1237,29929
catch_null_i(1272,30587
catch_i(1278,30684
rb_catch(1284,30771
rb_catch_obj(1293,30976
rb_f_caller(1324,31812
rb_backtrace(1342,32112
rb_make_backtrace(1354,32319
rb_f_local_variables(1373,32629
rb_f_block_given_p(1437,33986
Init_vm_eval(1454,34318

vm_exec.c,669
#define DECL_SC_REG(15,271
#define DECL_SC_REG(18,357
#define DECL_SC_REG(21,458
#define DECL_SC_REG(24,538
static VALUE finish_insn_seq[finish_insn_seq29,672
static VALUE const finish_insn_seq[finish_insn_seq31,761
static VALUE finish_insn_seq[finish_insn_seq33,814
vm_exec_core(38,914
#define USE_MACHINE_REGS 55,1267
#define USE_MACHINE_REGS 60,1410
#undef  RESTORE_REGS69,1535
#define RESTORE_REGS(70,1556
#undef  REG_PC76,1638
#define REG_PC 77,1653
#undef  GET_PC78,1675
#define GET_PC(79,1690
#undef  SET_PC80,1716
#define SET_PC(81,1731
rb_vm_get_insns_address_table(116,2401
rb_vm_get_insns_address_table(127,2554
vm_exec_core(133,2640

vm_exec.h,1607
#define RUBY_VM_EXEC_H13,276
typedef long OFFSET;15,300
typedef unsigned long lindex_t;16,321
typedef unsigned long dindex_t;17,353
typedef rb_num_t GENTRY;18,385
typedef rb_iseq_t *ISEQ;ISEQ19,410
#define USAGE_ANALYSIS_INSN(22,467
#define USAGE_ANALYSIS_OPERAND(23,534
#define USAGE_ANALYSIS_REGISTER(24,618
#define USAGE_ANALYSIS_INSN(26,697
#define USAGE_ANALYSIS_OPERAND(27,743
#define USAGE_ANALYSIS_REGISTER(28,798
#define PREFETCH(33,924
#define PREFETCH(35,951
#define debugs 39,996
#define DEBUG_ENTER_INSN(40,1018
#define SC_REGS(44,1108
#define SC_REGS(46,1147
#define DEBUG_END_INSN(49,1173
#define debugs54,1253
#define DEBUG_ENTER_INSN(55,1268
#define DEBUG_END_INSN(56,1299
#define throwdebug 59,1332
#define LABEL(68,1555
#define ELABEL(69,1587
#define LABEL_PTR(70,1605
#define INSN_ENTRY(72,1637
#define END_INSN(76,1776
#define NEXT_INSN(78,1817
#define LABEL(84,1993
#define ELABEL(85,2026
#define LABEL_PTR(86,2060
#define INSN_ENTRY_SIG(88,2093
#define INSN_DISPATCH_SIG(91,2124
#define INSN_ENTRY(93,2157
#define DISPATCH_ARCH_DEPEND_WAY(99,2302
#define DISPATCH_ARCH_DEPEND_WAY(103,2428
#define TC_DISPATCH(113,2587
#define TC_DISPATCH(121,2711
#define END_INSN(130,2959
#define INSN_DISPATCH(134,3050
#define END_INSNS_DISPATCH(138,3115
#define NEXT_INSN(142,3243
#define INSN_ENTRY(148,3397
#define END_INSN(151,3441
#define INSN_DISPATCH(156,3548
#define END_INSNS_DISPATCH(160,3649
#define NEXT_INSN(167,3856
#define VM_SP_CNT(171,3896
#define THROW_EXCEPTION(174,3971
#define THROW_EXCEPTION(179,4075
#define SCREG(182,4132

vm_insnhelper.c,1083
#define INLINE 18,359
vm_push_frame(24,524
#define COLLECT_PROFILE 59,1245
vm_pop_frame(73,1440
#define VM_CALLEE_SETUP_ARG(101,2083
vm_callee_setup_arg_complex(114,2493
caller_setup_args(207,4682
call_cfunc(271,6063
vm_call_cfunc(359,8497
vm_call_bmethod(400,9485
vm_method_missing_args(417,9921
vm_method_missing(428,10246
vm_setup_method(438,10558
vm_call_method(494,11907
vm_send_optimize(625,15095
block_proc_is_lambda(654,15784
vm_yield_with_cfunc(668,15979
vm_yield_setup_block_args_complex(714,16946
vm_yield_setup_block_args(771,18320
vm_yield_setup_args(857,20481
vm_invoke_block(884,21255
lfp_svar_place(924,22387
lfp_svar_get(941,22670
lfp_svar_set(964,23038
vm_getspecial(987,23442
vm_get_cref(1027,24160
vm_cref_push(1050,24538
vm_get_cbase(1065,24874
vm_check_if_namespace(1081,25162
vm_get_ev_const(1094,25408
vm_get_cvar_base(1157,26636
vm_method_search(1179,27059
vm_search_normal_superclass(1203,27517
vm_search_superclass(1224,27992
vm_throw(1272,29058
vm_expandarray(1419,32452
check_cfunc(1480,33590
opt_eq_func(1496,33819

vm_insnhelper.h,1849
#define RUBY_INSNHELPER_H13,332
#define VMDEBUG 29,602
#undef  VMDEBUG33,634
#define VMDEBUG 34,650
  BOP_PLUS,38,683
  BOP_MINUS,39,695
  BOP_MULT,40,708
  BOP_DIV,41,720
  BOP_MOD,42,731
  BOP_EQ,43,742
  BOP_LT,44,752
  BOP_LE,45,762
  BOP_LTLT,46,772
  BOP_AREF,47,784
  BOP_ASET,48,796
  BOP_LENGTH,49,808
  BOP_SUCC,50,822
  BOP_GT,51,834
  BOP_GE,52,844
  BOP_NOT,53,854
  BOP_NEQ,54,865
  BOP_LAST_56,877
#define GET_VM_STATE_VERSION(63,1026
#define INC_VM_STATE_VERSION(64,1088
#define PUSH(72,1388
#define TOPN(73,1427
#define POPN(74,1463
#define POP(75,1491
#define STACK_ADDR_FROM_TOP(76,1519
#define GET_TOS(78,1566
#define REG_CFP 84,1788
#define REG_PC 85,1814
#define REG_SP 86,1844
#define REG_LFP 87,1874
#define REG_DFP 88,1905
#define RESTORE_REGS(90,1937
#define REG_A 94,2003
#define REG_B 95,2025
#define USAGE_ANALYSIS_REGISTER_HELPER(98,2078
#define USAGE_ANALYSIS_REGISTER_HELPER(101,2173
#define GET_PC(105,2242
#define SET_PC(106,2316
#define GET_CURRENT_INSN(107,2396
#define GET_OPERAND(108,2435
#define ADD_PC(109,2478
#define GET_PC_COUNT(111,2529
#define JUMP(112,2592
#define GET_CFP(115,2647
#define GET_LFP(116,2714
#define SET_LFP(117,2781
#define GET_DFP(118,2856
#define SET_DFP(119,2923
#define GET_SP(122,3008
#define SET_SP(123,3074
#define INC_SP(124,3149
#define DEC_SP(125,3224
#define SET_SV(126,3299
#define GET_SP_COUNT(129,3374
#define GET_ISEQ(132,3455
#define GET_PREV_DFP(138,3677
#define GET_GLOBAL(140,3749
#define SET_GLOBAL(141,3822
#define GET_CONST_INLINE_CACHE(143,3901
#define GET_SELF(149,4154
#define COPY_CREF(155,4414
#define CALL_METHOD(162,4599
#define GET_BLOCK_PTR(173,4857
#define FIXNUM_2_P(186,5326
#define BASIC_OP_UNREDEFINED_P(187,5367
#define HEAP_CLASS_OF(188,5444
#define CALL_SIMPLE_METHOD(190,5491

vm_method.c,1829
#define CACHE_SIZE 5,41
#define CACHE_MASK 6,66
#define EXPR1(7,91
static ID object_id;11,207
static ID removed,12,228
static ID removed, singleton_removed,12,228
static ID removed, singleton_removed, undefined,12,228
static ID removed, singleton_removed, undefined, singleton_undefined;12,228
static ID added,13,298
static ID added, singleton_added;13,298
struct cache_entry 15,333
static struct cache_entry cache[cache23,559
#define ruby_running 24,604
rb_clear_cache(28,679
rb_clear_cache_for_undef(45,910
rb_clear_cache_by_id(64,1219
rb_clear_cache_by_class(83,1480
rb_add_method(102,1779
rb_define_alloc_func(193,4408
rb_undef_alloc_func(201,4604
rb_get_alloc_func(208,4765
search_method(221,5086
rb_get_method_body(251,5566
rb_method_node(291,6310
remove_method(305,6578
rb_remove_method(348,7704
rb_mod_remove_method(362,8005
#undef rb_disable_super372,8172
#undef rb_enable_super373,8196
rb_disable_super(376,8225
rb_enable_super(382,8311
rb_export_method(388,8424
rb_method_boundp(417,9080
rb_attr(431,9317
rb_undef(475,10330
rb_mod_undef_method(568,12483
rb_mod_method_defined(604,13335
#define VISI_CHECK(609,13436
rb_mod_public_method_defined(638,14150
rb_mod_private_method_defined(678,15070
rb_mod_protected_method_defined(718,16003
rb_alias(732,16263
rb_mod_alias_method(811,18179
secure_visibility(818,18330
set_method_visibility(827,18516
rb_mod_public(848,19030
rb_mod_protected(871,19555
rb_mod_private(903,20269
rb_mod_public_method(923,20647
rb_mod_private_method(946,21210
top_public(963,21603
top_private(969,21705
rb_mod_modfunc(1011,22791
rb_method_basic_definition_p(1055,23758
rb_obj_respond_to(1064,23931
rb_respond_to(1082,24292
obj_respond_to(1097,24653
Init_eval_method(1111,24919
#undef rb_intern1113,24944
#define rb_intern(1114,24961

vm_opts.h,657
#define RUBY_VM_OPTS_H14,275
#define OPT_TRACE_INSTRUCTION 21,434
#define OPT_TAILCALL_OPTIMIZATION 22,473
#define OPT_PEEPHOLE_OPTIMIZATION 23,512
#define OPT_SPECIALISED_INSTRUCTION 24,551
#define OPT_INLINE_CONST_CACHE 25,590
#define OPT_DIRECT_THREADED_CODE 33,724
#define OPT_TOKEN_THREADED_CODE 34,763
#define OPT_CALL_THREADED_CODE 35,802
#define OPT_CHECKED_RUN 38,866
#define OPT_INLINE_METHOD_CACHE 39,905
#define OPT_BLOCKINLINING 40,944
#define OPT_OPERANDS_UNIFICATION 43,1039
#define OPT_INSTRUCTIONS_UNIFICATION 44,1078
#define OPT_UNIFY_ALL_COMBINATION 45,1117
#define OPT_STACK_CACHING 46,1156
#define SUPPORT_JOKE 49,1207

defs/keywords,192
struct kwtable 2,
#define TOTAL_KEYWORDS 9,
#define MIN_WORD_LENGTH 10,
#define MAX_WORD_LENGTH 11,
#define MIN_HASH_VALUE 12,
#define MAX_HASH_VALUE 13,
hash 24,
rb_reserved_word 79,

parse.c,11052
#define YYBISON 47,2141
#define YYBISON_VERSION 50,2182
#define YYSKELETON_NAME 53,2235
#define YYPURE 56,2290
#define YYLSP_NEEDED 59,2332
# define YYTOKENTYPE65,2393
   enum yytokentype 68,2517
     keyword_class 69,2539
     keyword_module 70,2565
     keyword_def 71,2592
     keyword_undef 72,2616
     keyword_begin 73,2642
     keyword_rescue 74,2668
     keyword_ensure 75,2695
     keyword_end 76,2722
     keyword_if 77,2746
     keyword_unless 78,2769
     keyword_then 79,2796
     keyword_elsif 80,2821
     keyword_else 81,2847
     keyword_case 82,2872
     keyword_patern 83,2897
     keyword_when 84,2924
     keyword_while 85,2949
     keyword_until 86,2975
     keyword_for 87,3001
     keyword_break 88,3025
     keyword_next 89,3051
     keyword_redo 90,3076
     keyword_retry 91,3101
     keyword_in 92,3127
     keyword_do 93,3150
     keyword_do_cond 94,3173
     keyword_do_block 95,3201
     keyword_do_LAMBDA 96,3230
     keyword_return 97,3260
     keyword_yield 98,3287
     keyword_super 99,3313
     keyword_self 100,3339
     keyword_nil 101,3364
     keyword_true 102,3388
     keyword_false 103,3413
     keyword_and 104,3439
     keyword_or 105,3463
     keyword_not 106,3486
     modifier_if 107,3510
     modifier_unless 108,3534
     modifier_while 109,3562
     modifier_until 110,3589
     modifier_rescue 111,3616
     keyword_alias 112,3644
     keyword_defined 113,3670
     keyword_BEGIN 114,3698
     keyword_END 115,3724
     keyword__LINE__ 116,3748
     keyword__FILE__ 117,3776
     keyword__ENCODING__ 118,3804
     tIDENTIFIER 119,3836
     tFID 120,3860
     tGVAR 121,3877
     tIVAR 122,3895
     tCONSTANT 123,3913
     tCVAR 124,3935
     tLABEL 125,3953
     tINTEGER 126,3972
     tFLOAT 127,3993
     tSTRING_CONTENT 128,4012
     tCHAR 129,4040
     tNTH_REF 130,4058
     tBACK_REF 131,4079
     tREGEXP_END 132,4101
     tUPLUS 133,4125
     tUMINUS 134,4144
     tPOW 135,4164
     tCMP 136,4181
     tEQ 137,4198
     tEQQ 138,4214
     tNEQ 139,4231
     tGEQ 140,4248
     tLEQ 141,4265
     tANDOP 142,4282
     tOROP 143,4301
     tMATCH 144,4319
     tNMATCH 145,4338
     tDOT2 146,4358
     tDOT3 147,4376
     tAREF 148,4394
     tASET 149,4412
     tLSHFT 150,4430
     tRSHFT 151,4449
     tCOLON2 152,4468
     tCOLON3 153,4488
     tOP_ASGN 154,4508
     tASSOC 155,4529
     tLPAREN 156,4548
     tLPAREN_ARG 157,4568
     tRPAREN 158,4592
     tLBRACK 159,4612
     tLBRACE 160,4632
     tLBRACE_ARG 161,4652
     tSTAR 162,4676
     tAMPER 163,4694
     tLAMBDA 164,4713
     tSYMBEG 165,4733
     tSTRING_BEG 166,4753
     tXSTRING_BEG 167,4777
     tREGEXP_BEG 168,4802
     tWORDS_BEG 169,4826
     tQWORDS_BEG 170,4849
     tSTRING_DBEG 171,4873
     tSTRING_DVAR 172,4898
     tSTRING_END 173,4923
     tLAMBEG 174,4947
     tLOWEST 175,4967
     tUMINUS_NUM 176,4987
     idNULL 177,5011
     idRespond_to 178,5030
     idIFUNC 179,5055
     idCFUNC 180,5075
     idThrowState 181,5095
     id_core_set_method_alias 182,5120
     id_core_set_variable_alias 183,5157
     id_core_undef_method 184,5196
     id_core_define_method 185,5229
     id_core_define_singleton_method 186,5263
     id_core_set_postexe 187,5307
     tINFIX_OP 188,5339
     tLAST_TOKEN 189,5361
#define keyword_class 193,5412
#define keyword_module 194,5438
#define keyword_def 195,5465
#define keyword_undef 196,5489
#define keyword_begin 197,5515
#define keyword_rescue 198,5541
#define keyword_ensure 199,5568
#define keyword_end 200,5595
#define keyword_if 201,5619
#define keyword_unless 202,5642
#define keyword_then 203,5669
#define keyword_elsif 204,5694
#define keyword_else 205,5720
#define keyword_case 206,5745
#define keyword_patern 207,5770
#define keyword_when 208,5797
#define keyword_while 209,5822
#define keyword_until 210,5848
#define keyword_for 211,5874
#define keyword_break 212,5898
#define keyword_next 213,5924
#define keyword_redo 214,5949
#define keyword_retry 215,5974
#define keyword_in 216,6000
#define keyword_do 217,6023
#define keyword_do_cond 218,6046
#define keyword_do_block 219,6074
#define keyword_do_LAMBDA 220,6103
#define keyword_return 221,6133
#define keyword_yield 222,6160
#define keyword_super 223,6186
#define keyword_self 224,6212
#define keyword_nil 225,6237
#define keyword_true 226,6261
#define keyword_false 227,6286
#define keyword_and 228,6312
#define keyword_or 229,6336
#define keyword_not 230,6359
#define modifier_if 231,6383
#define modifier_unless 232,6407
#define modifier_while 233,6435
#define modifier_until 234,6462
#define modifier_rescue 235,6489
#define keyword_alias 236,6517
#define keyword_defined 237,6543
#define keyword_BEGIN 238,6571
#define keyword_END 239,6597
#define keyword__LINE__ 240,6621
#define keyword__FILE__ 241,6649
#define keyword__ENCODING__ 242,6677
#define tIDENTIFIER 243,6709
#define tFID 244,6733
#define tGVAR 245,6750
#define tIVAR 246,6768
#define tCONSTANT 247,6786
#define tCVAR 248,6808
#define tLABEL 249,6826
#define tINTEGER 250,6845
#define tFLOAT 251,6866
#define tSTRING_CONTENT 252,6885
#define tCHAR 253,6913
#define tNTH_REF 254,6931
#define tBACK_REF 255,6952
#define tREGEXP_END 256,6974
#define tUPLUS 257,6998
#define tUMINUS 258,7017
#define tPOW 259,7037
#define tCMP 260,7054
#define tEQ 261,7071
#define tEQQ 262,7087
#define tNEQ 263,7104
#define tGEQ 264,7121
#define tLEQ 265,7138
#define tANDOP 266,7155
#define tOROP 267,7174
#define tMATCH 268,7192
#define tNMATCH 269,7211
#define tDOT2 270,7231
#define tDOT3 271,7249
#define tAREF 272,7267
#define tASET 273,7285
#define tLSHFT 274,7303
#define tRSHFT 275,7322
#define tCOLON2 276,7341
#define tCOLON3 277,7361
#define tOP_ASGN 278,7381
#define tASSOC 279,7402
#define tLPAREN 280,7421
#define tLPAREN_ARG 281,7441
#define tRPAREN 282,7465
#define tLBRACK 283,7485
#define tLBRACE 284,7505
#define tLBRACE_ARG 285,7525
#define tSTAR 286,7549
#define tAMPER 287,7567
#define tLAMBDA 288,7586
#define tSYMBEG 289,7606
#define tSTRING_BEG 290,7626
#define tXSTRING_BEG 291,7650
#define tREGEXP_BEG 292,7675
#define tWORDS_BEG 293,7699
#define tQWORDS_BEG 294,7722
#define tSTRING_DBEG 295,7746
#define tSTRING_DVAR 296,7771
#define tSTRING_END 297,7796
#define tLAMBEG 298,7820
#define tLOWEST 299,7840
#define tUMINUS_NUM 300,7860
#define idNULL 301,7884
#define idRespond_to 302,7903
#define idIFUNC 303,7928
#define idCFUNC 304,7948
#define idThrowState 305,7968
#define id_core_set_method_alias 306,7993
#define id_core_set_variable_alias 307,8030
#define id_core_undef_method 308,8069
#define id_core_define_method 309,8102
#define id_core_define_singleton_method 310,8136
#define id_core_set_postexe 311,8180
#define tINFIX_OP 312,8212
#define tLAST_TOKEN 313,8234
	YYSTYPE;934,29742
# define yystype 935,29772
# define YYSTYPE_IS_DECLARED 936,29834
# define YYSTYPE_IS_TRIVIAL 937,29865
# undef short949,30018
typedef YYTYPE_UINT8 yytype_uint8;953,30060
typedef unsigned char yytype_uint8;955,30101
typedef YYTYPE_INT8 yytype_int8;959,30164
typedef signed char yytype_int8;962,30297
typedef short int yytype_int8;964,30336
typedef YYTYPE_UINT16 yytype_uint16;968,30396
typedef unsigned short int yytype_uint16;970,30439
typedef YYTYPE_INT16 yytype_int16;974,30509
typedef short int yytype_int16;976,30550
#  define YYSIZE_T 981,30629
#  define YYSIZE_T 983,30684
#  define YYSIZE_T 987,30890
#  define YYSIZE_T 989,30923
#define YYSIZE_MAXIMUM 993,30971
#   define YY_(999,31117
#  define YY_(1003,31203
# define YYUSE(1009,31340
# define YYUSE(1011,31377
# define YYID(1016,31507
YYID 1021,31643
#    define YYSTACK_ALLOC 1039,31915
#    define YYSTACK_ALLOC 1043,32078
#    define alloca 1046,32198
#    define YYSTACK_ALLOC 1048,32234
#      define _STDLIB_H 1053,32498
#  define YYSTACK_FREE(1062,32645
#   define YYSTACK_ALLOC_MAXIMUM 1068,33042
#  define YYSTACK_ALLOC 1071,33124
#  define YYSTACK_FREE 1072,33157
#   define YYSTACK_ALLOC_MAXIMUM 1074,33219
#    define _STDLIB_H 1081,33503
#   define YYMALLOC 1085,33565
#   define YYFREE 1092,33832
union yyalloc1107,34315
# define YYSTACK_GAP_MAXIMUM 1114,34449
# define YYSTACK_BYTES(1118,34597
#   define YYCOPY(1126,34857
#   define YYCOPY(1129,34964
# define YYSTACK_RELOCATE(1145,35455
#define YYFINAL 1159,35853
#define YYLAST 1161,35912
#define YYNTOKENS 1164,35977
#define YYNNTS 1166,36041
#define YYNRULES 1168,36097
#define YYNSTATES 1170,36156
#define YYUNDEFTOK 1173,36253
#define YYMAXUTOK 1174,36275
#define YYTRANSLATE(1176,36300
static const yytype_uint8 yytranslate[yytranslate1180,36476
static const yytype_uint16 yyprhs[yyprhs1225,39386
static const yytype_int16 yyrhs[yyrhs1288,43671
static const yytype_uint16 yyrline[yyrline1470,56668
static const char *const yytname[yytname1536,61088
static const yytype_uint16 yytoknum[yytoknum1603,65327
static const yytype_uint16 yyr1[yyr11625,66552
static const yytype_uint8 yyr2[yyr21688,70855
static const yytype_uint16 yydefact[yydefact1753,75252
static const yytype_int16 yydefgoto[yydefgoto1858,82570
#define YYPACT_NINF 1882,83993
static const yytype_int16 yypact[yypact1883,84018
static const yytype_int16 yypgoto[yypgoto1988,91331
#define YYTABLE_NINF 2014,92899
static const yytype_int16 yytable[yytable2015,92925
static const yytype_int16 yycheck[yycheck3096,171533
static const yytype_uint16 yystos[yystos4179,250238
#define yyerrok	4283,257525
#define yyclearin	4284,257560
#define YYEMPTY	4285,257597
#define YYEOF	4286,257619
#define YYACCEPT	4288,257637
#define YYABORT	4289,257671
#define YYERROR	4290,257704
#define YYFAIL	4297,257942
#define YYRECOVERING(4299,257973
#define YYBACKUP(4301,258014
#define YYTERROR	4319,258457
#define YYERRCODE	4320,258476
#define YYRHSLOC(4327,258682
# define YYLLOC_DEFAULT(4329,258741
#  define YY_LOCATION_PRINT(4355,259654
#  define YY_LOCATION_PRINT(4360,259834
# define YYLEX 4368,259979
# define YYLEX 4370,260029
#  define YYFPRINTF 4378,260194
# define YYDPRINTF(4381,260231
# define YY_SYMBOL_PRINT(4387,260338
yy_symbol_value_print 4407,260888
yy_symbol_print 4441,261646
yy_stack_print 4468,262572
# define YY_STACK_PRINT(4482,262874
yy_reduce_print 4496,263284
# define YY_REDUCE_PRINT(4521,263964
int yydebug;4530,264217
# define YYDPRINTF(4533,264258
# define YY_SYMBOL_PRINT(4534,264283
# define YY_STACK_PRINT(4535,264338
# define YY_REDUCE_PRINT(4536,264375
# define YYINITDEPTH 4542,264509
# define YYMAXDEPTH 4553,264865
#   define yystrlen 4562,264986
yystrlen 4568,265170
#   define yystpcpy 4585,265465
yystpcpy 4592,265701
yytnamerr 4620,266442
yysyntax_error 4667,267501
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM 4680,267849
yydestruct 4777,270670
yyparse 4832,271652
#define YYPOPSTACK(4893,273032
#  undef YYSTACK_RELOCATE4981,275449

parse.y,13908
#define YYDEBUG 14,
#define YYERROR_VERBOSE 15,
#define YYSTACK_USE_ALLOCA 16,
#define YYMALLOC(29,
#define YYREALLOC(30,
#define YYCALLOC(31,
#define YYFREE(32,
#define malloc	33,
#define realloc	34,
#define calloc	35,
#define free	36,
#define REGISTER_SYMID(40,
#define is_notop_id(44,
#define is_local_id(45,
#define is_global_id(46,
#define is_instance_id(47,
#define is_attrset_id(48,
#define is_const_id(49,
#define is_class_id(50,
#define is_junk_id(51,
#define is_asgn_or_id(53,
enum lex_state_e 58,
    EXPR_BEG,59,
    EXPR_END,60,
    EXPR_ENDARG,61,
    EXPR_ARG,62,
    EXPR_CMDARG,63,
    EXPR_MID,64,
    EXPR_FNAME,65,
    EXPR_DOT,66,
    EXPR_CLASS,67,
    EXPR_VALUE,68,
    EXPR_INFIX69,
typedef unsigned LONG_LONG stack_type;73,
typedef unsigned long stack_type;75,
# define BITSTACK_PUSH(78,
# define BITSTACK_POP(79,
# define BITSTACK_LEXPOP(80,
# define BITSTACK_SET_P(81,
#define COND_PUSH(83,
#define COND_POP(84,
#define COND_LEXPOP(85,
#define COND_P(86,
#define CMDARG_PUSH(88,
#define CMDARG_POP(89,
#define CMDARG_LEXPOP(90,
#define CMDARG_P(91,
struct vtable 93,
struct local_vars 100,
#define DVARS_INHERIT 106,
#define DVARS_TOPSCOPE 107,
#define DVARS_SPECIAL_P(108,
#define POINTER_P(109,
vtable_size(113,
#define VTBL_DEBUG 123,
vtable_alloc(126,
vtable_free(138,
vtable_add(150,
vtable_included(165,
typedef struct token_info 180,
} token_info;186,
struct parser_params 198,
#define UTF8_ENC(266,
#define STR_NEW(268,
#define STR_NEW0(269,
#define STR_NEW2(270,
#define STR_NEW3(271,
#define ENC_SINGLE(272,
#define TOK_INTERN(273,
#define yyerror(283,
#define YYLEX_PARAM 285,
#define lex_strterm	287,
#define lex_state	288,
#define cond_stack	289,
#define cmdarg_stack	290,
#define class_nest	291,
#define paren_nest	292,
#define lpar_beg	293,
#define in_single	294,
#define in_def	295,
#define compile_for_eval	296,
#define cur_mid	297,
#define in_defined	298,
#define tokenbuf	299,
#define tokidx	300,
#define toksiz	301,
#define lex_input	302,
#define lex_lastline	303,
#define lex_nextline	304,
#define lex_pbeg	305,
#define lex_p	306,
#define lex_pend	307,
#define heredoc_end	308,
#define command_start	309,
#define deferred_nodes	310,
#define lex_gets_ptr	311,
#define lex_gets	312,
#define lvtbl	313,
#define ruby__end__seen	314,
#define ruby_sourceline	315,
#define ruby_sourcefile	316,
#define yydebug	317,
#define ruby_eval_tree	320,
#define ruby_eval_tree_begin	321,
#define ruby_debug_lines	322,
#define ruby_coverage	323,
#define yyparse 329,
#define rb_node_newnode(332,
#define cond(335,
#define logop(337,
#define value_expr(345,
#define void_expr0(346,
#define void_expr(347,
#define void_stmts(349,
#define reduce_nodes(351,
#define block_dup_check(353,
#define block_append(356,
#define list_append(358,
#define list_concat(360,
#define arg_append(362,
#define arg_concat(364,
#define literal_concat(366,
#define new_evstr(368,
#define evstr2dstr(370,
#define call_bin_op(374,
#define call_uni_op(376,
#define new_args(379,
#define shadowing_lvar(381,
#define ret_args(385,
#define new_yield(388,
#define gettable(391,
#define assignable(393,
#define new_bv(395,
#define aryset(397,
#define attrset(399,
#define rb_backref_error(402,
#define node_assign(404,
#define match_op(407,
#define local_push(410,
#define local_pop(412,
#define local_var(414,
#define arg_var(416,
#define local_id(418,
#define local_tbl(420,
#define internal_id(422,
#define dyna_push(425,
#define dyna_pop(427,
#define dyna_in_block(429,
#define dyna_var(430,
#define dvar_defined(432,
#define dvar_curr(434,
#define reg_compile(444,
#define reg_fragment_setenc(446,
#define reg_fragment_check(448,
#define reg_named_capture_assign(450,
#define remove_begin(453,
#define lvar_defined(456,
#define RE_OPTION_ONCE 458,
#define RE_OPTION_ENCODING_SHIFT 459,
#define RE_OPTION_ENCODING(460,
#define RE_OPTION_ENCODING_IDX(461,
#define RE_OPTION_ENCODING_NONE(462,
#define RE_OPTION_MASK 463,
#define RE_OPTION_ARG_ENCODING_NONE 464,
#define NODE_STRTERM 466,
#define NODE_HEREDOC 467,
#define SIGN_EXTEND(468,
#define nd_func 469,
#define nd_term(471,
#define nd_term(473,
#define nd_paren(475,
#define nd_nest 476,
int patern_match_set=477,
#define RIPPER_VERSION 481,
static ID ripper_id_gets;485,
#define dispatch0(494,
#define dispatch1(495,
#define dispatch2(496,
#define dispatch3(497,
#define dispatch4(498,
#define dispatch5(499,
#define yyparse 501,
#define ripper_id2sym(506,
#define arg_new(510,
#define arg_add(511,
#define arg_prepend(512,
#define arg_add_star(513,
#define arg_add_block(514,
#define arg_add_optblock(515,
#define bare_assoc(516,
#define arg_add_assocs(517,
#define args2mrhs(519,
#define mrhs_new(520,
#define mrhs_add(521,
#define mrhs_add_star(522,
#define mlhs_new(524,
#define mlhs_add(525,
#define mlhs_add_star(526,
#define params_new(528,
#define blockvar_new(531,
#define blockvar_add_star(532,
#define blockvar_add_block(533,
#define method_optarg(535,
#define method_arg(536,
#define method_add_block(537,
#define escape_Qundef(539,
#define FIXME 541,
# define ifndef_ripper(546,
# define ifndef_ripper(548,
# define rb_warn0(552,
# define rb_warnI(553,
# define rb_warnS(554,
# define rb_warning0(555,
# define rb_warningS(556,
# define rb_warn0(558,
# define rb_warnI(559,
# define rb_warnS(560,
# define rb_warning0(561,
# define rb_warningS(562,
# define rb_compile_error 574,
# define compile_error 575,
# define PARSER_ARG 576,
# define compile_error 578,
# define PARSER_ARG 579,
#define YYMAXDEPTH 587,
# define YYDEBUG 599,
# undef YYERROR_VERBOSE604,
# define YYERROR_VERBOSE 605,
# define YYERROR_VERBOSE 607,
# define YYTOKEN_TABLE 612,
typedef union YYSTYPE616,
# undef parser4848,
# undef yylex4849,
# undef yylval4850,
# define yylval 4851,
# define nextc(4860,
# define pushback(4861,
# define newtok(4862,
# define tokspace(4863,
# define tokadd(4864,
# define tok_hex(4865,
# define read_escape(4866,
# define tokadd_escape(4867,
# define regx_options(4868,
# define tokadd_string(4869,
# define parse_string(4870,
# define tokaddmbc(4871,
# define here_document(4872,
# define heredoc_identifier(4873,
# define heredoc_restore(4874,
# define whole_match_p(4875,
# define local_id(4879,
# define dyna_in_block(4880,
# define set_yylval_str(4884,
# define set_yylval_num(4885,
# define set_yylval_id(4886,
# define set_yylval_literal(4887,
# define set_yylval_node(4888,
# define yylval_id(4889,
# define set_yylval_str(4891,
# define set_yylval_num(4892,
# define set_yylval_id(4893,
# define set_yylval_literal(4894,
# define set_yylval_node(4895,
# define yylval_id(4896,
#define ripper_flush(4900,
ripper_dispatch_scan_event(4903,
ripper_dispatch_delayed_token(4915,
#undef SIGN_EXTEND_CHAR4936,
# define SIGN_EXTEND_CHAR(4938,
# define SIGN_EXTEND_CHAR(4941,
#define parser_encoding_name(4944,
#define parser_mbclen(4945,
#define parser_precise_mbclen(4946,
#define is_identchar(4947,
#define parser_is_identchar(4948,
#define parser_isascii(4950,
token_info_get_column(4954,
token_info_has_nonspaces(4968,
token_info_push(4980,
token_info_pop(4996,
parser_yyerror(5023,
debug_lines(5089,
coverage(5104,
e_option_supplied(5122,
yycompile0(5130,
yycompile(5183,
lex_get_str(5192,
lex_getline(5211,
rb_compile_string(5227,
rb_parser_compile_string(5235,
rb_compile_cstr(5255,
rb_parser_compile_cstr(5261,
lex_io_gets(5267,
rb_compile_file(5273,
rb_parser_compile_file(5281,
#define STR_FUNC_ESCAPE 5300,
#define STR_FUNC_EXPAND 5301,
#define STR_FUNC_REGEXP 5302,
#define STR_FUNC_QWORDS 5303,
#define STR_FUNC_SYMBOL 5304,
#define STR_FUNC_INDENT 5305,
enum string_type 5307,
    str_squote 5308,
    str_dquote 5309,
    str_dquote = (STR_FUNC_EXPAND)5309,
    str_xquote 5310,
    str_xquote = (STR_FUNC_EXPAND)5310,
    str_regexp 5311,
    str_regexp = (STR_FUNC_REGEXP|STR_FUNC_REGEXP5311,
    str_regexp = (STR_FUNC_REGEXP|STR_FUNC_ESCAPE|STR_FUNC_ESCAPE5311,
    str_regexp = (STR_FUNC_REGEXP|STR_FUNC_ESCAPE|STR_FUNC_EXPAND)STR_FUNC_EXPAND5311,
    str_sword 5312,
    str_sword  = (STR_FUNC_QWORDS)5312,
    str_dword 5313,
    str_dword  = (STR_FUNC_QWORDS|STR_FUNC_QWORDS5313,
    str_dword  = (STR_FUNC_QWORDS|STR_FUNC_EXPAND)STR_FUNC_EXPAND5313,
    str_ssym 5314,
    str_ssym   = (STR_FUNC_SYMBOL)5314,
    str_dsym 5315,
    str_dsym   = (STR_FUNC_SYMBOL|STR_FUNC_SYMBOL5315,
    str_dsym   = (STR_FUNC_SYMBOL|STR_FUNC_EXPAND)STR_FUNC_EXPAND5315,
parser_str_new(5319,
#define lex_goto_eol(5335,
#define peek(5336,
parser_nextc(5339,
parser_pushback(5396,
#define was_bol(5405,
#define tokfix(5407,
#define tok(5408,
#define toklen(5409,
#define toklast(5410,
parser_newtok(5413,
parser_tokspace(5428,
parser_tokadd(5440,
parser_tok_hex(5450,
#define tokcopy(5463,
parser_tokadd_utf8(5466,
#define ESCAPE_CONTROL 5547,
#define ESCAPE_META 5548,
parser_read_escape(5551,
parser_tokaddmbc(5646,
parser_tokadd_escape(5653,
parser_regx_options(5735,
dispose_string(5764,
parser_tokadd_mbchar(5773,
#define tokadd_mbchar(5786,
parser_tokadd_string(5789,
#define mixed_error(5799,
#define mixed_escape(5809,
#define NEW_STRTERM(5915,
parser_parse_string(5919,
parser_heredoc_identifier(5980,
parser_heredoc_restore(6044,
parser_whole_match_p(6069,
parser_here_document(6085,
arg_ambiguous_gen(6177,
arg_ambiguous_gen(6183,
#define arg_ambiguous(6188,
lvar_defined_gen(6191,
parser_encode_length(6202,
parser_set_encode(6220,
comment_at_top(6246,
typedef int (*rb_magic_comment_length_t)rb_magic_comment_length_t6258,
typedef void (*rb_magic_comment_setter_t)rb_magic_comment_setter_t6259,
magic_comment_encoding(6262,
struct magic_comment 6272,
static const struct magic_comment magic_comments[magic_comments6278,
magic_comment_marker(6285,
parser_magic_comment(6318,
#define str_copy(6322,
set_file_encoding(6410,
parser_prepare(6453,
#define IS_ARG(6477,
#define IS_BEG(6478,
parser_yylex(6481,
yylex(7770,
node_newnode(7797,
nodetype(7805,
nodeline(7811,
newline_node(7817,
fixpos(7827,
parser_warning(7836,
#define parser_warning(7840,
parser_warn(7843,
#define parser_warn(7847,
block_append_gen(7850,
list_append_gen(7904,
list_concat_gen(7924,
literal_concat0(7948,
literal_concat_gen(7964,
evstr2dstr_gen(8019,
new_evstr_gen(8028,
call_bin_op_gen(8042,
call_uni_op_gen(8050,
match_op_gen(8057,
gettable_gen(8091,
assignable_gen(8153,
shadowing_lvar_gen(8227,
new_bv_gen(8250,
aryset_gen(8263,
block_dup_check_gen(8271,
rb_id_attrset(8279,
attrset_gen(8287,
rb_backref_error_gen(8295,
arg_concat_gen(8308,
arg_append_gen(8330,
splat_array(8348,
node_assign_gen(8356,
value_expr_gen(8387,
void_expr_gen(8449,
void_stmts_gen(8538,
remove_begin(8552,
reduce_nodes_gen(8562,
#define subnodes(8570,
#undef subnodes8611,
assign_in_cond(8615,
warn_unless_e_option(8654,
warning_unless_e_option(8660,
fixup_nodes(8666,
range_op(8697,
literal_node(8713,
cond0(8734,
cond_gen(8791,
logop_gen(8798,
no_blockarg(8813,
ret_args_gen(8821,
new_yield_gen(8838,
negate_lit(8855,
arg_blk_pass(8874,
new_args_gen(8884,
local_push_gen(8909,
local_pop_gen(8921,
vtable_tblcpy(8931,
local_tbl_gen(8946,
arg_var_gen(8960,
local_var_gen(8967,
local_id_gen(8974,
dyna_push_gen(8996,
dyna_pop_gen(9003,
dyna_in_block_gen(9016,
dvar_defined_gen(9022,
dvar_curr_gen(9048,
reg_fragment_setenc_gen(9058,
reg_fragment_check_gen(9097,
} reg_named_capture_assign_t;9115,
reg_named_capture_assign_iter(9118,
reg_named_capture_assign_gen(9157,
reg_compile_gen(9189,
rb_gc_mark_parser(9213,
rb_parser_append_print(9218,
rb_parser_while_loop(9250,
} op_tbl[op_tbl9293,
#define op_tbl_count 9316,
static struct symbols 9318,
} global_symbols 9325,
static const struct st_hash_type symhash 9327,
struct ivar2_key 9332,
ivar2_cmp(9338,
ivar2_hash(9347,
static const struct st_hash_type ivar2_hash_type 9352,
Init_sym(9358,
rb_gc_mark_symbols(9369,
internal_id_gen(9377,
is_special_global_name(9385,
rb_symname_p(9416,
rb_enc_symname_p(9422,
rb_enc_symname2_p(9428,
register_symid(9511,
rb_intern3(9521,
rb_intern2(9636,
#undef rb_intern9641,
rb_intern(9643,
rb_intern_str(9649,
rb_id2str(9666,
rb_id2name(9727,
symbols_i(9736,
rb_sym_all_symbols(9759,
rb_is_const_id(9768,
rb_is_class_id(9775,
rb_is_instance_id(9782,
rb_is_local_id(9789,
rb_is_junk_id(9796,
parser_initialize(9805,
#define parser_mark 9852,
#define parser_free 9853,
parser_mark(9857,
parser_free(9883,
parser_new(9907,
rb_parser_new(9918,
rb_parser_end_seen_p(9933,
rb_parser_encoding(9948,
rb_parser_get_yydebug(9963,
rb_parser_set_yydebug(9978,
#define HEAPCNT(9988,
#define NEWHEAP(9989,
#define ADD2HEAP(9990,
rb_parser_malloc(9994,
rb_parser_calloc(10004,
rb_parser_realloc(10014,
rb_parser_free(10034,
ripper_validate_object(10057,
#define validate(10085,
ripper_dispatch0(10088,
ripper_dispatch1(10094,
ripper_dispatch2(10101,
ripper_dispatch3(10109,
ripper_dispatch4(10118,
ripper_dispatch5(10128,
static const struct kw_assoc 10138,
} keyword_to_name[keyword_to_name10141,
keyword_id_to_str(10195,
#undef ripper_id2sym10206,
ripper_id2sym(10208,
ripper_intern(10239,
ripper_compile_error(10245,
ripper_warn0(10257,
ripper_warnI(10263,
ripper_warnS(10271,
ripper_warning0(10279,
ripper_warningS(10285,
ripper_lex_get_generic(10292,
ripper_s_allocate(10298,
#define ripper_initialized_p(10310,
ripper_initialize(10323,
struct ripper_args 10356,
ripper_parse0(10363,
ripper_ensure(10374,
ripper_parse(10390,
ripper_column(10418,
ripper_lineno(10440,
ripper_assert_Qundef(10455,
ripper_value(10466,
Init_ripper(10473,

transdb.h,0

lex.c,0
